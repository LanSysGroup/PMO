//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanSysWebGIS
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using LanSysWebGIS.Web;
    
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class WebContext : WebContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the WebContext class.
        /// </summary>
        public WebContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="System.Windows.Application.ApplicationLifetimeObjects"/>
        public new static WebContext Current
        {
            get
            {
                return ((WebContext)(WebContextBase.Current));
            }
        }
        
        /// <summary>
        /// Gets a user representing the authenticated identity.
        /// </summary>
        public new User User
        {
            get
            {
                return ((User)(base.User));
            }
        }
    }
}
namespace LanSysWebGIS.Web
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using System.ServiceModel.Web;
    using System.Xml.Serialization;
    using LanSysWebGIS.Web.Models;
    using LanSysWebGIS.Web.Resources;
    
    
    /// <summary>
    /// The 'Applications' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Applications : Entity
    {
        
        private Guid _applicationId;
        
        private string _applicationName;
        
        private string _description;
        
        private EntityCollection<Memberships> _memberships;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationIdChanging(Guid value);
        partial void OnApplicationIdChanged();
        partial void OnApplicationNameChanging(string value);
        partial void OnApplicationNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Applications"/> class.
        /// </summary>
        public Applications()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ApplicationId
        {
            get
            {
                return this._applicationId;
            }
            set
            {
                if ((this._applicationId != value))
                {
                    this.OnApplicationIdChanging(value);
                    this.ValidateProperty("ApplicationId", value);
                    this._applicationId = value;
                    this.RaisePropertyChanged("ApplicationId");
                    this.OnApplicationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(235)]
        public string ApplicationName
        {
            get
            {
                return this._applicationName;
            }
            set
            {
                if ((this._applicationName != value))
                {
                    this.OnApplicationNameChanging(value);
                    this.RaiseDataMemberChanging("ApplicationName");
                    this.ValidateProperty("ApplicationName", value);
                    this._applicationName = value;
                    this.RaiseDataMemberChanged("ApplicationName");
                    this.OnApplicationNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Description' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((this._description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._description = value;
                    this.RaiseDataMemberChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Memberships"/> entity instances.
        /// </summary>
        [Association("Applications_Memberships", "ApplicationId", "ApplicationId")]
        [XmlIgnore()]
        public EntityCollection<Memberships> Memberships
        {
            get
            {
                if ((this._memberships == null))
                {
                    this._memberships = new EntityCollection<Memberships>(this, "Memberships", this.FilterMemberships, this.AttachMemberships, this.DetachMemberships);
                }
                return this._memberships;
            }
        }
        
        private void AttachMemberships(Memberships entity)
        {
            entity.Applications = this;
        }
        
        private void DetachMemberships(Memberships entity)
        {
            entity.Applications = null;
        }
        
        private bool FilterMemberships(Memberships entity)
        {
            return (entity.ApplicationId == this.ApplicationId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._applicationId;
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'AuthenticationService' DomainService.
    /// </summary>
    public sealed partial class AuthenticationContext : global::System.ServiceModel.DomainServices.Client.ApplicationServices.AuthenticationDomainContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationContext"/> class.
        /// </summary>
        public AuthenticationContext() : 
                this(new WebDomainClient<IAuthenticationServiceContract>(new Uri("LanSysWebGIS-Web-AuthenticationService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The AuthenticationService service URI.</param>
        public AuthenticationContext(Uri serviceUri) : 
                this(new WebDomainClient<IAuthenticationServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public AuthenticationContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="CustomizedProfile"/> entity instances that have been loaded into this <see cref="AuthenticationContext"/> instance.
        /// </summary>
        public EntitySet<CustomizedProfile> CustomizedProfiles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<CustomizedProfile>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="AuthenticationServiceUser"/> entity instances that have been loaded into this <see cref="AuthenticationContext"/> instance.
        /// </summary>
        public EntitySet<AuthenticationServiceUser> AuthenticationServiceUsers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<AuthenticationServiceUser>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="User"/> entity instances that have been loaded into this <see cref="AuthenticationContext"/> instance.
        /// </summary>
        public EntitySet<User> Users
        {
            get
            {
                return base.EntityContainer.GetEntitySet<User>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="CustomizedProfile"/> entity instances using the 'GetAllProfiles' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="CustomizedProfile"/> entity instances.</returns>
        public EntityQuery<CustomizedProfile> GetAllProfilesQuery()
        {
            this.ValidateMethod("GetAllProfilesQuery", null);
            return base.CreateQuery<CustomizedProfile>("GetAllProfiles", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="AuthenticationServiceUser"/> entity instances using the 'GetAllUsers' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="AuthenticationServiceUser"/> entity instances.</returns>
        public EntityQuery<AuthenticationServiceUser> GetAllUsersQuery()
        {
            this.ValidateMethod("GetAllUsersQuery", null);
            return base.CreateQuery<AuthenticationServiceUser>("GetAllUsers", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="CustomizedProfile"/> entity instances using the 'GetOnlineUsers' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="CustomizedProfile"/> entity instances.</returns>
        public EntityQuery<CustomizedProfile> GetOnlineUsersQuery()
        {
            this.ValidateMethod("GetOnlineUsersQuery", null);
            return base.CreateQuery<CustomizedProfile>("GetOnlineUsers", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="CustomizedProfile"/> entity instances using the 'GetProfile' query.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="CustomizedProfile"/> entity instances.</returns>
        public EntityQuery<CustomizedProfile> GetProfileQuery(string userName)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            this.ValidateMethod("GetProfileQuery", parameters);
            return base.CreateQuery<CustomizedProfile>("GetProfile", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="User"/> entity instances using the 'GetUser' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="User"/> entity instances.</returns>
        public EntityQuery<User> GetUserQuery()
        {
            this.ValidateMethod("GetUserQuery", null);
            return base.CreateQuery<User>("GetUser", null, false, false);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="User"/> entity instances using the 'Login' query.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of the query.</param>
        /// <param name="password">The value for the 'password' parameter of the query.</param>
        /// <param name="isPersistent">The value for the 'isPersistent' parameter of the query.</param>
        /// <param name="customData">The value for the 'customData' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="User"/> entity instances.</returns>
        public EntityQuery<User> LoginQuery(string userName, string password, bool isPersistent, string customData)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("password", password);
            parameters.Add("isPersistent", isPersistent);
            parameters.Add("customData", customData);
            this.ValidateMethod("LoginQuery", parameters);
            return base.CreateQuery<User>("Login", parameters, true, false);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="User"/> entity instances using the 'Logout' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="User"/> entity instances.</returns>
        public EntityQuery<User> LogoutQuery()
        {
            this.ValidateMethod("LogoutQuery", null);
            return base.CreateQuery<User>("Logout", null, true, false);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="AuthenticationServiceUser"/> entity instances using the 'MyGetUser' query.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="AuthenticationServiceUser"/> entity instances.</returns>
        public EntityQuery<AuthenticationServiceUser> MyGetUserQuery(string username)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            this.ValidateMethod("MyGetUserQuery", parameters);
            return base.CreateQuery<AuthenticationServiceUser>("MyGetUser", parameters, false, true);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'UpdateProfile' method of the DomainService.
        /// </summary>
        /// <param name="newProfile">The value for the 'newProfile' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation UpdateProfile(CustomizedProfile newProfile, Action<InvokeOperation> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("newProfile", newProfile);
            this.ValidateMethod("UpdateProfile", parameters);
            return this.InvokeOperation("UpdateProfile", typeof(void), parameters, true, callback, userState);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'UpdateProfile' method of the DomainService.
        /// </summary>
        /// <param name="newProfile">The value for the 'newProfile' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation UpdateProfile(CustomizedProfile newProfile)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("newProfile", newProfile);
            this.ValidateMethod("UpdateProfile", parameters);
            return this.InvokeOperation("UpdateProfile", typeof(void), parameters, true, null, null);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new AuthenticationContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'AuthenticationService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IAuthenticationServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetAllProfiles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/GetAllProfilesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/GetAllProfiles", ReplyAction="http://tempuri.org/AuthenticationService/GetAllProfilesResponse")]
            [WebGet()]
            IAsyncResult BeginGetAllProfiles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetAllProfiles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetAllProfiles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetAllProfiles' operation.</returns>
            QueryResult<CustomizedProfile> EndGetAllProfiles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetAllUsers' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/GetAllUsersDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/GetAllUsers", ReplyAction="http://tempuri.org/AuthenticationService/GetAllUsersResponse")]
            [WebGet()]
            IAsyncResult BeginGetAllUsers(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetAllUsers'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetAllUsers'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetAllUsers' operation.</returns>
            QueryResult<AuthenticationServiceUser> EndGetAllUsers(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetOnlineUsers' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/GetOnlineUsersDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/GetOnlineUsers", ReplyAction="http://tempuri.org/AuthenticationService/GetOnlineUsersResponse")]
            [WebGet()]
            IAsyncResult BeginGetOnlineUsers(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetOnlineUsers'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetOnlineUsers'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetOnlineUsers' operation.</returns>
            QueryResult<CustomizedProfile> EndGetOnlineUsers(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetProfile' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/GetProfileDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/GetProfile", ReplyAction="http://tempuri.org/AuthenticationService/GetProfileResponse")]
            [WebGet()]
            IAsyncResult BeginGetProfile(string userName, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetProfile'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetProfile'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetProfile' operation.</returns>
            QueryResult<CustomizedProfile> EndGetProfile(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUser' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/GetUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/GetUser", ReplyAction="http://tempuri.org/AuthenticationService/GetUserResponse")]
            [WebGet()]
            IAsyncResult BeginGetUser(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUser'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUser' operation.</returns>
            QueryResult<User> EndGetUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'Login' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="password">The value for the 'password' parameter of this action.</param>
            /// <param name="isPersistent">The value for the 'isPersistent' parameter of this action.</param>
            /// <param name="customData">The value for the 'customData' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/LoginDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/Login", ReplyAction="http://tempuri.org/AuthenticationService/LoginResponse")]
            IAsyncResult BeginLogin(string userName, string password, bool isPersistent, string customData, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginLogin'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginLogin'.</param>
            /// <returns>The 'QueryResult' returned from the 'Login' operation.</returns>
            QueryResult<User> EndLogin(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'Logout' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/LogoutDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/Logout", ReplyAction="http://tempuri.org/AuthenticationService/LogoutResponse")]
            IAsyncResult BeginLogout(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginLogout'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginLogout'.</param>
            /// <returns>The 'QueryResult' returned from the 'Logout' operation.</returns>
            QueryResult<User> EndLogout(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'MyGetUser' operation.
            /// </summary>
            /// <param name="username">The value for the 'username' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/MyGetUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/MyGetUser", ReplyAction="http://tempuri.org/AuthenticationService/MyGetUserResponse")]
            [WebGet()]
            IAsyncResult BeginMyGetUser(string username, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginMyGetUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginMyGetUser'.</param>
            /// <returns>The 'QueryResult' returned from the 'MyGetUser' operation.</returns>
            QueryResult<AuthenticationServiceUser> EndMyGetUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'UpdateProfile' operation.
            /// </summary>
            /// <param name="newProfile">The value for the 'newProfile' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/UpdateProfileDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/UpdateProfile", ReplyAction="http://tempuri.org/AuthenticationService/UpdateProfileResponse")]
            IAsyncResult BeginUpdateProfile(CustomizedProfile newProfile, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginUpdateProfile'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginUpdateProfile'.</param>
            void EndUpdateProfile(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/AuthenticationService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AuthenticationService/SubmitChanges", ReplyAction="http://tempuri.org/AuthenticationService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class AuthenticationContextEntityContainer : EntityContainer
        {
            
            public AuthenticationContextEntityContainer()
            {
                this.CreateEntitySet<CustomizedProfile>(EntitySetOperations.All);
                this.CreateEntitySet<AuthenticationServiceUser>((EntitySetOperations.Edit | EntitySetOperations.Remove));
                this.CreateEntitySet<User>(EntitySetOperations.Edit);
            }
        }
    }
    
    public enum CreateUserStatus
    {
        
        Success = 0,
        
        InvalidUserName = 1,
        
        InvalidPassword = 2,
        
        InvalidQuestion = 3,
        
        InvalidAnswer = 4,
        
        InvalidEmail = 5,
        
        DuplicateUserName = 6,
        
        DuplicateEmail = 7,
        
        Failure = 8,
    }
    
    /// <summary>
    /// The 'CustomizedProfile' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class CustomizedProfile : Entity
    {
        
        private string _isChangePasswordNeeded;
        
        private string _userComment;
        
        private string _userEmail;
        
        private string _userFirstName;
        
        private string _userID;
        
        private string _userLastName;
        
        private string _userName;
        
        private string _userOrganization;
        
        private string _userRole;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIsChangePasswordNeededChanging(string value);
        partial void OnIsChangePasswordNeededChanged();
        partial void OnUserCommentChanging(string value);
        partial void OnUserCommentChanged();
        partial void OnUserEmailChanging(string value);
        partial void OnUserEmailChanged();
        partial void OnUserFirstNameChanging(string value);
        partial void OnUserFirstNameChanged();
        partial void OnUserIDChanging(string value);
        partial void OnUserIDChanged();
        partial void OnUserLastNameChanging(string value);
        partial void OnUserLastNameChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnUserOrganizationChanging(string value);
        partial void OnUserOrganizationChanged();
        partial void OnUserRoleChanging(string value);
        partial void OnUserRoleChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomizedProfile"/> class.
        /// </summary>
        public CustomizedProfile()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'IsChangePasswordNeeded' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [Editable(true)]
        public string IsChangePasswordNeeded
        {
            get
            {
                return this._isChangePasswordNeeded;
            }
            set
            {
                if ((this._isChangePasswordNeeded != value))
                {
                    this.OnIsChangePasswordNeededChanging(value);
                    this.RaiseDataMemberChanging("IsChangePasswordNeeded");
                    this.ValidateProperty("IsChangePasswordNeeded", value);
                    this._isChangePasswordNeeded = value;
                    this.RaiseDataMemberChanged("IsChangePasswordNeeded");
                    this.OnIsChangePasswordNeededChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserComment' value.
        /// </summary>
        [DataMember()]
        [Display(Name="UserCommentLabel", Order=7, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        public string UserComment
        {
            get
            {
                return this._userComment;
            }
            set
            {
                if ((this._userComment != value))
                {
                    this.OnUserCommentChanging(value);
                    this.RaiseDataMemberChanging("UserComment");
                    this.ValidateProperty("UserComment", value);
                    this._userComment = value;
                    this.RaiseDataMemberChanged("UserComment");
                    this.OnUserCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserEmail' value.
        /// </summary>
        [DataMember()]
        [Display(Name="EmailLabel", Order=4, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        [RegularExpression("^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4" +
            "}|[0-9]{1,3})(\\]?)$", ErrorMessageResourceName="ValidationErrorInvalidEmail", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        public string UserEmail
        {
            get
            {
                return this._userEmail;
            }
            set
            {
                if ((this._userEmail != value))
                {
                    this.OnUserEmailChanging(value);
                    this.RaiseDataMemberChanging("UserEmail");
                    this.ValidateProperty("UserEmail", value);
                    this._userEmail = value;
                    this.RaiseDataMemberChanged("UserEmail");
                    this.OnUserEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserFirstName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="FirstNameLabel", Order=1, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        public string UserFirstName
        {
            get
            {
                return this._userFirstName;
            }
            set
            {
                if ((this._userFirstName != value))
                {
                    this.OnUserFirstNameChanging(value);
                    this.RaiseDataMemberChanging("UserFirstName");
                    this.ValidateProperty("UserFirstName", value);
                    this._userFirstName = value;
                    this.RaiseDataMemberChanged("UserFirstName");
                    this.OnUserFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        [Display(Name="UserIDLabel", Order=8, ResourceType=typeof(RegistrationDataResources))]
        [Editable(false)]
        public string UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaisePropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserLastName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="LastNameLabel", Order=2, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        public string UserLastName
        {
            get
            {
                return this._userLastName;
            }
            set
            {
                if ((this._userLastName != value))
                {
                    this.OnUserLastNameChanging(value);
                    this.RaiseDataMemberChanging("UserLastName");
                    this.ValidateProperty("UserLastName", value);
                    this._userLastName = value;
                    this.RaiseDataMemberChanged("UserLastName");
                    this.OnUserLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="UserNameLabel", Order=3, ResourceType=typeof(RegistrationDataResources))]
        [Editable(false)]
        [Key()]
        [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        [RoundtripOriginal()]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaisePropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserOrganization' value.
        /// </summary>
        [DataMember()]
        [Display(Name="OrganizationNameLabel", Order=5, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        public string UserOrganization
        {
            get
            {
                return this._userOrganization;
            }
            set
            {
                if ((this._userOrganization != value))
                {
                    this.OnUserOrganizationChanging(value);
                    this.RaiseDataMemberChanging("UserOrganization");
                    this.ValidateProperty("UserOrganization", value);
                    this._userOrganization = value;
                    this.RaiseDataMemberChanged("UserOrganization");
                    this.OnUserOrganizationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserRole' value.
        /// </summary>
        [DataMember()]
        [Display(Name="RoleNameLabel", Order=6, ResourceType=typeof(RegistrationDataResources))]
        [Editable(true)]
        [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        public string UserRole
        {
            get
            {
                return this._userRole;
            }
            set
            {
                if ((this._userRole != value))
                {
                    this.OnUserRoleChanging(value);
                    this.RaiseDataMemberChanging("UserRole");
                    this.ValidateProperty("UserRole", value);
                    this._userRole = value;
                    this.RaiseDataMemberChanged("UserRole");
                    this.OnUserRoleChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._userName;
        }
    }
    
    /// <summary>
    /// The 'Deliver_DelHgDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_DelHgDetail : Entity
    {
        
        private int _delHgID;
        
        private string _fromDate;
        
        private int _id;
        
        private string _infoDesc;
        
        private string _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDelHgIDChanging(int value);
        partial void OnDelHgIDChanged();
        partial void OnFromDateChanging(string value);
        partial void OnFromDateChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnInfoDescChanging(string value);
        partial void OnInfoDescChanged();
        partial void OnToDateChanging(string value);
        partial void OnToDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_DelHgDetail"/> class.
        /// </summary>
        public Deliver_DelHgDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DelHgID' value.
        /// </summary>
        [DataMember()]
        public int DelHgID
        {
            get
            {
                return this._delHgID;
            }
            set
            {
                if ((this._delHgID != value))
                {
                    this.OnDelHgIDChanging(value);
                    this.RaiseDataMemberChanging("DelHgID");
                    this.ValidateProperty("DelHgID", value);
                    this._delHgID = value;
                    this.RaiseDataMemberChanged("DelHgID");
                    this.OnDelHgIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FromDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnFromDateChanging(value);
                    this.RaiseDataMemberChanging("FromDate");
                    this.ValidateProperty("FromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("FromDate");
                    this.OnFromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string InfoDesc
        {
            get
            {
                return this._infoDesc;
            }
            set
            {
                if ((this._infoDesc != value))
                {
                    this.OnInfoDescChanging(value);
                    this.RaiseDataMemberChanging("InfoDesc");
                    this.ValidateProperty("InfoDesc", value);
                    this._infoDesc = value;
                    this.RaiseDataMemberChanged("InfoDesc");
                    this.OnInfoDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ToDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ToDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OnToDateChanging(value);
                    this.RaiseDataMemberChanging("ToDate");
                    this.ValidateProperty("ToDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("ToDate");
                    this.OnToDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_DelHoghooghi' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_DelHoghooghi : Entity
    {
        
        private string _company;
        
        private string _deliverDate;
        
        private string _deliverer;
        
        private int _id;
        
        private string _letterNo;
        
        private string _reqDate;
        
        private string _requester;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        partial void OnDeliverDateChanging(string value);
        partial void OnDeliverDateChanged();
        partial void OnDelivererChanging(string value);
        partial void OnDelivererChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLetterNoChanging(string value);
        partial void OnLetterNoChanged();
        partial void OnReqDateChanging(string value);
        partial void OnReqDateChanged();
        partial void OnRequesterChanging(string value);
        partial void OnRequesterChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_DelHoghooghi"/> class.
        /// </summary>
        public Deliver_DelHoghooghi()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Company' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Company
        {
            get
            {
                return this._company;
            }
            set
            {
                if ((this._company != value))
                {
                    this.OnCompanyChanging(value);
                    this.RaiseDataMemberChanging("Company");
                    this.ValidateProperty("Company", value);
                    this._company = value;
                    this.RaiseDataMemberChanged("Company");
                    this.OnCompanyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DeliverDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string DeliverDate
        {
            get
            {
                return this._deliverDate;
            }
            set
            {
                if ((this._deliverDate != value))
                {
                    this.OnDeliverDateChanging(value);
                    this.RaiseDataMemberChanging("DeliverDate");
                    this.ValidateProperty("DeliverDate", value);
                    this._deliverDate = value;
                    this.RaiseDataMemberChanged("DeliverDate");
                    this.OnDeliverDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Deliverer' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Deliverer
        {
            get
            {
                return this._deliverer;
            }
            set
            {
                if ((this._deliverer != value))
                {
                    this.OnDelivererChanging(value);
                    this.RaiseDataMemberChanging("Deliverer");
                    this.ValidateProperty("Deliverer", value);
                    this._deliverer = value;
                    this.RaiseDataMemberChanged("Deliverer");
                    this.OnDelivererChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterNo
        {
            get
            {
                return this._letterNo;
            }
            set
            {
                if ((this._letterNo != value))
                {
                    this.OnLetterNoChanging(value);
                    this.RaiseDataMemberChanging("LetterNo");
                    this.ValidateProperty("LetterNo", value);
                    this._letterNo = value;
                    this.RaiseDataMemberChanged("LetterNo");
                    this.OnLetterNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ReqDate
        {
            get
            {
                return this._reqDate;
            }
            set
            {
                if ((this._reqDate != value))
                {
                    this.OnReqDateChanging(value);
                    this.RaiseDataMemberChanging("ReqDate");
                    this.ValidateProperty("ReqDate", value);
                    this._reqDate = value;
                    this.RaiseDataMemberChanged("ReqDate");
                    this.OnReqDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Requester' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Requester
        {
            get
            {
                return this._requester;
            }
            set
            {
                if ((this._requester != value))
                {
                    this.OnRequesterChanging(value);
                    this.RaiseDataMemberChanging("Requester");
                    this.ValidateProperty("Requester", value);
                    this._requester = value;
                    this.RaiseDataMemberChanged("Requester");
                    this.OnRequesterChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_DelStu' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_DelStu : Entity
    {
        
        private string _deliverDate;
        
        private string _deliverer;
        
        private int _id;
        
        private string _letterNo;
        
        private string _reqDate;
        
        private string _requester;
        
        private string _university;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDeliverDateChanging(string value);
        partial void OnDeliverDateChanged();
        partial void OnDelivererChanging(string value);
        partial void OnDelivererChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLetterNoChanging(string value);
        partial void OnLetterNoChanged();
        partial void OnReqDateChanging(string value);
        partial void OnReqDateChanged();
        partial void OnRequesterChanging(string value);
        partial void OnRequesterChanged();
        partial void OnUniversityChanging(string value);
        partial void OnUniversityChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_DelStu"/> class.
        /// </summary>
        public Deliver_DelStu()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DeliverDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string DeliverDate
        {
            get
            {
                return this._deliverDate;
            }
            set
            {
                if ((this._deliverDate != value))
                {
                    this.OnDeliverDateChanging(value);
                    this.RaiseDataMemberChanging("DeliverDate");
                    this.ValidateProperty("DeliverDate", value);
                    this._deliverDate = value;
                    this.RaiseDataMemberChanged("DeliverDate");
                    this.OnDeliverDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Deliverer' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Deliverer
        {
            get
            {
                return this._deliverer;
            }
            set
            {
                if ((this._deliverer != value))
                {
                    this.OnDelivererChanging(value);
                    this.RaiseDataMemberChanging("Deliverer");
                    this.ValidateProperty("Deliverer", value);
                    this._deliverer = value;
                    this.RaiseDataMemberChanged("Deliverer");
                    this.OnDelivererChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterNo
        {
            get
            {
                return this._letterNo;
            }
            set
            {
                if ((this._letterNo != value))
                {
                    this.OnLetterNoChanging(value);
                    this.RaiseDataMemberChanging("LetterNo");
                    this.ValidateProperty("LetterNo", value);
                    this._letterNo = value;
                    this.RaiseDataMemberChanged("LetterNo");
                    this.OnLetterNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ReqDate
        {
            get
            {
                return this._reqDate;
            }
            set
            {
                if ((this._reqDate != value))
                {
                    this.OnReqDateChanging(value);
                    this.RaiseDataMemberChanging("ReqDate");
                    this.ValidateProperty("ReqDate", value);
                    this._reqDate = value;
                    this.RaiseDataMemberChanged("ReqDate");
                    this.OnReqDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Requester' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Requester
        {
            get
            {
                return this._requester;
            }
            set
            {
                if ((this._requester != value))
                {
                    this.OnRequesterChanging(value);
                    this.RaiseDataMemberChanging("Requester");
                    this.ValidateProperty("Requester", value);
                    this._requester = value;
                    this.RaiseDataMemberChanged("Requester");
                    this.OnRequesterChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'University' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string University
        {
            get
            {
                return this._university;
            }
            set
            {
                if ((this._university != value))
                {
                    this.OnUniversityChanging(value);
                    this.RaiseDataMemberChanging("University");
                    this.ValidateProperty("University", value);
                    this._university = value;
                    this.RaiseDataMemberChanged("University");
                    this.OnUniversityChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_DelStuDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_DelStuDetail : Entity
    {
        
        private int _delStuID;
        
        private string _fromDate;
        
        private int _id;
        
        private string _infoDesc;
        
        private string _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDelStuIDChanging(int value);
        partial void OnDelStuIDChanged();
        partial void OnFromDateChanging(string value);
        partial void OnFromDateChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnInfoDescChanging(string value);
        partial void OnInfoDescChanged();
        partial void OnToDateChanging(string value);
        partial void OnToDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_DelStuDetail"/> class.
        /// </summary>
        public Deliver_DelStuDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DelStuID' value.
        /// </summary>
        [DataMember()]
        public int DelStuID
        {
            get
            {
                return this._delStuID;
            }
            set
            {
                if ((this._delStuID != value))
                {
                    this.OnDelStuIDChanging(value);
                    this.RaiseDataMemberChanging("DelStuID");
                    this.ValidateProperty("DelStuID", value);
                    this._delStuID = value;
                    this.RaiseDataMemberChanged("DelStuID");
                    this.OnDelStuIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FromDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnFromDateChanging(value);
                    this.RaiseDataMemberChanging("FromDate");
                    this.ValidateProperty("FromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("FromDate");
                    this.OnFromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string InfoDesc
        {
            get
            {
                return this._infoDesc;
            }
            set
            {
                if ((this._infoDesc != value))
                {
                    this.OnInfoDescChanging(value);
                    this.RaiseDataMemberChanging("InfoDesc");
                    this.ValidateProperty("InfoDesc", value);
                    this._infoDesc = value;
                    this.RaiseDataMemberChanged("InfoDesc");
                    this.OnInfoDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ToDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ToDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OnToDateChanging(value);
                    this.RaiseDataMemberChanging("ToDate");
                    this.ValidateProperty("ToDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("ToDate");
                    this.OnToDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_ReqHgDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_ReqHgDetail : Entity
    {
        
        private string _fromDate;
        
        private int _id;
        
        private string _infoDesc;
        
        private int _reqHgID;
        
        private string _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFromDateChanging(string value);
        partial void OnFromDateChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnInfoDescChanging(string value);
        partial void OnInfoDescChanged();
        partial void OnReqHgIDChanging(int value);
        partial void OnReqHgIDChanged();
        partial void OnToDateChanging(string value);
        partial void OnToDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_ReqHgDetail"/> class.
        /// </summary>
        public Deliver_ReqHgDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FromDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnFromDateChanging(value);
                    this.RaiseDataMemberChanging("FromDate");
                    this.ValidateProperty("FromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("FromDate");
                    this.OnFromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string InfoDesc
        {
            get
            {
                return this._infoDesc;
            }
            set
            {
                if ((this._infoDesc != value))
                {
                    this.OnInfoDescChanging(value);
                    this.RaiseDataMemberChanging("InfoDesc");
                    this.ValidateProperty("InfoDesc", value);
                    this._infoDesc = value;
                    this.RaiseDataMemberChanged("InfoDesc");
                    this.OnInfoDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqHgID' value.
        /// </summary>
        [DataMember()]
        public int ReqHgID
        {
            get
            {
                return this._reqHgID;
            }
            set
            {
                if ((this._reqHgID != value))
                {
                    this.OnReqHgIDChanging(value);
                    this.RaiseDataMemberChanging("ReqHgID");
                    this.ValidateProperty("ReqHgID", value);
                    this._reqHgID = value;
                    this.RaiseDataMemberChanged("ReqHgID");
                    this.OnReqHgIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ToDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ToDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OnToDateChanging(value);
                    this.RaiseDataMemberChanging("ToDate");
                    this.ValidateProperty("ToDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("ToDate");
                    this.OnToDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_ReqHoghoghi' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_ReqHoghoghi : Entity
    {
        
        private string _company;
        
        private int _id;
        
        private string _letterNo;
        
        private string _projectDesc;
        
        private string _region;
        
        private string _reqDate;
        
        private string _requester;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLetterNoChanging(string value);
        partial void OnLetterNoChanged();
        partial void OnProjectDescChanging(string value);
        partial void OnProjectDescChanged();
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        partial void OnReqDateChanging(string value);
        partial void OnReqDateChanged();
        partial void OnRequesterChanging(string value);
        partial void OnRequesterChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_ReqHoghoghi"/> class.
        /// </summary>
        public Deliver_ReqHoghoghi()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Company' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Company
        {
            get
            {
                return this._company;
            }
            set
            {
                if ((this._company != value))
                {
                    this.OnCompanyChanging(value);
                    this.RaiseDataMemberChanging("Company");
                    this.ValidateProperty("Company", value);
                    this._company = value;
                    this.RaiseDataMemberChanged("Company");
                    this.OnCompanyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterNo
        {
            get
            {
                return this._letterNo;
            }
            set
            {
                if ((this._letterNo != value))
                {
                    this.OnLetterNoChanging(value);
                    this.RaiseDataMemberChanging("LetterNo");
                    this.ValidateProperty("LetterNo", value);
                    this._letterNo = value;
                    this.RaiseDataMemberChanged("LetterNo");
                    this.OnLetterNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string ProjectDesc
        {
            get
            {
                return this._projectDesc;
            }
            set
            {
                if ((this._projectDesc != value))
                {
                    this.OnProjectDescChanging(value);
                    this.RaiseDataMemberChanging("ProjectDesc");
                    this.ValidateProperty("ProjectDesc", value);
                    this._projectDesc = value;
                    this.RaiseDataMemberChanged("ProjectDesc");
                    this.OnProjectDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Region' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Region
        {
            get
            {
                return this._region;
            }
            set
            {
                if ((this._region != value))
                {
                    this.OnRegionChanging(value);
                    this.RaiseDataMemberChanging("Region");
                    this.ValidateProperty("Region", value);
                    this._region = value;
                    this.RaiseDataMemberChanged("Region");
                    this.OnRegionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ReqDate
        {
            get
            {
                return this._reqDate;
            }
            set
            {
                if ((this._reqDate != value))
                {
                    this.OnReqDateChanging(value);
                    this.RaiseDataMemberChanging("ReqDate");
                    this.ValidateProperty("ReqDate", value);
                    this._reqDate = value;
                    this.RaiseDataMemberChanged("ReqDate");
                    this.OnReqDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Requester' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Requester
        {
            get
            {
                return this._requester;
            }
            set
            {
                if ((this._requester != value))
                {
                    this.OnRequesterChanging(value);
                    this.RaiseDataMemberChanging("Requester");
                    this.ValidateProperty("Requester", value);
                    this._requester = value;
                    this.RaiseDataMemberChanged("Requester");
                    this.OnRequesterChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_ReqStu' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_ReqStu : Entity
    {
        
        private string _approveDate;
        
        private string _branch;
        
        private string _defendDate;
        
        private int _id;
        
        private string _letterNo;
        
        private string _ostad;
        
        private string _projTitle;
        
        private string _region;
        
        private string _requester;
        
        private string _stuLevel;
        
        private string _university;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApproveDateChanging(string value);
        partial void OnApproveDateChanged();
        partial void OnBranchChanging(string value);
        partial void OnBranchChanged();
        partial void OnDefendDateChanging(string value);
        partial void OnDefendDateChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLetterNoChanging(string value);
        partial void OnLetterNoChanged();
        partial void OnOstadChanging(string value);
        partial void OnOstadChanged();
        partial void OnProjTitleChanging(string value);
        partial void OnProjTitleChanged();
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        partial void OnRequesterChanging(string value);
        partial void OnRequesterChanged();
        partial void OnStuLevelChanging(string value);
        partial void OnStuLevelChanged();
        partial void OnUniversityChanging(string value);
        partial void OnUniversityChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_ReqStu"/> class.
        /// </summary>
        public Deliver_ReqStu()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApproveDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ApproveDate
        {
            get
            {
                return this._approveDate;
            }
            set
            {
                if ((this._approveDate != value))
                {
                    this.OnApproveDateChanging(value);
                    this.RaiseDataMemberChanging("ApproveDate");
                    this.ValidateProperty("ApproveDate", value);
                    this._approveDate = value;
                    this.RaiseDataMemberChanged("ApproveDate");
                    this.OnApproveDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Branch' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Branch
        {
            get
            {
                return this._branch;
            }
            set
            {
                if ((this._branch != value))
                {
                    this.OnBranchChanging(value);
                    this.RaiseDataMemberChanging("Branch");
                    this.ValidateProperty("Branch", value);
                    this._branch = value;
                    this.RaiseDataMemberChanged("Branch");
                    this.OnBranchChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DefendDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string DefendDate
        {
            get
            {
                return this._defendDate;
            }
            set
            {
                if ((this._defendDate != value))
                {
                    this.OnDefendDateChanging(value);
                    this.RaiseDataMemberChanging("DefendDate");
                    this.ValidateProperty("DefendDate", value);
                    this._defendDate = value;
                    this.RaiseDataMemberChanged("DefendDate");
                    this.OnDefendDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterNo
        {
            get
            {
                return this._letterNo;
            }
            set
            {
                if ((this._letterNo != value))
                {
                    this.OnLetterNoChanging(value);
                    this.RaiseDataMemberChanging("LetterNo");
                    this.ValidateProperty("LetterNo", value);
                    this._letterNo = value;
                    this.RaiseDataMemberChanged("LetterNo");
                    this.OnLetterNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Ostad' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Ostad
        {
            get
            {
                return this._ostad;
            }
            set
            {
                if ((this._ostad != value))
                {
                    this.OnOstadChanging(value);
                    this.RaiseDataMemberChanging("Ostad");
                    this.ValidateProperty("Ostad", value);
                    this._ostad = value;
                    this.RaiseDataMemberChanged("Ostad");
                    this.OnOstadChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjTitle' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string ProjTitle
        {
            get
            {
                return this._projTitle;
            }
            set
            {
                if ((this._projTitle != value))
                {
                    this.OnProjTitleChanging(value);
                    this.RaiseDataMemberChanging("ProjTitle");
                    this.ValidateProperty("ProjTitle", value);
                    this._projTitle = value;
                    this.RaiseDataMemberChanged("ProjTitle");
                    this.OnProjTitleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Region' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Region
        {
            get
            {
                return this._region;
            }
            set
            {
                if ((this._region != value))
                {
                    this.OnRegionChanging(value);
                    this.RaiseDataMemberChanging("Region");
                    this.ValidateProperty("Region", value);
                    this._region = value;
                    this.RaiseDataMemberChanged("Region");
                    this.OnRegionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Requester' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string Requester
        {
            get
            {
                return this._requester;
            }
            set
            {
                if ((this._requester != value))
                {
                    this.OnRequesterChanging(value);
                    this.RaiseDataMemberChanging("Requester");
                    this.ValidateProperty("Requester", value);
                    this._requester = value;
                    this.RaiseDataMemberChanged("Requester");
                    this.OnRequesterChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StuLevel' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string StuLevel
        {
            get
            {
                return this._stuLevel;
            }
            set
            {
                if ((this._stuLevel != value))
                {
                    this.OnStuLevelChanging(value);
                    this.RaiseDataMemberChanging("StuLevel");
                    this.ValidateProperty("StuLevel", value);
                    this._stuLevel = value;
                    this.RaiseDataMemberChanged("StuLevel");
                    this.OnStuLevelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'University' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string University
        {
            get
            {
                return this._university;
            }
            set
            {
                if ((this._university != value))
                {
                    this.OnUniversityChanging(value);
                    this.RaiseDataMemberChanging("University");
                    this.ValidateProperty("University", value);
                    this._university = value;
                    this.RaiseDataMemberChanged("University");
                    this.OnUniversityChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Deliver_ReqStuDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Deliver_ReqStuDetail : Entity
    {
        
        private string _fromDate;
        
        private int _id;
        
        private string _infoDesc;
        
        private int _reqStuID;
        
        private string _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFromDateChanging(string value);
        partial void OnFromDateChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnInfoDescChanging(string value);
        partial void OnInfoDescChanged();
        partial void OnReqStuIDChanging(int value);
        partial void OnReqStuIDChanged();
        partial void OnToDateChanging(string value);
        partial void OnToDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Deliver_ReqStuDetail"/> class.
        /// </summary>
        public Deliver_ReqStuDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FromDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnFromDateChanging(value);
                    this.RaiseDataMemberChanging("FromDate");
                    this.ValidateProperty("FromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("FromDate");
                    this.OnFromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string InfoDesc
        {
            get
            {
                return this._infoDesc;
            }
            set
            {
                if ((this._infoDesc != value))
                {
                    this.OnInfoDescChanging(value);
                    this.RaiseDataMemberChanging("InfoDesc");
                    this.ValidateProperty("InfoDesc", value);
                    this._infoDesc = value;
                    this.RaiseDataMemberChanged("InfoDesc");
                    this.OnInfoDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqStuID' value.
        /// </summary>
        [DataMember()]
        public int ReqStuID
        {
            get
            {
                return this._reqStuID;
            }
            set
            {
                if ((this._reqStuID != value))
                {
                    this.OnReqStuIDChanging(value);
                    this.RaiseDataMemberChanging("ReqStuID");
                    this.ValidateProperty("ReqStuID", value);
                    this._reqStuID = value;
                    this.RaiseDataMemberChanged("ReqStuID");
                    this.OnReqStuIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ToDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ToDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OnToDateChanging(value);
                    this.RaiseDataMemberChanging("ToDate");
                    this.ValidateProperty("ToDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("ToDate");
                    this.OnToDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DetailsOfCO2' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DetailsOfCO2 : Entity
    {
        
        private Nullable<double> _amountOfInjection;
        
        private Nullable<double> _boundMaxLatitude;
        
        private Nullable<double> _boundMaxLongitude;
        
        private Nullable<double> _boundMinLatitude;
        
        private Nullable<double> _boundMinLongitude;
        
        private string _contractingParty;
        
        private Nullable<double> _cumulativeStorage;
        
        private Nullable<DateTime> _dataOfLastMonitoringReport;
        
        private Nullable<DateTime> _dateOfFirstInjection;
        
        private Nullable<DateTime> _dateOfLastInjection;
        
        private Nullable<DateTime> _dateOfReporting;
        
        private EntityCollection<DetailsOfCO2Chamical> _detailsOfCO2Chamical;
        
        private EntityCollection<DetailsOfCO2InjectionWell> _detailsOfCO2InjectionWell;
        
        private int _id;
        
        private Nullable<double> _lclpidSiteNumber;
        
        private Nullable<double> _maxStorageDepth;
        
        private Nullable<double> _minStorageDepth;
        
        private string _nameOfStorageProject;
        
        private Nullable<double> _reportingYear;
        
        private string _summaryOfMonitoring;
        
        private string _typeOfGeologicalFormation;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAmountOfInjectionChanging(Nullable<double> value);
        partial void OnAmountOfInjectionChanged();
        partial void OnBoundMaxLatitudeChanging(Nullable<double> value);
        partial void OnBoundMaxLatitudeChanged();
        partial void OnBoundMaxLongitudeChanging(Nullable<double> value);
        partial void OnBoundMaxLongitudeChanged();
        partial void OnBoundMinLatitudeChanging(Nullable<double> value);
        partial void OnBoundMinLatitudeChanged();
        partial void OnBoundMinLongitudeChanging(Nullable<double> value);
        partial void OnBoundMinLongitudeChanged();
        partial void OnContractingPartyChanging(string value);
        partial void OnContractingPartyChanged();
        partial void OnCumulativeStorageChanging(Nullable<double> value);
        partial void OnCumulativeStorageChanged();
        partial void OnDataOfLastMonitoringReportChanging(Nullable<DateTime> value);
        partial void OnDataOfLastMonitoringReportChanged();
        partial void OnDateOfFirstInjectionChanging(Nullable<DateTime> value);
        partial void OnDateOfFirstInjectionChanged();
        partial void OnDateOfLastInjectionChanging(Nullable<DateTime> value);
        partial void OnDateOfLastInjectionChanged();
        partial void OnDateOfReportingChanging(Nullable<DateTime> value);
        partial void OnDateOfReportingChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnLCLPIDSiteNumberChanging(Nullable<double> value);
        partial void OnLCLPIDSiteNumberChanged();
        partial void OnMaxStorageDepthChanging(Nullable<double> value);
        partial void OnMaxStorageDepthChanged();
        partial void OnMinStorageDepthChanging(Nullable<double> value);
        partial void OnMinStorageDepthChanged();
        partial void OnNameOfStorageProjectChanging(string value);
        partial void OnNameOfStorageProjectChanged();
        partial void OnReportingYearChanging(Nullable<double> value);
        partial void OnReportingYearChanged();
        partial void OnSummaryOfMonitoringChanging(string value);
        partial void OnSummaryOfMonitoringChanged();
        partial void OnTypeOfGeologicalFormationChanging(string value);
        partial void OnTypeOfGeologicalFormationChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DetailsOfCO2"/> class.
        /// </summary>
        public DetailsOfCO2()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AmountOfInjection' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> AmountOfInjection
        {
            get
            {
                return this._amountOfInjection;
            }
            set
            {
                if ((this._amountOfInjection != value))
                {
                    this.OnAmountOfInjectionChanging(value);
                    this.RaiseDataMemberChanging("AmountOfInjection");
                    this.ValidateProperty("AmountOfInjection", value);
                    this._amountOfInjection = value;
                    this.RaiseDataMemberChanged("AmountOfInjection");
                    this.OnAmountOfInjectionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BoundMaxLatitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> BoundMaxLatitude
        {
            get
            {
                return this._boundMaxLatitude;
            }
            set
            {
                if ((this._boundMaxLatitude != value))
                {
                    this.OnBoundMaxLatitudeChanging(value);
                    this.RaiseDataMemberChanging("BoundMaxLatitude");
                    this.ValidateProperty("BoundMaxLatitude", value);
                    this._boundMaxLatitude = value;
                    this.RaiseDataMemberChanged("BoundMaxLatitude");
                    this.OnBoundMaxLatitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BoundMaxLongitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> BoundMaxLongitude
        {
            get
            {
                return this._boundMaxLongitude;
            }
            set
            {
                if ((this._boundMaxLongitude != value))
                {
                    this.OnBoundMaxLongitudeChanging(value);
                    this.RaiseDataMemberChanging("BoundMaxLongitude");
                    this.ValidateProperty("BoundMaxLongitude", value);
                    this._boundMaxLongitude = value;
                    this.RaiseDataMemberChanged("BoundMaxLongitude");
                    this.OnBoundMaxLongitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BoundMinLatitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> BoundMinLatitude
        {
            get
            {
                return this._boundMinLatitude;
            }
            set
            {
                if ((this._boundMinLatitude != value))
                {
                    this.OnBoundMinLatitudeChanging(value);
                    this.RaiseDataMemberChanging("BoundMinLatitude");
                    this.ValidateProperty("BoundMinLatitude", value);
                    this._boundMinLatitude = value;
                    this.RaiseDataMemberChanged("BoundMinLatitude");
                    this.OnBoundMinLatitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BoundMinLongitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> BoundMinLongitude
        {
            get
            {
                return this._boundMinLongitude;
            }
            set
            {
                if ((this._boundMinLongitude != value))
                {
                    this.OnBoundMinLongitudeChanging(value);
                    this.RaiseDataMemberChanging("BoundMinLongitude");
                    this.ValidateProperty("BoundMinLongitude", value);
                    this._boundMinLongitude = value;
                    this.RaiseDataMemberChanged("BoundMinLongitude");
                    this.OnBoundMinLongitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ContractingParty' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string ContractingParty
        {
            get
            {
                return this._contractingParty;
            }
            set
            {
                if ((this._contractingParty != value))
                {
                    this.OnContractingPartyChanging(value);
                    this.RaiseDataMemberChanging("ContractingParty");
                    this.ValidateProperty("ContractingParty", value);
                    this._contractingParty = value;
                    this.RaiseDataMemberChanged("ContractingParty");
                    this.OnContractingPartyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CumulativeStorage' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> CumulativeStorage
        {
            get
            {
                return this._cumulativeStorage;
            }
            set
            {
                if ((this._cumulativeStorage != value))
                {
                    this.OnCumulativeStorageChanging(value);
                    this.RaiseDataMemberChanging("CumulativeStorage");
                    this.ValidateProperty("CumulativeStorage", value);
                    this._cumulativeStorage = value;
                    this.RaiseDataMemberChanged("CumulativeStorage");
                    this.OnCumulativeStorageChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DataOfLastMonitoringReport' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DataOfLastMonitoringReport
        {
            get
            {
                return this._dataOfLastMonitoringReport;
            }
            set
            {
                if ((this._dataOfLastMonitoringReport != value))
                {
                    this.OnDataOfLastMonitoringReportChanging(value);
                    this.RaiseDataMemberChanging("DataOfLastMonitoringReport");
                    this.ValidateProperty("DataOfLastMonitoringReport", value);
                    this._dataOfLastMonitoringReport = value;
                    this.RaiseDataMemberChanged("DataOfLastMonitoringReport");
                    this.OnDataOfLastMonitoringReportChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DateOfFirstInjection' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DateOfFirstInjection
        {
            get
            {
                return this._dateOfFirstInjection;
            }
            set
            {
                if ((this._dateOfFirstInjection != value))
                {
                    this.OnDateOfFirstInjectionChanging(value);
                    this.RaiseDataMemberChanging("DateOfFirstInjection");
                    this.ValidateProperty("DateOfFirstInjection", value);
                    this._dateOfFirstInjection = value;
                    this.RaiseDataMemberChanged("DateOfFirstInjection");
                    this.OnDateOfFirstInjectionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DateOfLastInjection' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DateOfLastInjection
        {
            get
            {
                return this._dateOfLastInjection;
            }
            set
            {
                if ((this._dateOfLastInjection != value))
                {
                    this.OnDateOfLastInjectionChanging(value);
                    this.RaiseDataMemberChanging("DateOfLastInjection");
                    this.ValidateProperty("DateOfLastInjection", value);
                    this._dateOfLastInjection = value;
                    this.RaiseDataMemberChanged("DateOfLastInjection");
                    this.OnDateOfLastInjectionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DateOfReporting' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DateOfReporting
        {
            get
            {
                return this._dateOfReporting;
            }
            set
            {
                if ((this._dateOfReporting != value))
                {
                    this.OnDateOfReportingChanging(value);
                    this.RaiseDataMemberChanging("DateOfReporting");
                    this.ValidateProperty("DateOfReporting", value);
                    this._dateOfReporting = value;
                    this.RaiseDataMemberChanged("DateOfReporting");
                    this.OnDateOfReportingChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="DetailsOfCO2Chamical"/> entity instances.
        /// </summary>
        [Association("DetailsOfCO2_DetailsOfCO2Chamical", "Id", "DetailsOfCO2Id")]
        [XmlIgnore()]
        public EntityCollection<DetailsOfCO2Chamical> DetailsOfCO2Chamical
        {
            get
            {
                if ((this._detailsOfCO2Chamical == null))
                {
                    this._detailsOfCO2Chamical = new EntityCollection<DetailsOfCO2Chamical>(this, "DetailsOfCO2Chamical", this.FilterDetailsOfCO2Chamical, this.AttachDetailsOfCO2Chamical, this.DetachDetailsOfCO2Chamical);
                }
                return this._detailsOfCO2Chamical;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="DetailsOfCO2InjectionWell"/> entity instances.
        /// </summary>
        [Association("DetailsOfCO2_DetailsOfCO2InjectionWell", "Id", "DetailsOfCO2Id")]
        [XmlIgnore()]
        public EntityCollection<DetailsOfCO2InjectionWell> DetailsOfCO2InjectionWell
        {
            get
            {
                if ((this._detailsOfCO2InjectionWell == null))
                {
                    this._detailsOfCO2InjectionWell = new EntityCollection<DetailsOfCO2InjectionWell>(this, "DetailsOfCO2InjectionWell", this.FilterDetailsOfCO2InjectionWell, this.AttachDetailsOfCO2InjectionWell, this.DetachDetailsOfCO2InjectionWell);
                }
                return this._detailsOfCO2InjectionWell;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LCLPIDSiteNumber' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> LCLPIDSiteNumber
        {
            get
            {
                return this._lclpidSiteNumber;
            }
            set
            {
                if ((this._lclpidSiteNumber != value))
                {
                    this.OnLCLPIDSiteNumberChanging(value);
                    this.RaiseDataMemberChanging("LCLPIDSiteNumber");
                    this.ValidateProperty("LCLPIDSiteNumber", value);
                    this._lclpidSiteNumber = value;
                    this.RaiseDataMemberChanged("LCLPIDSiteNumber");
                    this.OnLCLPIDSiteNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MaxStorageDepth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MaxStorageDepth
        {
            get
            {
                return this._maxStorageDepth;
            }
            set
            {
                if ((this._maxStorageDepth != value))
                {
                    this.OnMaxStorageDepthChanging(value);
                    this.RaiseDataMemberChanging("MaxStorageDepth");
                    this.ValidateProperty("MaxStorageDepth", value);
                    this._maxStorageDepth = value;
                    this.RaiseDataMemberChanged("MaxStorageDepth");
                    this.OnMaxStorageDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MinStorageDepth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MinStorageDepth
        {
            get
            {
                return this._minStorageDepth;
            }
            set
            {
                if ((this._minStorageDepth != value))
                {
                    this.OnMinStorageDepthChanging(value);
                    this.RaiseDataMemberChanging("MinStorageDepth");
                    this.ValidateProperty("MinStorageDepth", value);
                    this._minStorageDepth = value;
                    this.RaiseDataMemberChanged("MinStorageDepth");
                    this.OnMinStorageDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameOfStorageProject' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(100)]
        public string NameOfStorageProject
        {
            get
            {
                return this._nameOfStorageProject;
            }
            set
            {
                if ((this._nameOfStorageProject != value))
                {
                    this.OnNameOfStorageProjectChanging(value);
                    this.RaiseDataMemberChanging("NameOfStorageProject");
                    this.ValidateProperty("NameOfStorageProject", value);
                    this._nameOfStorageProject = value;
                    this.RaiseDataMemberChanged("NameOfStorageProject");
                    this.OnNameOfStorageProjectChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReportingYear' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ReportingYear
        {
            get
            {
                return this._reportingYear;
            }
            set
            {
                if ((this._reportingYear != value))
                {
                    this.OnReportingYearChanging(value);
                    this.RaiseDataMemberChanging("ReportingYear");
                    this.ValidateProperty("ReportingYear", value);
                    this._reportingYear = value;
                    this.RaiseDataMemberChanged("ReportingYear");
                    this.OnReportingYearChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SummaryOfMonitoring' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string SummaryOfMonitoring
        {
            get
            {
                return this._summaryOfMonitoring;
            }
            set
            {
                if ((this._summaryOfMonitoring != value))
                {
                    this.OnSummaryOfMonitoringChanging(value);
                    this.RaiseDataMemberChanging("SummaryOfMonitoring");
                    this.ValidateProperty("SummaryOfMonitoring", value);
                    this._summaryOfMonitoring = value;
                    this.RaiseDataMemberChanged("SummaryOfMonitoring");
                    this.OnSummaryOfMonitoringChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TypeOfGeologicalFormation' value.
        /// </summary>
        [DataMember()]
        [StringLength(200)]
        public string TypeOfGeologicalFormation
        {
            get
            {
                return this._typeOfGeologicalFormation;
            }
            set
            {
                if ((this._typeOfGeologicalFormation != value))
                {
                    this.OnTypeOfGeologicalFormationChanging(value);
                    this.RaiseDataMemberChanging("TypeOfGeologicalFormation");
                    this.ValidateProperty("TypeOfGeologicalFormation", value);
                    this._typeOfGeologicalFormation = value;
                    this.RaiseDataMemberChanged("TypeOfGeologicalFormation");
                    this.OnTypeOfGeologicalFormationChanged();
                }
            }
        }
        
        private void AttachDetailsOfCO2Chamical(DetailsOfCO2Chamical entity)
        {
            entity.DetailsOfCO2 = this;
        }
        
        private void DetachDetailsOfCO2Chamical(DetailsOfCO2Chamical entity)
        {
            entity.DetailsOfCO2 = null;
        }
        
        private bool FilterDetailsOfCO2Chamical(DetailsOfCO2Chamical entity)
        {
            return (entity.DetailsOfCO2Id == this.Id);
        }
        
        private void AttachDetailsOfCO2InjectionWell(DetailsOfCO2InjectionWell entity)
        {
            entity.DetailsOfCO2 = this;
        }
        
        private void DetachDetailsOfCO2InjectionWell(DetailsOfCO2InjectionWell entity)
        {
            entity.DetailsOfCO2 = null;
        }
        
        private bool FilterDetailsOfCO2InjectionWell(DetailsOfCO2InjectionWell entity)
        {
            return (entity.DetailsOfCO2Id == this.Id);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DetailsOfCO2Chamical' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DetailsOfCO2Chamical : Entity
    {
        
        private string _compound;
        
        private EntityRef<DetailsOfCO2> _detailsOfCO2;
        
        private int _detailsOfCO2Id;
        
        private int _id;
        
        private Nullable<double> _percentOfStream;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCompoundChanging(string value);
        partial void OnCompoundChanged();
        partial void OnDetailsOfCO2IdChanging(int value);
        partial void OnDetailsOfCO2IdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnPercentOfStreamChanging(Nullable<double> value);
        partial void OnPercentOfStreamChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DetailsOfCO2Chamical"/> class.
        /// </summary>
        public DetailsOfCO2Chamical()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Compound' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Compound
        {
            get
            {
                return this._compound;
            }
            set
            {
                if ((this._compound != value))
                {
                    this.OnCompoundChanging(value);
                    this.RaiseDataMemberChanging("Compound");
                    this.ValidateProperty("Compound", value);
                    this._compound = value;
                    this.RaiseDataMemberChanged("Compound");
                    this.OnCompoundChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="DetailsOfCO2"/> entity.
        /// </summary>
        [Association("DetailsOfCO2_DetailsOfCO2Chamical", "DetailsOfCO2Id", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public DetailsOfCO2 DetailsOfCO2
        {
            get
            {
                if ((this._detailsOfCO2 == null))
                {
                    this._detailsOfCO2 = new EntityRef<DetailsOfCO2>(this, "DetailsOfCO2", this.FilterDetailsOfCO2);
                }
                return this._detailsOfCO2.Entity;
            }
            set
            {
                DetailsOfCO2 previous = this.DetailsOfCO2;
                if ((previous != value))
                {
                    this.ValidateProperty("DetailsOfCO2", value);
                    if ((previous != null))
                    {
                        this._detailsOfCO2.Entity = null;
                        previous.DetailsOfCO2Chamical.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.DetailsOfCO2Id = value.Id;
                    }
                    else
                    {
                        this.DetailsOfCO2Id = default(int);
                    }
                    this._detailsOfCO2.Entity = value;
                    if ((value != null))
                    {
                        value.DetailsOfCO2Chamical.Add(this);
                    }
                    this.RaisePropertyChanged("DetailsOfCO2");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DetailsOfCO2Id' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public int DetailsOfCO2Id
        {
            get
            {
                return this._detailsOfCO2Id;
            }
            set
            {
                if ((this._detailsOfCO2Id != value))
                {
                    this.OnDetailsOfCO2IdChanging(value);
                    this.RaiseDataMemberChanging("DetailsOfCO2Id");
                    this.ValidateProperty("DetailsOfCO2Id", value);
                    this._detailsOfCO2Id = value;
                    this.RaiseDataMemberChanged("DetailsOfCO2Id");
                    this.OnDetailsOfCO2IdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PercentOfStream' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> PercentOfStream
        {
            get
            {
                return this._percentOfStream;
            }
            set
            {
                if ((this._percentOfStream != value))
                {
                    this.OnPercentOfStreamChanging(value);
                    this.RaiseDataMemberChanging("PercentOfStream");
                    this.ValidateProperty("PercentOfStream", value);
                    this._percentOfStream = value;
                    this.RaiseDataMemberChanged("PercentOfStream");
                    this.OnPercentOfStreamChanged();
                }
            }
        }
        
        private bool FilterDetailsOfCO2(DetailsOfCO2 entity)
        {
            return (entity.Id == this.DetailsOfCO2Id);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DetailsOfCO2InjectionWell' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DetailsOfCO2InjectionWell : Entity
    {
        
        private EntityRef<DetailsOfCO2> _detailsOfCO2;
        
        private int _detailsOfCO2Id;
        
        private int _id;
        
        private string _injectionWell;
        
        private Nullable<bool> _isActive;
        
        private Nullable<double> _latitude;
        
        private Nullable<double> _longitude;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDetailsOfCO2IdChanging(int value);
        partial void OnDetailsOfCO2IdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnInjectionWellChanging(string value);
        partial void OnInjectionWellChanged();
        partial void OnIsActiveChanging(Nullable<bool> value);
        partial void OnIsActiveChanged();
        partial void OnLatitudeChanging(Nullable<double> value);
        partial void OnLatitudeChanged();
        partial void OnLongitudeChanging(Nullable<double> value);
        partial void OnLongitudeChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DetailsOfCO2InjectionWell"/> class.
        /// </summary>
        public DetailsOfCO2InjectionWell()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="DetailsOfCO2"/> entity.
        /// </summary>
        [Association("DetailsOfCO2_DetailsOfCO2InjectionWell", "DetailsOfCO2Id", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public DetailsOfCO2 DetailsOfCO2
        {
            get
            {
                if ((this._detailsOfCO2 == null))
                {
                    this._detailsOfCO2 = new EntityRef<DetailsOfCO2>(this, "DetailsOfCO2", this.FilterDetailsOfCO2);
                }
                return this._detailsOfCO2.Entity;
            }
            set
            {
                DetailsOfCO2 previous = this.DetailsOfCO2;
                if ((previous != value))
                {
                    this.ValidateProperty("DetailsOfCO2", value);
                    if ((previous != null))
                    {
                        this._detailsOfCO2.Entity = null;
                        previous.DetailsOfCO2InjectionWell.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.DetailsOfCO2Id = value.Id;
                    }
                    else
                    {
                        this.DetailsOfCO2Id = default(int);
                    }
                    this._detailsOfCO2.Entity = value;
                    if ((value != null))
                    {
                        value.DetailsOfCO2InjectionWell.Add(this);
                    }
                    this.RaisePropertyChanged("DetailsOfCO2");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DetailsOfCO2Id' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public int DetailsOfCO2Id
        {
            get
            {
                return this._detailsOfCO2Id;
            }
            set
            {
                if ((this._detailsOfCO2Id != value))
                {
                    this.OnDetailsOfCO2IdChanging(value);
                    this.RaiseDataMemberChanging("DetailsOfCO2Id");
                    this.ValidateProperty("DetailsOfCO2Id", value);
                    this._detailsOfCO2Id = value;
                    this.RaiseDataMemberChanged("DetailsOfCO2Id");
                    this.OnDetailsOfCO2IdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InjectionWell' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string InjectionWell
        {
            get
            {
                return this._injectionWell;
            }
            set
            {
                if ((this._injectionWell != value))
                {
                    this.OnInjectionWellChanging(value);
                    this.RaiseDataMemberChanging("InjectionWell");
                    this.ValidateProperty("InjectionWell", value);
                    this._injectionWell = value;
                    this.RaiseDataMemberChanged("InjectionWell");
                    this.OnInjectionWellChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Latitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Latitude
        {
            get
            {
                return this._latitude;
            }
            set
            {
                if ((this._latitude != value))
                {
                    this.OnLatitudeChanging(value);
                    this.RaiseDataMemberChanging("Latitude");
                    this.ValidateProperty("Latitude", value);
                    this._latitude = value;
                    this.RaiseDataMemberChanged("Latitude");
                    this.OnLatitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Longitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Longitude
        {
            get
            {
                return this._longitude;
            }
            set
            {
                if ((this._longitude != value))
                {
                    this.OnLongitudeChanging(value);
                    this.RaiseDataMemberChanging("Longitude");
                    this.ValidateProperty("Longitude", value);
                    this._longitude = value;
                    this.RaiseDataMemberChanged("Longitude");
                    this.OnLongitudeChanged();
                }
            }
        }
        
        private bool FilterDetailsOfCO2(DetailsOfCO2 entity)
        {
            return (entity.Id == this.DetailsOfCO2Id);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DetailsOfDeposit' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DetailsOfDeposit : Entity
    {
        
        private string _bulkyWaste;
        
        private string _carbonDioxide;
        
        private string _depositSite;
        
        private string _dredgedMaterial;
        
        private string _fishWaste;
        
        private int _id;
        
        private string _inertMaterial;
        
        private Nullable<bool> _isActive;
        
        private Nullable<double> _latitude;
        
        private Nullable<double> _longitude;
        
        private string _notes;
        
        private string _operationTypeCapital;
        
        private string _operationTypeMaintanance;
        
        private string _organicMaterial;
        
        private string _originNameOfWaterSystem;
        
        private string _platforms;
        
        private string _sewage;
        
        private string _totalQuantityDryWeight;
        
        private string _totalQuantityNumber;
        
        private string _vessel;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBulkyWasteChanging(string value);
        partial void OnBulkyWasteChanged();
        partial void OnCarbonDioxideChanging(string value);
        partial void OnCarbonDioxideChanged();
        partial void OnDepositSiteChanging(string value);
        partial void OnDepositSiteChanged();
        partial void OnDredgedMaterialChanging(string value);
        partial void OnDredgedMaterialChanged();
        partial void OnFishWasteChanging(string value);
        partial void OnFishWasteChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnInertMaterialChanging(string value);
        partial void OnInertMaterialChanged();
        partial void OnIsActiveChanging(Nullable<bool> value);
        partial void OnIsActiveChanged();
        partial void OnLatitudeChanging(Nullable<double> value);
        partial void OnLatitudeChanged();
        partial void OnLongitudeChanging(Nullable<double> value);
        partial void OnLongitudeChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnOperationTypeCapitalChanging(string value);
        partial void OnOperationTypeCapitalChanged();
        partial void OnOperationTypeMaintananceChanging(string value);
        partial void OnOperationTypeMaintananceChanged();
        partial void OnOrganicMaterialChanging(string value);
        partial void OnOrganicMaterialChanged();
        partial void OnOriginNameOfWaterSystemChanging(string value);
        partial void OnOriginNameOfWaterSystemChanged();
        partial void OnPlatformsChanging(string value);
        partial void OnPlatformsChanged();
        partial void OnSewageChanging(string value);
        partial void OnSewageChanged();
        partial void OnTotalQuantityDryWeightChanging(string value);
        partial void OnTotalQuantityDryWeightChanged();
        partial void OnTotalQuantityNumberChanging(string value);
        partial void OnTotalQuantityNumberChanged();
        partial void OnVesselChanging(string value);
        partial void OnVesselChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DetailsOfDeposit"/> class.
        /// </summary>
        public DetailsOfDeposit()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BulkyWaste' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string BulkyWaste
        {
            get
            {
                return this._bulkyWaste;
            }
            set
            {
                if ((this._bulkyWaste != value))
                {
                    this.OnBulkyWasteChanging(value);
                    this.RaiseDataMemberChanging("BulkyWaste");
                    this.ValidateProperty("BulkyWaste", value);
                    this._bulkyWaste = value;
                    this.RaiseDataMemberChanged("BulkyWaste");
                    this.OnBulkyWasteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CarbonDioxide' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string CarbonDioxide
        {
            get
            {
                return this._carbonDioxide;
            }
            set
            {
                if ((this._carbonDioxide != value))
                {
                    this.OnCarbonDioxideChanging(value);
                    this.RaiseDataMemberChanging("CarbonDioxide");
                    this.ValidateProperty("CarbonDioxide", value);
                    this._carbonDioxide = value;
                    this.RaiseDataMemberChanged("CarbonDioxide");
                    this.OnCarbonDioxideChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepositSite' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string DepositSite
        {
            get
            {
                return this._depositSite;
            }
            set
            {
                if ((this._depositSite != value))
                {
                    this.OnDepositSiteChanging(value);
                    this.RaiseDataMemberChanging("DepositSite");
                    this.ValidateProperty("DepositSite", value);
                    this._depositSite = value;
                    this.RaiseDataMemberChanged("DepositSite");
                    this.OnDepositSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DredgedMaterial' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string DredgedMaterial
        {
            get
            {
                return this._dredgedMaterial;
            }
            set
            {
                if ((this._dredgedMaterial != value))
                {
                    this.OnDredgedMaterialChanging(value);
                    this.RaiseDataMemberChanging("DredgedMaterial");
                    this.ValidateProperty("DredgedMaterial", value);
                    this._dredgedMaterial = value;
                    this.RaiseDataMemberChanged("DredgedMaterial");
                    this.OnDredgedMaterialChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FishWaste' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string FishWaste
        {
            get
            {
                return this._fishWaste;
            }
            set
            {
                if ((this._fishWaste != value))
                {
                    this.OnFishWasteChanging(value);
                    this.RaiseDataMemberChanging("FishWaste");
                    this.ValidateProperty("FishWaste", value);
                    this._fishWaste = value;
                    this.RaiseDataMemberChanged("FishWaste");
                    this.OnFishWasteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InertMaterial' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string InertMaterial
        {
            get
            {
                return this._inertMaterial;
            }
            set
            {
                if ((this._inertMaterial != value))
                {
                    this.OnInertMaterialChanging(value);
                    this.RaiseDataMemberChanging("InertMaterial");
                    this.ValidateProperty("InertMaterial", value);
                    this._inertMaterial = value;
                    this.RaiseDataMemberChanged("InertMaterial");
                    this.OnInertMaterialChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Latitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Latitude
        {
            get
            {
                return this._latitude;
            }
            set
            {
                if ((this._latitude != value))
                {
                    this.OnLatitudeChanging(value);
                    this.RaiseDataMemberChanging("Latitude");
                    this.ValidateProperty("Latitude", value);
                    this._latitude = value;
                    this.RaiseDataMemberChanged("Latitude");
                    this.OnLatitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Longitude' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Longitude
        {
            get
            {
                return this._longitude;
            }
            set
            {
                if ((this._longitude != value))
                {
                    this.OnLongitudeChanging(value);
                    this.RaiseDataMemberChanging("Longitude");
                    this.ValidateProperty("Longitude", value);
                    this._longitude = value;
                    this.RaiseDataMemberChanged("Longitude");
                    this.OnLongitudeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Notes' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Notes
        {
            get
            {
                return this._notes;
            }
            set
            {
                if ((this._notes != value))
                {
                    this.OnNotesChanging(value);
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._notes = value;
                    this.RaiseDataMemberChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OperationTypeCapital' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string OperationTypeCapital
        {
            get
            {
                return this._operationTypeCapital;
            }
            set
            {
                if ((this._operationTypeCapital != value))
                {
                    this.OnOperationTypeCapitalChanging(value);
                    this.RaiseDataMemberChanging("OperationTypeCapital");
                    this.ValidateProperty("OperationTypeCapital", value);
                    this._operationTypeCapital = value;
                    this.RaiseDataMemberChanged("OperationTypeCapital");
                    this.OnOperationTypeCapitalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OperationTypeMaintanance' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string OperationTypeMaintanance
        {
            get
            {
                return this._operationTypeMaintanance;
            }
            set
            {
                if ((this._operationTypeMaintanance != value))
                {
                    this.OnOperationTypeMaintananceChanging(value);
                    this.RaiseDataMemberChanging("OperationTypeMaintanance");
                    this.ValidateProperty("OperationTypeMaintanance", value);
                    this._operationTypeMaintanance = value;
                    this.RaiseDataMemberChanged("OperationTypeMaintanance");
                    this.OnOperationTypeMaintananceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OrganicMaterial' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string OrganicMaterial
        {
            get
            {
                return this._organicMaterial;
            }
            set
            {
                if ((this._organicMaterial != value))
                {
                    this.OnOrganicMaterialChanging(value);
                    this.RaiseDataMemberChanging("OrganicMaterial");
                    this.ValidateProperty("OrganicMaterial", value);
                    this._organicMaterial = value;
                    this.RaiseDataMemberChanged("OrganicMaterial");
                    this.OnOrganicMaterialChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OriginNameOfWaterSystem' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string OriginNameOfWaterSystem
        {
            get
            {
                return this._originNameOfWaterSystem;
            }
            set
            {
                if ((this._originNameOfWaterSystem != value))
                {
                    this.OnOriginNameOfWaterSystemChanging(value);
                    this.RaiseDataMemberChanging("OriginNameOfWaterSystem");
                    this.ValidateProperty("OriginNameOfWaterSystem", value);
                    this._originNameOfWaterSystem = value;
                    this.RaiseDataMemberChanged("OriginNameOfWaterSystem");
                    this.OnOriginNameOfWaterSystemChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Platforms' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Platforms
        {
            get
            {
                return this._platforms;
            }
            set
            {
                if ((this._platforms != value))
                {
                    this.OnPlatformsChanging(value);
                    this.RaiseDataMemberChanging("Platforms");
                    this.ValidateProperty("Platforms", value);
                    this._platforms = value;
                    this.RaiseDataMemberChanged("Platforms");
                    this.OnPlatformsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Sewage' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Sewage
        {
            get
            {
                return this._sewage;
            }
            set
            {
                if ((this._sewage != value))
                {
                    this.OnSewageChanging(value);
                    this.RaiseDataMemberChanging("Sewage");
                    this.ValidateProperty("Sewage", value);
                    this._sewage = value;
                    this.RaiseDataMemberChanged("Sewage");
                    this.OnSewageChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TotalQuantityDryWeight' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string TotalQuantityDryWeight
        {
            get
            {
                return this._totalQuantityDryWeight;
            }
            set
            {
                if ((this._totalQuantityDryWeight != value))
                {
                    this.OnTotalQuantityDryWeightChanging(value);
                    this.RaiseDataMemberChanging("TotalQuantityDryWeight");
                    this.ValidateProperty("TotalQuantityDryWeight", value);
                    this._totalQuantityDryWeight = value;
                    this.RaiseDataMemberChanged("TotalQuantityDryWeight");
                    this.OnTotalQuantityDryWeightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TotalQuantityNumber' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string TotalQuantityNumber
        {
            get
            {
                return this._totalQuantityNumber;
            }
            set
            {
                if ((this._totalQuantityNumber != value))
                {
                    this.OnTotalQuantityNumberChanging(value);
                    this.RaiseDataMemberChanging("TotalQuantityNumber");
                    this.ValidateProperty("TotalQuantityNumber", value);
                    this._totalQuantityNumber = value;
                    this.RaiseDataMemberChanged("TotalQuantityNumber");
                    this.OnTotalQuantityNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Vessel' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Vessel
        {
            get
            {
                return this._vessel;
            }
            set
            {
                if ((this._vessel != value))
                {
                    this.OnVesselChanging(value);
                    this.RaiseDataMemberChanging("Vessel");
                    this.ValidateProperty("Vessel", value);
                    this._vessel = value;
                    this.RaiseDataMemberChanged("Vessel");
                    this.OnVesselChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DocFile' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocFile : Entity
    {
        
        private string _addedByUserName;
        
        private Nullable<DateTime> _dateAdded;
        
        private int _fieldId;
        
        private string _fileExt;
        
        private int _fileID;
        
        private string _fileName;
        
        private string _filePath;
        
        private Nullable<bool> _flag;
        
        private Nullable<DateTime> _fromDate;
        
        private Nullable<double> _latX;
        
        private Nullable<double> _longY;
        
        private Nullable<int> _subjectID;
        
        private string _title;
        
        private Nullable<DateTime> _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAddedByUserNameChanging(string value);
        partial void OnAddedByUserNameChanged();
        partial void OnDateAddedChanging(Nullable<DateTime> value);
        partial void OnDateAddedChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnFileExtChanging(string value);
        partial void OnFileExtChanged();
        partial void OnFileIDChanging(int value);
        partial void OnFileIDChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnFilePathChanging(string value);
        partial void OnFilePathChanged();
        partial void OnFlagChanging(Nullable<bool> value);
        partial void OnFlagChanged();
        partial void OnfromDateChanging(Nullable<DateTime> value);
        partial void OnfromDateChanged();
        partial void OnLatXChanging(Nullable<double> value);
        partial void OnLatXChanged();
        partial void OnLongYChanging(Nullable<double> value);
        partial void OnLongYChanged();
        partial void OnSubjectIDChanging(Nullable<int> value);
        partial void OnSubjectIDChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OntoDateChanging(Nullable<DateTime> value);
        partial void OntoDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocFile"/> class.
        /// </summary>
        public DocFile()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AddedByUserName' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string AddedByUserName
        {
            get
            {
                return this._addedByUserName;
            }
            set
            {
                if ((this._addedByUserName != value))
                {
                    this.OnAddedByUserNameChanging(value);
                    this.RaiseDataMemberChanging("AddedByUserName");
                    this.ValidateProperty("AddedByUserName", value);
                    this._addedByUserName = value;
                    this.RaiseDataMemberChanged("AddedByUserName");
                    this.OnAddedByUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DateAdded' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DateAdded
        {
            get
            {
                return this._dateAdded;
            }
            set
            {
                if ((this._dateAdded != value))
                {
                    this.OnDateAddedChanging(value);
                    this.RaiseDataMemberChanging("DateAdded");
                    this.ValidateProperty("DateAdded", value);
                    this._dateAdded = value;
                    this.RaiseDataMemberChanged("DateAdded");
                    this.OnDateAddedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileExt' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string FileExt
        {
            get
            {
                return this._fileExt;
            }
            set
            {
                if ((this._fileExt != value))
                {
                    this.OnFileExtChanging(value);
                    this.RaiseDataMemberChanging("FileExt");
                    this.ValidateProperty("FileExt", value);
                    this._fileExt = value;
                    this.RaiseDataMemberChanged("FileExt");
                    this.OnFileExtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileID' value.
        /// </summary>
        [DataMember()]
        public int FileID
        {
            get
            {
                return this._fileID;
            }
            set
            {
                if ((this._fileID != value))
                {
                    this.OnFileIDChanging(value);
                    this.RaiseDataMemberChanging("FileID");
                    this.ValidateProperty("FileID", value);
                    this._fileID = value;
                    this.RaiseDataMemberChanged("FileID");
                    this.OnFileIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if ((this._fileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.RaiseDataMemberChanging("FileName");
                    this.ValidateProperty("FileName", value);
                    this._fileName = value;
                    this.RaiseDataMemberChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FilePath' value.
        /// </summary>
        [DataMember()]
        [Required()]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if ((this._filePath != value))
                {
                    this.OnFilePathChanging(value);
                    this.RaiseDataMemberChanging("FilePath");
                    this.ValidateProperty("FilePath", value);
                    this._filePath = value;
                    this.RaiseDataMemberChanged("FilePath");
                    this.OnFilePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Flag' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Flag
        {
            get
            {
                return this._flag;
            }
            set
            {
                if ((this._flag != value))
                {
                    this.OnFlagChanging(value);
                    this.RaiseDataMemberChanging("Flag");
                    this.ValidateProperty("Flag", value);
                    this._flag = value;
                    this.RaiseDataMemberChanged("Flag");
                    this.OnFlagChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'fromDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> fromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnfromDateChanging(value);
                    this.RaiseDataMemberChanging("fromDate");
                    this.ValidateProperty("fromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("fromDate");
                    this.OnfromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LatX' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> LatX
        {
            get
            {
                return this._latX;
            }
            set
            {
                if ((this._latX != value))
                {
                    this.OnLatXChanging(value);
                    this.RaiseDataMemberChanging("LatX");
                    this.ValidateProperty("LatX", value);
                    this._latX = value;
                    this.RaiseDataMemberChanged("LatX");
                    this.OnLatXChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LongY' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> LongY
        {
            get
            {
                return this._longY;
            }
            set
            {
                if ((this._longY != value))
                {
                    this.OnLongYChanging(value);
                    this.RaiseDataMemberChanging("LongY");
                    this.ValidateProperty("LongY", value);
                    this._longY = value;
                    this.RaiseDataMemberChanged("LongY");
                    this.OnLongYChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.RaiseDataMemberChanging("SubjectID");
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaiseDataMemberChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Title' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                if ((this._title != value))
                {
                    this.OnTitleChanging(value);
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._title = value;
                    this.RaiseDataMemberChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'toDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> toDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OntoDateChanging(value);
                    this.RaiseDataMemberChanging("toDate");
                    this.ValidateProperty("toDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("toDate");
                    this.OntoDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'DocFileUserLog' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocFileUserLog : Entity
    {
        
        private Nullable<DateTime> _dateVisited;
        
        private Nullable<int> _fileId;
        
        private int _id;
        
        private Nullable<int> _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDateVisitedChanging(Nullable<DateTime> value);
        partial void OnDateVisitedChanged();
        partial void OnFileIdChanging(Nullable<int> value);
        partial void OnFileIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocFileUserLog"/> class.
        /// </summary>
        public DocFileUserLog()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DateVisited' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> DateVisited
        {
            get
            {
                return this._dateVisited;
            }
            set
            {
                if ((this._dateVisited != value))
                {
                    this.OnDateVisitedChanging(value);
                    this.RaiseDataMemberChanging("DateVisited");
                    this.ValidateProperty("DateVisited", value);
                    this._dateVisited = value;
                    this.RaiseDataMemberChanged("DateVisited");
                    this.OnDateVisitedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> FileId
        {
            get
            {
                return this._fileId;
            }
            set
            {
                if ((this._fileId != value))
                {
                    this.OnFileIdChanging(value);
                    this.RaiseDataMemberChanging("FileId");
                    this.ValidateProperty("FileId", value);
                    this._fileId = value;
                    this.RaiseDataMemberChanged("FileId");
                    this.OnFileIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaiseDataMemberChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DocKeyWord' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocKeyWord : Entity
    {
        
        private int _fileId;
        
        private int _keyWordId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFileIdChanging(int value);
        partial void OnFileIdChanged();
        partial void OnKeyWordIdChanging(int value);
        partial void OnKeyWordIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocKeyWord"/> class.
        /// </summary>
        public DocKeyWord()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FileId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FileId
        {
            get
            {
                return this._fileId;
            }
            set
            {
                if ((this._fileId != value))
                {
                    this.OnFileIdChanging(value);
                    this.ValidateProperty("FileId", value);
                    this._fileId = value;
                    this.RaisePropertyChanged("FileId");
                    this.OnFileIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KeyWordId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int KeyWordId
        {
            get
            {
                return this._keyWordId;
            }
            set
            {
                if ((this._keyWordId != value))
                {
                    this.OnKeyWordIdChanging(value);
                    this.ValidateProperty("KeyWordId", value);
                    this._keyWordId = value;
                    this.RaisePropertyChanged("KeyWordId");
                    this.OnKeyWordIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._fileId, this._keyWordId);
        }
    }
    
    /// <summary>
    /// The 'DocLocationTree' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocLocationTree : Entity
    {
        
        private Nullable<int> _docLocTypeId;
        
        private int _fieldId;
        
        private int _locationId;
        
        private string _locEName;
        
        private string _locFName;
        
        private Nullable<int> _parentLocationId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDocLocTypeIdChanging(Nullable<int> value);
        partial void OnDocLocTypeIdChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnLocationIdChanging(int value);
        partial void OnLocationIdChanged();
        partial void OnLocENameChanging(string value);
        partial void OnLocENameChanged();
        partial void OnLocFNameChanging(string value);
        partial void OnLocFNameChanged();
        partial void OnParentLocationIdChanging(Nullable<int> value);
        partial void OnParentLocationIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocLocationTree"/> class.
        /// </summary>
        public DocLocationTree()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DocLocTypeId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> DocLocTypeId
        {
            get
            {
                return this._docLocTypeId;
            }
            set
            {
                if ((this._docLocTypeId != value))
                {
                    this.OnDocLocTypeIdChanging(value);
                    this.RaiseDataMemberChanging("DocLocTypeId");
                    this.ValidateProperty("DocLocTypeId", value);
                    this._docLocTypeId = value;
                    this.RaiseDataMemberChanged("DocLocTypeId");
                    this.OnDocLocTypeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocationId' value.
        /// </summary>
        [DataMember()]
        public int LocationId
        {
            get
            {
                return this._locationId;
            }
            set
            {
                if ((this._locationId != value))
                {
                    this.OnLocationIdChanging(value);
                    this.RaiseDataMemberChanging("LocationId");
                    this.ValidateProperty("LocationId", value);
                    this._locationId = value;
                    this.RaiseDataMemberChanged("LocationId");
                    this.OnLocationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocEName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string LocEName
        {
            get
            {
                return this._locEName;
            }
            set
            {
                if ((this._locEName != value))
                {
                    this.OnLocENameChanging(value);
                    this.RaiseDataMemberChanging("LocEName");
                    this.ValidateProperty("LocEName", value);
                    this._locEName = value;
                    this.RaiseDataMemberChanged("LocEName");
                    this.OnLocENameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocFName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string LocFName
        {
            get
            {
                return this._locFName;
            }
            set
            {
                if ((this._locFName != value))
                {
                    this.OnLocFNameChanging(value);
                    this.RaiseDataMemberChanging("LocFName");
                    this.ValidateProperty("LocFName", value);
                    this._locFName = value;
                    this.RaiseDataMemberChanged("LocFName");
                    this.OnLocFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParentLocationId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ParentLocationId
        {
            get
            {
                return this._parentLocationId;
            }
            set
            {
                if ((this._parentLocationId != value))
                {
                    this.OnParentLocationIdChanging(value);
                    this.RaiseDataMemberChanging("ParentLocationId");
                    this.ValidateProperty("ParentLocationId", value);
                    this._parentLocationId = value;
                    this.RaiseDataMemberChanged("ParentLocationId");
                    this.OnParentLocationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'DocLocationType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocLocationType : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private string _locType;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnLocTypeChanging(string value);
        partial void OnLocTypeChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocLocationType"/> class.
        /// </summary>
        public DocLocationType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocType' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LocType
        {
            get
            {
                return this._locType;
            }
            set
            {
                if ((this._locType != value))
                {
                    this.OnLocTypeChanging(value);
                    this.RaiseDataMemberChanging("LocType");
                    this.ValidateProperty("LocType", value);
                    this._locType = value;
                    this.RaiseDataMemberChanged("LocType");
                    this.OnLocTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'DocSubjectLocationFilter' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocSubjectLocationFilter : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private int _locationID;
        
        private int _subjectID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLocationIDChanging(int value);
        partial void OnLocationIDChanged();
        partial void OnSubjectIDChanging(int value);
        partial void OnSubjectIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocSubjectLocationFilter"/> class.
        /// </summary>
        public DocSubjectLocationFilter()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocationID' value.
        /// </summary>
        [DataMember()]
        public int LocationID
        {
            get
            {
                return this._locationID;
            }
            set
            {
                if ((this._locationID != value))
                {
                    this.OnLocationIDChanging(value);
                    this.RaiseDataMemberChanging("LocationID");
                    this.ValidateProperty("LocationID", value);
                    this._locationID = value;
                    this.RaiseDataMemberChanged("LocationID");
                    this.OnLocationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        public int SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.RaiseDataMemberChanging("SubjectID");
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaiseDataMemberChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'DocSubjectTree' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocSubjectTree : Entity
    {
        
        private EntityCollection<Ostan> _ostan;
        
        private string _subjectEName;
        
        private string _subjectFName;
        
        private int _subjectID;
        
        private int _subjectParentID;
        
        private EntityCollection<tblDataType> _tblDataType;
        
        private EntityCollection<tblInfoType> _tblInfoType;
        
        private EntityCollection<tblPorts> _tblPorts;
        
        private Nullable<int> _titleID;
        
        private EntityCollection<Zone> _zone;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnSubjectENameChanging(string value);
        partial void OnSubjectENameChanged();
        partial void OnSubjectFNameChanging(string value);
        partial void OnSubjectFNameChanged();
        partial void OnSubjectIDChanging(int value);
        partial void OnSubjectIDChanged();
        partial void OnSubjectParentIDChanging(int value);
        partial void OnSubjectParentIDChanged();
        partial void OnTitleIDChanging(Nullable<int> value);
        partial void OnTitleIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocSubjectTree"/> class.
        /// </summary>
        public DocSubjectTree()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Ostan"/> entity instances.
        /// </summary>
        [Association("dbo.SubjectOstan", "SubjectID", "ID")]
        [XmlIgnore()]
        public EntityCollection<Ostan> Ostan
        {
            get
            {
                if ((this._ostan == null))
                {
                    this._ostan = new EntityCollection<Ostan>(this, "Ostan", this.FilterOstan);
                }
                return this._ostan;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectEName' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string SubjectEName
        {
            get
            {
                return this._subjectEName;
            }
            set
            {
                if ((this._subjectEName != value))
                {
                    this.OnSubjectENameChanging(value);
                    this.RaiseDataMemberChanging("SubjectEName");
                    this.ValidateProperty("SubjectEName", value);
                    this._subjectEName = value;
                    this.RaiseDataMemberChanged("SubjectEName");
                    this.OnSubjectENameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectFName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string SubjectFName
        {
            get
            {
                return this._subjectFName;
            }
            set
            {
                if ((this._subjectFName != value))
                {
                    this.OnSubjectFNameChanging(value);
                    this.RaiseDataMemberChanging("SubjectFName");
                    this.ValidateProperty("SubjectFName", value);
                    this._subjectFName = value;
                    this.RaiseDataMemberChanged("SubjectFName");
                    this.OnSubjectFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaisePropertyChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectParentID' value.
        /// </summary>
        [DataMember()]
        public int SubjectParentID
        {
            get
            {
                return this._subjectParentID;
            }
            set
            {
                if ((this._subjectParentID != value))
                {
                    this.OnSubjectParentIDChanging(value);
                    this.RaiseDataMemberChanging("SubjectParentID");
                    this.ValidateProperty("SubjectParentID", value);
                    this._subjectParentID = value;
                    this.RaiseDataMemberChanged("SubjectParentID");
                    this.OnSubjectParentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="tblDataType"/> entity instances.
        /// </summary>
        [Association("dbo.SubjectDataType", "SubjectID", "ID")]
        [XmlIgnore()]
        public EntityCollection<tblDataType> tblDataType
        {
            get
            {
                if ((this._tblDataType == null))
                {
                    this._tblDataType = new EntityCollection<tblDataType>(this, "tblDataType", this.FiltertblDataType);
                }
                return this._tblDataType;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="tblInfoType"/> entity instances.
        /// </summary>
        [Association("dbo.SubjectInfoType", "SubjectID", "ID")]
        [XmlIgnore()]
        public EntityCollection<tblInfoType> tblInfoType
        {
            get
            {
                if ((this._tblInfoType == null))
                {
                    this._tblInfoType = new EntityCollection<tblInfoType>(this, "tblInfoType", this.FiltertblInfoType);
                }
                return this._tblInfoType;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="tblPorts"/> entity instances.
        /// </summary>
        [Association("dbo.SubjectPort", "SubjectID", "ID")]
        [XmlIgnore()]
        public EntityCollection<tblPorts> tblPorts
        {
            get
            {
                if ((this._tblPorts == null))
                {
                    this._tblPorts = new EntityCollection<tblPorts>(this, "tblPorts", this.FiltertblPorts);
                }
                return this._tblPorts;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TitleID
        {
            get
            {
                return this._titleID;
            }
            set
            {
                if ((this._titleID != value))
                {
                    this.OnTitleIDChanging(value);
                    this.RaiseDataMemberChanging("TitleID");
                    this.ValidateProperty("TitleID", value);
                    this._titleID = value;
                    this.RaiseDataMemberChanged("TitleID");
                    this.OnTitleIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Zone"/> entity instances.
        /// </summary>
        [Association("dbo.SubjectZone", "SubjectID", "ID")]
        [XmlIgnore()]
        public EntityCollection<Zone> Zone
        {
            get
            {
                if ((this._zone == null))
                {
                    this._zone = new EntityCollection<Zone>(this, "Zone", this.FilterZone);
                }
                return this._zone;
            }
        }
        
        private bool FilterOstan(Ostan entity)
        {
            return (entity.ID == this.SubjectID);
        }
        
        private bool FiltertblDataType(tblDataType entity)
        {
            return (entity.ID == this.SubjectID);
        }
        
        private bool FiltertblInfoType(tblInfoType entity)
        {
            return (entity.ID == this.SubjectID);
        }
        
        private bool FiltertblPorts(tblPorts entity)
        {
            return (entity.ID == this.SubjectID);
        }
        
        private bool FilterZone(Zone entity)
        {
            return (entity.ID == this.SubjectID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._subjectID;
        }
    }
    
    /// <summary>
    /// The 'DocSubjectUserFilter' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocSubjectUserFilter : Entity
    {
        
        private int _subjectId;
        
        private int _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnSubjectIdChanging(int value);
        partial void OnSubjectIdChanged();
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocSubjectUserFilter"/> class.
        /// </summary>
        public DocSubjectUserFilter()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int SubjectId
        {
            get
            {
                return this._subjectId;
            }
            set
            {
                if ((this._subjectId != value))
                {
                    this.OnSubjectIdChanging(value);
                    this.ValidateProperty("SubjectId", value);
                    this._subjectId = value;
                    this.RaisePropertyChanged("SubjectId");
                    this.OnSubjectIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._subjectId, this._userId);
        }
    }
    
    /// <summary>
    /// The 'DocTitleTree' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocTitleTree : Entity
    {
        
        private string _basePath;
        
        private string _fromDate;
        
        private Nullable<int> _parentTitleId;
        
        private EntityCollection<tblProjectMap> _tblProjectMap;
        
        private string _titleEName;
        
        private string _titleFName;
        
        private int _titleId;
        
        private Nullable<int> _titleTypeId;
        
        private string _toDate;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBasePathChanging(string value);
        partial void OnBasePathChanged();
        partial void OnFromDateChanging(string value);
        partial void OnFromDateChanged();
        partial void OnParentTitleIdChanging(Nullable<int> value);
        partial void OnParentTitleIdChanged();
        partial void OnTitleENameChanging(string value);
        partial void OnTitleENameChanged();
        partial void OnTitleFNameChanging(string value);
        partial void OnTitleFNameChanged();
        partial void OnTitleIdChanging(int value);
        partial void OnTitleIdChanged();
        partial void OnTitleTypeIdChanging(Nullable<int> value);
        partial void OnTitleTypeIdChanged();
        partial void OnToDateChanging(string value);
        partial void OnToDateChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocTitleTree"/> class.
        /// </summary>
        public DocTitleTree()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BasePath' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string BasePath
        {
            get
            {
                return this._basePath;
            }
            set
            {
                if ((this._basePath != value))
                {
                    this.OnBasePathChanging(value);
                    this.RaiseDataMemberChanging("BasePath");
                    this.ValidateProperty("BasePath", value);
                    this._basePath = value;
                    this.RaiseDataMemberChanged("BasePath");
                    this.OnBasePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FromDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FromDate
        {
            get
            {
                return this._fromDate;
            }
            set
            {
                if ((this._fromDate != value))
                {
                    this.OnFromDateChanging(value);
                    this.RaiseDataMemberChanging("FromDate");
                    this.ValidateProperty("FromDate", value);
                    this._fromDate = value;
                    this.RaiseDataMemberChanged("FromDate");
                    this.OnFromDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParentTitleId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ParentTitleId
        {
            get
            {
                return this._parentTitleId;
            }
            set
            {
                if ((this._parentTitleId != value))
                {
                    this.OnParentTitleIdChanging(value);
                    this.RaiseDataMemberChanging("ParentTitleId");
                    this.ValidateProperty("ParentTitleId", value);
                    this._parentTitleId = value;
                    this.RaiseDataMemberChanged("ParentTitleId");
                    this.OnParentTitleIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="tblProjectMap"/> entity instances.
        /// </summary>
        [Association("DocTitleTree_tblProjectMap", "TitleId", "CPEDPrjID")]
        [XmlIgnore()]
        public EntityCollection<tblProjectMap> tblProjectMap
        {
            get
            {
                if ((this._tblProjectMap == null))
                {
                    this._tblProjectMap = new EntityCollection<tblProjectMap>(this, "tblProjectMap", this.FiltertblProjectMap, this.AttachtblProjectMap, this.DetachtblProjectMap);
                }
                return this._tblProjectMap;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleEName' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string TitleEName
        {
            get
            {
                return this._titleEName;
            }
            set
            {
                if ((this._titleEName != value))
                {
                    this.OnTitleENameChanging(value);
                    this.RaiseDataMemberChanging("TitleEName");
                    this.ValidateProperty("TitleEName", value);
                    this._titleEName = value;
                    this.RaiseDataMemberChanged("TitleEName");
                    this.OnTitleENameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleFName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string TitleFName
        {
            get
            {
                return this._titleFName;
            }
            set
            {
                if ((this._titleFName != value))
                {
                    this.OnTitleFNameChanging(value);
                    this.RaiseDataMemberChanging("TitleFName");
                    this.ValidateProperty("TitleFName", value);
                    this._titleFName = value;
                    this.RaiseDataMemberChanged("TitleFName");
                    this.OnTitleFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int TitleId
        {
            get
            {
                return this._titleId;
            }
            set
            {
                if ((this._titleId != value))
                {
                    this.OnTitleIdChanging(value);
                    this.ValidateProperty("TitleId", value);
                    this._titleId = value;
                    this.RaisePropertyChanged("TitleId");
                    this.OnTitleIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleTypeId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TitleTypeId
        {
            get
            {
                return this._titleTypeId;
            }
            set
            {
                if ((this._titleTypeId != value))
                {
                    this.OnTitleTypeIdChanging(value);
                    this.RaiseDataMemberChanging("TitleTypeId");
                    this.ValidateProperty("TitleTypeId", value);
                    this._titleTypeId = value;
                    this.RaiseDataMemberChanged("TitleTypeId");
                    this.OnTitleTypeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ToDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ToDate
        {
            get
            {
                return this._toDate;
            }
            set
            {
                if ((this._toDate != value))
                {
                    this.OnToDateChanging(value);
                    this.RaiseDataMemberChanging("ToDate");
                    this.ValidateProperty("ToDate", value);
                    this._toDate = value;
                    this.RaiseDataMemberChanged("ToDate");
                    this.OnToDateChanged();
                }
            }
        }
        
        private void AttachtblProjectMap(tblProjectMap entity)
        {
            entity.DocTitleTree = this;
        }
        
        private void DetachtblProjectMap(tblProjectMap entity)
        {
            entity.DocTitleTree = null;
        }
        
        private bool FiltertblProjectMap(tblProjectMap entity)
        {
            return (entity.CPEDPrjID == this.TitleId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._titleId;
        }
    }
    
    /// <summary>
    /// The 'DocTitleUserFilter' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocTitleUserFilter : Entity
    {
        
        private int _titleId;
        
        private int _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnTitleIdChanging(int value);
        partial void OnTitleIdChanged();
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocTitleUserFilter"/> class.
        /// </summary>
        public DocTitleUserFilter()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'TitleId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int TitleId
        {
            get
            {
                return this._titleId;
            }
            set
            {
                if ((this._titleId != value))
                {
                    this.OnTitleIdChanging(value);
                    this.ValidateProperty("TitleId", value);
                    this._titleId = value;
                    this.RaisePropertyChanged("TitleId");
                    this.OnTitleIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._titleId, this._userId);
        }
    }
    
    /// <summary>
    /// The 'DocTree' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class DocTree : Entity
    {
        
        private string _docEName;
        
        private string _docFName;
        
        private int _docID;
        
        private int _docParentID;
        
        private int _fieldId;
        
        private int _projectID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDocENameChanging(string value);
        partial void OnDocENameChanged();
        partial void OnDocFNameChanging(string value);
        partial void OnDocFNameChanged();
        partial void OnDocIDChanging(int value);
        partial void OnDocIDChanged();
        partial void OnDocParentIDChanging(int value);
        partial void OnDocParentIDChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnProjectIDChanging(int value);
        partial void OnProjectIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DocTree"/> class.
        /// </summary>
        public DocTree()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DocEName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string DocEName
        {
            get
            {
                return this._docEName;
            }
            set
            {
                if ((this._docEName != value))
                {
                    this.OnDocENameChanging(value);
                    this.RaiseDataMemberChanging("DocEName");
                    this.ValidateProperty("DocEName", value);
                    this._docEName = value;
                    this.RaiseDataMemberChanged("DocEName");
                    this.OnDocENameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DocFName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string DocFName
        {
            get
            {
                return this._docFName;
            }
            set
            {
                if ((this._docFName != value))
                {
                    this.OnDocFNameChanging(value);
                    this.RaiseDataMemberChanging("DocFName");
                    this.ValidateProperty("DocFName", value);
                    this._docFName = value;
                    this.RaiseDataMemberChanged("DocFName");
                    this.OnDocFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DocID' value.
        /// </summary>
        [DataMember()]
        public int DocID
        {
            get
            {
                return this._docID;
            }
            set
            {
                if ((this._docID != value))
                {
                    this.OnDocIDChanging(value);
                    this.RaiseDataMemberChanging("DocID");
                    this.ValidateProperty("DocID", value);
                    this._docID = value;
                    this.RaiseDataMemberChanged("DocID");
                    this.OnDocIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DocParentID' value.
        /// </summary>
        [DataMember()]
        public int DocParentID
        {
            get
            {
                return this._docParentID;
            }
            set
            {
                if ((this._docParentID != value))
                {
                    this.OnDocParentIDChanging(value);
                    this.RaiseDataMemberChanging("DocParentID");
                    this.ValidateProperty("DocParentID", value);
                    this._docParentID = value;
                    this.RaiseDataMemberChanged("DocParentID");
                    this.OnDocParentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectID' value.
        /// </summary>
        [DataMember()]
        public int ProjectID
        {
            get
            {
                return this._projectID;
            }
            set
            {
                if ((this._projectID != value))
                {
                    this.OnProjectIDChanging(value);
                    this.RaiseDataMemberChanging("ProjectID");
                    this.ValidateProperty("ProjectID", value);
                    this._projectID = value;
                    this.RaiseDataMemberChanged("ProjectID");
                    this.OnProjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'EmployeesInfo' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class EmployeesInfo : Entity
    {
        
        private string _bandar;
        
        private Nullable<DateTime> _birthDate;
        
        private string _birthplace;
        
        private string _codeMelli;
        
        private string _doreAmoozeshi;
        
        private string _edareh;
        
        private string _fatherName;
        
        private string _firstName;
        
        private string _gerayesh;
        
        private string _homeTel;
        
        private int _id;
        
        private string _lastName;
        
        private string _madrak;
        
        private string _madrakPicture;
        
        private string _maharat;
        
        private string _mobile;
        
        private string _noeGharardad;
        
        private string _orgEmail;
        
        private string _personalEmail;
        
        private string _personalPicture;
        
        private string _personelID;
        
        private string _reshte;
        
        private Nullable<double> _sabeghehKar;
        
        private Nullable<double> _sabeghehSazman;
        
        private Nullable<double> _sabegheMohandesiSavahel;
        
        private Nullable<int> _saleMadrak;
        
        private Nullable<int> _saleShoroo;
        
        private string _universty;
        
        private string _workTel;
        
        private string _zaban;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBandarChanging(string value);
        partial void OnBandarChanged();
        partial void OnBirthDateChanging(Nullable<DateTime> value);
        partial void OnBirthDateChanged();
        partial void OnBirthplaceChanging(string value);
        partial void OnBirthplaceChanged();
        partial void OnCodeMelliChanging(string value);
        partial void OnCodeMelliChanged();
        partial void OnDoreAmoozeshiChanging(string value);
        partial void OnDoreAmoozeshiChanged();
        partial void OnEdarehChanging(string value);
        partial void OnEdarehChanged();
        partial void OnFatherNameChanging(string value);
        partial void OnFatherNameChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnGerayeshChanging(string value);
        partial void OnGerayeshChanged();
        partial void OnHomeTelChanging(string value);
        partial void OnHomeTelChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnMadrakChanging(string value);
        partial void OnMadrakChanged();
        partial void OnMadrakPictureChanging(string value);
        partial void OnMadrakPictureChanged();
        partial void OnMaharatChanging(string value);
        partial void OnMaharatChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnNoeGharardadChanging(string value);
        partial void OnNoeGharardadChanged();
        partial void OnOrgEmailChanging(string value);
        partial void OnOrgEmailChanged();
        partial void OnPersonalEmailChanging(string value);
        partial void OnPersonalEmailChanged();
        partial void OnPersonalPictureChanging(string value);
        partial void OnPersonalPictureChanged();
        partial void OnPersonelIDChanging(string value);
        partial void OnPersonelIDChanged();
        partial void OnReshteChanging(string value);
        partial void OnReshteChanged();
        partial void OnSabeghehKarChanging(Nullable<double> value);
        partial void OnSabeghehKarChanged();
        partial void OnSabeghehSazmanChanging(Nullable<double> value);
        partial void OnSabeghehSazmanChanged();
        partial void OnSabegheMohandesiSavahelChanging(Nullable<double> value);
        partial void OnSabegheMohandesiSavahelChanged();
        partial void OnSaleMadrakChanging(Nullable<int> value);
        partial void OnSaleMadrakChanged();
        partial void OnSaleShorooChanging(Nullable<int> value);
        partial void OnSaleShorooChanged();
        partial void OnUniverstyChanging(string value);
        partial void OnUniverstyChanged();
        partial void OnWorkTelChanging(string value);
        partial void OnWorkTelChanged();
        partial void OnZabanChanging(string value);
        partial void OnZabanChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="EmployeesInfo"/> class.
        /// </summary>
        public EmployeesInfo()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Bandar' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Bandar
        {
            get
            {
                return this._bandar;
            }
            set
            {
                if ((this._bandar != value))
                {
                    this.OnBandarChanging(value);
                    this.RaiseDataMemberChanging("Bandar");
                    this.ValidateProperty("Bandar", value);
                    this._bandar = value;
                    this.RaiseDataMemberChanged("Bandar");
                    this.OnBandarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BirthDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BirthDate
        {
            get
            {
                return this._birthDate;
            }
            set
            {
                if ((this._birthDate != value))
                {
                    this.OnBirthDateChanging(value);
                    this.RaiseDataMemberChanging("BirthDate");
                    this.ValidateProperty("BirthDate", value);
                    this._birthDate = value;
                    this.RaiseDataMemberChanged("BirthDate");
                    this.OnBirthDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Birthplace' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Birthplace
        {
            get
            {
                return this._birthplace;
            }
            set
            {
                if ((this._birthplace != value))
                {
                    this.OnBirthplaceChanging(value);
                    this.RaiseDataMemberChanging("Birthplace");
                    this.ValidateProperty("Birthplace", value);
                    this._birthplace = value;
                    this.RaiseDataMemberChanged("Birthplace");
                    this.OnBirthplaceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CodeMelli' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string CodeMelli
        {
            get
            {
                return this._codeMelli;
            }
            set
            {
                if ((this._codeMelli != value))
                {
                    this.OnCodeMelliChanging(value);
                    this.RaiseDataMemberChanging("CodeMelli");
                    this.ValidateProperty("CodeMelli", value);
                    this._codeMelli = value;
                    this.RaiseDataMemberChanged("CodeMelli");
                    this.OnCodeMelliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DoreAmoozeshi' value.
        /// </summary>
        [DataMember()]
        public string DoreAmoozeshi
        {
            get
            {
                return this._doreAmoozeshi;
            }
            set
            {
                if ((this._doreAmoozeshi != value))
                {
                    this.OnDoreAmoozeshiChanging(value);
                    this.RaiseDataMemberChanging("DoreAmoozeshi");
                    this.ValidateProperty("DoreAmoozeshi", value);
                    this._doreAmoozeshi = value;
                    this.RaiseDataMemberChanged("DoreAmoozeshi");
                    this.OnDoreAmoozeshiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Edareh' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string Edareh
        {
            get
            {
                return this._edareh;
            }
            set
            {
                if ((this._edareh != value))
                {
                    this.OnEdarehChanging(value);
                    this.RaiseDataMemberChanging("Edareh");
                    this.ValidateProperty("Edareh", value);
                    this._edareh = value;
                    this.RaiseDataMemberChanged("Edareh");
                    this.OnEdarehChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FatherName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FatherName
        {
            get
            {
                return this._fatherName;
            }
            set
            {
                if ((this._fatherName != value))
                {
                    this.OnFatherNameChanging(value);
                    this.RaiseDataMemberChanging("FatherName");
                    this.ValidateProperty("FatherName", value);
                    this._fatherName = value;
                    this.RaiseDataMemberChanged("FatherName");
                    this.OnFatherNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Gerayesh' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Gerayesh
        {
            get
            {
                return this._gerayesh;
            }
            set
            {
                if ((this._gerayesh != value))
                {
                    this.OnGerayeshChanging(value);
                    this.RaiseDataMemberChanging("Gerayesh");
                    this.ValidateProperty("Gerayesh", value);
                    this._gerayesh = value;
                    this.RaiseDataMemberChanged("Gerayesh");
                    this.OnGerayeshChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'HomeTel' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string HomeTel
        {
            get
            {
                return this._homeTel;
            }
            set
            {
                if ((this._homeTel != value))
                {
                    this.OnHomeTelChanging(value);
                    this.RaiseDataMemberChanging("HomeTel");
                    this.ValidateProperty("HomeTel", value);
                    this._homeTel = value;
                    this.RaiseDataMemberChanged("HomeTel");
                    this.OnHomeTelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Madrak' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Madrak
        {
            get
            {
                return this._madrak;
            }
            set
            {
                if ((this._madrak != value))
                {
                    this.OnMadrakChanging(value);
                    this.RaiseDataMemberChanging("Madrak");
                    this.ValidateProperty("Madrak", value);
                    this._madrak = value;
                    this.RaiseDataMemberChanged("Madrak");
                    this.OnMadrakChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MadrakPicture' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string MadrakPicture
        {
            get
            {
                return this._madrakPicture;
            }
            set
            {
                if ((this._madrakPicture != value))
                {
                    this.OnMadrakPictureChanging(value);
                    this.RaiseDataMemberChanging("MadrakPicture");
                    this.ValidateProperty("MadrakPicture", value);
                    this._madrakPicture = value;
                    this.RaiseDataMemberChanged("MadrakPicture");
                    this.OnMadrakPictureChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Maharat' value.
        /// </summary>
        [DataMember()]
        public string Maharat
        {
            get
            {
                return this._maharat;
            }
            set
            {
                if ((this._maharat != value))
                {
                    this.OnMaharatChanging(value);
                    this.RaiseDataMemberChanging("Maharat");
                    this.ValidateProperty("Maharat", value);
                    this._maharat = value;
                    this.RaiseDataMemberChanged("Maharat");
                    this.OnMaharatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Mobile' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Mobile
        {
            get
            {
                return this._mobile;
            }
            set
            {
                if ((this._mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.RaiseDataMemberChanging("Mobile");
                    this.ValidateProperty("Mobile", value);
                    this._mobile = value;
                    this.RaiseDataMemberChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NoeGharardad' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NoeGharardad
        {
            get
            {
                return this._noeGharardad;
            }
            set
            {
                if ((this._noeGharardad != value))
                {
                    this.OnNoeGharardadChanging(value);
                    this.RaiseDataMemberChanging("NoeGharardad");
                    this.ValidateProperty("NoeGharardad", value);
                    this._noeGharardad = value;
                    this.RaiseDataMemberChanged("NoeGharardad");
                    this.OnNoeGharardadChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OrgEmail' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string OrgEmail
        {
            get
            {
                return this._orgEmail;
            }
            set
            {
                if ((this._orgEmail != value))
                {
                    this.OnOrgEmailChanging(value);
                    this.RaiseDataMemberChanging("OrgEmail");
                    this.ValidateProperty("OrgEmail", value);
                    this._orgEmail = value;
                    this.RaiseDataMemberChanged("OrgEmail");
                    this.OnOrgEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonalEmail' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string PersonalEmail
        {
            get
            {
                return this._personalEmail;
            }
            set
            {
                if ((this._personalEmail != value))
                {
                    this.OnPersonalEmailChanging(value);
                    this.RaiseDataMemberChanging("PersonalEmail");
                    this.ValidateProperty("PersonalEmail", value);
                    this._personalEmail = value;
                    this.RaiseDataMemberChanged("PersonalEmail");
                    this.OnPersonalEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonalPicture' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string PersonalPicture
        {
            get
            {
                return this._personalPicture;
            }
            set
            {
                if ((this._personalPicture != value))
                {
                    this.OnPersonalPictureChanging(value);
                    this.RaiseDataMemberChanging("PersonalPicture");
                    this.ValidateProperty("PersonalPicture", value);
                    this._personalPicture = value;
                    this.RaiseDataMemberChanged("PersonalPicture");
                    this.OnPersonalPictureChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Reshte' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Reshte
        {
            get
            {
                return this._reshte;
            }
            set
            {
                if ((this._reshte != value))
                {
                    this.OnReshteChanging(value);
                    this.RaiseDataMemberChanging("Reshte");
                    this.ValidateProperty("Reshte", value);
                    this._reshte = value;
                    this.RaiseDataMemberChanged("Reshte");
                    this.OnReshteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SabeghehKar' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SabeghehKar
        {
            get
            {
                return this._sabeghehKar;
            }
            set
            {
                if ((this._sabeghehKar != value))
                {
                    this.OnSabeghehKarChanging(value);
                    this.RaiseDataMemberChanging("SabeghehKar");
                    this.ValidateProperty("SabeghehKar", value);
                    this._sabeghehKar = value;
                    this.RaiseDataMemberChanged("SabeghehKar");
                    this.OnSabeghehKarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SabeghehSazman' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SabeghehSazman
        {
            get
            {
                return this._sabeghehSazman;
            }
            set
            {
                if ((this._sabeghehSazman != value))
                {
                    this.OnSabeghehSazmanChanging(value);
                    this.RaiseDataMemberChanging("SabeghehSazman");
                    this.ValidateProperty("SabeghehSazman", value);
                    this._sabeghehSazman = value;
                    this.RaiseDataMemberChanged("SabeghehSazman");
                    this.OnSabeghehSazmanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SabegheMohandesiSavahel' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SabegheMohandesiSavahel
        {
            get
            {
                return this._sabegheMohandesiSavahel;
            }
            set
            {
                if ((this._sabegheMohandesiSavahel != value))
                {
                    this.OnSabegheMohandesiSavahelChanging(value);
                    this.RaiseDataMemberChanging("SabegheMohandesiSavahel");
                    this.ValidateProperty("SabegheMohandesiSavahel", value);
                    this._sabegheMohandesiSavahel = value;
                    this.RaiseDataMemberChanged("SabegheMohandesiSavahel");
                    this.OnSabegheMohandesiSavahelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SaleMadrak' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SaleMadrak
        {
            get
            {
                return this._saleMadrak;
            }
            set
            {
                if ((this._saleMadrak != value))
                {
                    this.OnSaleMadrakChanging(value);
                    this.RaiseDataMemberChanging("SaleMadrak");
                    this.ValidateProperty("SaleMadrak", value);
                    this._saleMadrak = value;
                    this.RaiseDataMemberChanged("SaleMadrak");
                    this.OnSaleMadrakChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SaleShoroo' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SaleShoroo
        {
            get
            {
                return this._saleShoroo;
            }
            set
            {
                if ((this._saleShoroo != value))
                {
                    this.OnSaleShorooChanging(value);
                    this.RaiseDataMemberChanging("SaleShoroo");
                    this.ValidateProperty("SaleShoroo", value);
                    this._saleShoroo = value;
                    this.RaiseDataMemberChanged("SaleShoroo");
                    this.OnSaleShorooChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Universty' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Universty
        {
            get
            {
                return this._universty;
            }
            set
            {
                if ((this._universty != value))
                {
                    this.OnUniverstyChanging(value);
                    this.RaiseDataMemberChanging("Universty");
                    this.ValidateProperty("Universty", value);
                    this._universty = value;
                    this.RaiseDataMemberChanged("Universty");
                    this.OnUniverstyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WorkTel' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string WorkTel
        {
            get
            {
                return this._workTel;
            }
            set
            {
                if ((this._workTel != value))
                {
                    this.OnWorkTelChanging(value);
                    this.RaiseDataMemberChanging("WorkTel");
                    this.ValidateProperty("WorkTel", value);
                    this._workTel = value;
                    this.RaiseDataMemberChanged("WorkTel");
                    this.OnWorkTelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Zaban' value.
        /// </summary>
        [DataMember()]
        public string Zaban
        {
            get
            {
                return this._zaban;
            }
            set
            {
                if ((this._zaban != value))
                {
                    this.OnZabanChanging(value);
                    this.RaiseDataMemberChanging("Zaban");
                    this.ValidateProperty("Zaban", value);
                    this._zaban = value;
                    this.RaiseDataMemberChanged("Zaban");
                    this.OnZabanChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'EskelehStrucType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class EskelehStrucType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="EskelehStrucType"/> class.
        /// </summary>
        public EskelehStrucType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'FileDetails' class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class FileDetails : ComplexObject
    {
        
        private GraphicFeatureDetails _featureDetails;
        
        private string _filePath;
        
        private string _subject;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnfeatureDetailsChanging(GraphicFeatureDetails value);
        partial void OnfeatureDetailsChanged();
        partial void OnFilePathChanging(string value);
        partial void OnFilePathChanged();
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="FileDetails"/> class.
        /// </summary>
        public FileDetails()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'featureDetails' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public GraphicFeatureDetails featureDetails
        {
            get
            {
                return this._featureDetails;
            }
            set
            {
                if ((this._featureDetails != value))
                {
                    this.OnfeatureDetailsChanging(value);
                    this.RaiseDataMemberChanging("featureDetails");
                    this.ValidateProperty("featureDetails", value);
                    this._featureDetails = value;
                    this.RaiseDataMemberChanged("featureDetails");
                    this.OnfeatureDetailsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FilePath' value.
        /// </summary>
        [DataMember()]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if ((this._filePath != value))
                {
                    this.OnFilePathChanging(value);
                    this.RaiseDataMemberChanging("FilePath");
                    this.ValidateProperty("FilePath", value);
                    this._filePath = value;
                    this.RaiseDataMemberChanged("FilePath");
                    this.OnFilePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Subject' value.
        /// </summary>
        [DataMember()]
        public string Subject
        {
            get
            {
                return this._subject;
            }
            set
            {
                if ((this._subject != value))
                {
                    this.OnSubjectChanging(value);
                    this.RaiseDataMemberChanging("Subject");
                    this.ValidateProperty("Subject", value);
                    this._subject = value;
                    this.RaiseDataMemberChanged("Subject");
                    this.OnSubjectChanged();
                }
            }
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'FileHandler' DomainService.
    /// </summary>
    public sealed partial class FileHandler : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="FileHandler"/> class.
        /// </summary>
        public FileHandler() : 
                this(new WebDomainClient<IFileHandlerContract>(new Uri("LanSysWebGIS-Web-FileHandler.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="FileHandler"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The FileHandler service URI.</param>
        public FileHandler(Uri serviceUri) : 
                this(new WebDomainClient<IFileHandlerContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="FileHandler"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public FileHandler(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetFileDetails' method of the DomainService.
        /// </summary>
        /// <param name="gfdList">The value for the 'gfdList' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<List<FileDetails>> GetFileDetails(ObservableCollection<GraphicFeatureDetails> gfdList, Action<InvokeOperation<List<FileDetails>>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("gfdList", gfdList);
            this.ValidateMethod("GetFileDetails", parameters);
            return ((InvokeOperation<List<FileDetails>>)(this.InvokeOperation("GetFileDetails", typeof(List<FileDetails>), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetFileDetails' method of the DomainService.
        /// </summary>
        /// <param name="gfdList">The value for the 'gfdList' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<List<FileDetails>> GetFileDetails(ObservableCollection<GraphicFeatureDetails> gfdList)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("gfdList", gfdList);
            this.ValidateMethod("GetFileDetails", parameters);
            return ((InvokeOperation<List<FileDetails>>)(this.InvokeOperation("GetFileDetails", typeof(List<FileDetails>), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetSubjects' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<IEnumerable<string>> GetSubjects(Action<InvokeOperation<IEnumerable<string>>> callback, object userState)
        {
            this.ValidateMethod("GetSubjects", null);
            return ((InvokeOperation<IEnumerable<string>>)(this.InvokeOperation("GetSubjects", typeof(IEnumerable<string>), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetSubjects' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<IEnumerable<string>> GetSubjects()
        {
            this.ValidateMethod("GetSubjects", null);
            return ((InvokeOperation<IEnumerable<string>>)(this.InvokeOperation("GetSubjects", typeof(IEnumerable<string>), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ProcessDirectory' method of the DomainService.
        /// </summary>
        /// <param name="targetDirectory">The value for the 'targetDirectory' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<IEnumerable<string>> ProcessDirectory(string targetDirectory, Action<InvokeOperation<IEnumerable<string>>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("targetDirectory", targetDirectory);
            this.ValidateMethod("ProcessDirectory", parameters);
            return ((InvokeOperation<IEnumerable<string>>)(this.InvokeOperation("ProcessDirectory", typeof(IEnumerable<string>), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ProcessDirectory' method of the DomainService.
        /// </summary>
        /// <param name="targetDirectory">The value for the 'targetDirectory' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<IEnumerable<string>> ProcessDirectory(string targetDirectory)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("targetDirectory", targetDirectory);
            this.ValidateMethod("ProcessDirectory", parameters);
            return ((InvokeOperation<IEnumerable<string>>)(this.InvokeOperation("ProcessDirectory", typeof(IEnumerable<string>), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new FileHandlerEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'FileHandler' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IFileHandlerContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetFileDetails' operation.
            /// </summary>
            /// <param name="gfdList">The value for the 'gfdList' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FileHandler/GetFileDetailsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FileHandler/GetFileDetails", ReplyAction="http://tempuri.org/FileHandler/GetFileDetailsResponse")]
            IAsyncResult BeginGetFileDetails(ObservableCollection<GraphicFeatureDetails> gfdList, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFileDetails'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFileDetails'.</param>
            /// <returns>The 'List`1' returned from the 'GetFileDetails' operation.</returns>
            List<FileDetails> EndGetFileDetails(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSubjects' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FileHandler/GetSubjectsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FileHandler/GetSubjects", ReplyAction="http://tempuri.org/FileHandler/GetSubjectsResponse")]
            IAsyncResult BeginGetSubjects(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSubjects'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSubjects'.</param>
            /// <returns>The 'IEnumerable`1' returned from the 'GetSubjects' operation.</returns>
            IEnumerable<string> EndGetSubjects(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'ProcessDirectory' operation.
            /// </summary>
            /// <param name="targetDirectory">The value for the 'targetDirectory' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FileHandler/ProcessDirectoryDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FileHandler/ProcessDirectory", ReplyAction="http://tempuri.org/FileHandler/ProcessDirectoryResponse")]
            IAsyncResult BeginProcessDirectory(string targetDirectory, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginProcessDirectory'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginProcessDirectory'.</param>
            /// <returns>The 'IEnumerable`1' returned from the 'ProcessDirectory' operation.</returns>
            IEnumerable<string> EndProcessDirectory(IAsyncResult result);
        }
        
        internal sealed class FileHandlerEntityContainer : EntityContainer
        {
            
            public FileHandlerEntityContainer()
            {
            }
        }
    }
    
    /// <summary>
    /// The 'GraphicFeatureDetails' class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class GraphicFeatureDetails : ComplexObject
    {
        
        private string _layerName;
        
        private string _objectCode;
        
        private string _objectName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnLayerNameChanging(string value);
        partial void OnLayerNameChanged();
        partial void OnObjectCodeChanging(string value);
        partial void OnObjectCodeChanged();
        partial void OnObjectNameChanging(string value);
        partial void OnObjectNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="GraphicFeatureDetails"/> class.
        /// </summary>
        public GraphicFeatureDetails()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'LayerName' value.
        /// </summary>
        [DataMember()]
        public string LayerName
        {
            get
            {
                return this._layerName;
            }
            set
            {
                if ((this._layerName != value))
                {
                    this.OnLayerNameChanging(value);
                    this.RaiseDataMemberChanging("LayerName");
                    this.ValidateProperty("LayerName", value);
                    this._layerName = value;
                    this.RaiseDataMemberChanged("LayerName");
                    this.OnLayerNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ObjectCode' value.
        /// </summary>
        [DataMember()]
        public string ObjectCode
        {
            get
            {
                return this._objectCode;
            }
            set
            {
                if ((this._objectCode != value))
                {
                    this.OnObjectCodeChanging(value);
                    this.RaiseDataMemberChanging("ObjectCode");
                    this.ValidateProperty("ObjectCode", value);
                    this._objectCode = value;
                    this.RaiseDataMemberChanged("ObjectCode");
                    this.OnObjectCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ObjectName' value.
        /// </summary>
        [DataMember()]
        public string ObjectName
        {
            get
            {
                return this._objectName;
            }
            set
            {
                if ((this._objectName != value))
                {
                    this.OnObjectNameChanging(value);
                    this.RaiseDataMemberChanging("ObjectName");
                    this.ValidateProperty("ObjectName", value);
                    this._objectName = value;
                    this.RaiseDataMemberChanged("ObjectName");
                    this.OnObjectNameChanged();
                }
            }
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'HydroService' DomainService.
    /// </summary>
    public sealed partial class HydroContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="HydroContext"/> class.
        /// </summary>
        public HydroContext() : 
                this(new WebDomainClient<IHydroServiceContract>(new Uri("LanSysWebGIS-Web-HydroService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="HydroContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The HydroService service URI.</param>
        public HydroContext(Uri serviceUri) : 
                this(new WebDomainClient<IHydroServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="HydroContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public HydroContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="DetailsOfCO2"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<DetailsOfCO2> DetailsOfCO2s
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DetailsOfCO2>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DetailsOfCO2Chamical"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<DetailsOfCO2Chamical> DetailsOfCO2Chamicals
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DetailsOfCO2Chamical>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DetailsOfCO2InjectionWell"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<DetailsOfCO2InjectionWell> DetailsOfCO2InjectionWells
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DetailsOfCO2InjectionWell>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DetailsOfDeposit"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<DetailsOfDeposit> DetailsOfDeposits
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DetailsOfDeposit>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="MashinAlatVaTajhizat"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<MashinAlatVaTajhizat> MashinAlatVaTajhizats
        {
            get
            {
                return base.EntityContainer.GetEntitySet<MashinAlatVaTajhizat>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Persons"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<Persons> Persons
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Persons>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PersonsSavabeg"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<PersonsSavabeg> PersonsSavabegs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PersonsSavabeg>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Peymanha"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<Peymanha> Peymanhas
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Peymanha>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Peymankar"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<Peymankar> Peymankars
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Peymankar>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ProjectIdentification"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<ProjectIdentification> ProjectIdentifications
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ProjectIdentification>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SummaryOfPermits"/> entity instances that have been loaded into this <see cref="HydroContext"/> instance.
        /// </summary>
        public EntitySet<SummaryOfPermits> SummaryOfPermits
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SummaryOfPermits>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DetailsOfCO2"/> entity instances using the 'GetDetailsOfCO2' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DetailsOfCO2"/> entity instances.</returns>
        public EntityQuery<DetailsOfCO2> GetDetailsOfCO2Query()
        {
            this.ValidateMethod("GetDetailsOfCO2Query", null);
            return base.CreateQuery<DetailsOfCO2>("GetDetailsOfCO2", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DetailsOfCO2Chamical"/> entity instances using the 'GetDetailsOfCO2Chamical' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DetailsOfCO2Chamical"/> entity instances.</returns>
        public EntityQuery<DetailsOfCO2Chamical> GetDetailsOfCO2ChamicalQuery()
        {
            this.ValidateMethod("GetDetailsOfCO2ChamicalQuery", null);
            return base.CreateQuery<DetailsOfCO2Chamical>("GetDetailsOfCO2Chamical", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DetailsOfCO2InjectionWell"/> entity instances using the 'GetDetailsOfCO2InjectionWell' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DetailsOfCO2InjectionWell"/> entity instances.</returns>
        public EntityQuery<DetailsOfCO2InjectionWell> GetDetailsOfCO2InjectionWellQuery()
        {
            this.ValidateMethod("GetDetailsOfCO2InjectionWellQuery", null);
            return base.CreateQuery<DetailsOfCO2InjectionWell>("GetDetailsOfCO2InjectionWell", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DetailsOfDeposit"/> entity instances using the 'GetDetailsOfDeposit' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DetailsOfDeposit"/> entity instances.</returns>
        public EntityQuery<DetailsOfDeposit> GetDetailsOfDepositQuery()
        {
            this.ValidateMethod("GetDetailsOfDepositQuery", null);
            return base.CreateQuery<DetailsOfDeposit>("GetDetailsOfDeposit", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="MashinAlatVaTajhizat"/> entity instances using the 'GetMashinAlatVaTajhizat' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="MashinAlatVaTajhizat"/> entity instances.</returns>
        public EntityQuery<MashinAlatVaTajhizat> GetMashinAlatVaTajhizatQuery()
        {
            this.ValidateMethod("GetMashinAlatVaTajhizatQuery", null);
            return base.CreateQuery<MashinAlatVaTajhizat>("GetMashinAlatVaTajhizat", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Persons"/> entity instances using the 'GetPersons' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Persons"/> entity instances.</returns>
        public EntityQuery<Persons> GetPersonsQuery()
        {
            this.ValidateMethod("GetPersonsQuery", null);
            return base.CreateQuery<Persons>("GetPersons", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PersonsSavabeg"/> entity instances using the 'GetPersonsSavabeg' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PersonsSavabeg"/> entity instances.</returns>
        public EntityQuery<PersonsSavabeg> GetPersonsSavabegQuery()
        {
            this.ValidateMethod("GetPersonsSavabegQuery", null);
            return base.CreateQuery<PersonsSavabeg>("GetPersonsSavabeg", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Peymanha"/> entity instances using the 'GetPeymanha' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Peymanha"/> entity instances.</returns>
        public EntityQuery<Peymanha> GetPeymanhaQuery()
        {
            this.ValidateMethod("GetPeymanhaQuery", null);
            return base.CreateQuery<Peymanha>("GetPeymanha", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Peymankar"/> entity instances using the 'GetPeymankar' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Peymankar"/> entity instances.</returns>
        public EntityQuery<Peymankar> GetPeymankarQuery()
        {
            this.ValidateMethod("GetPeymankarQuery", null);
            return base.CreateQuery<Peymankar>("GetPeymankar", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ProjectIdentification"/> entity instances using the 'GetProjectIdentification' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ProjectIdentification"/> entity instances.</returns>
        public EntityQuery<ProjectIdentification> GetProjectIdentificationQuery()
        {
            this.ValidateMethod("GetProjectIdentificationQuery", null);
            return base.CreateQuery<ProjectIdentification>("GetProjectIdentification", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SummaryOfPermits"/> entity instances using the 'GetSummaryOfPermits' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SummaryOfPermits"/> entity instances.</returns>
        public EntityQuery<SummaryOfPermits> GetSummaryOfPermitsQuery()
        {
            this.ValidateMethod("GetSummaryOfPermitsQuery", null);
            return base.CreateQuery<SummaryOfPermits>("GetSummaryOfPermits", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new HydroContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'HydroService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IHydroServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetDetailsOfCO2' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetDetailsOfCO2DomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetDetailsOfCO2", ReplyAction="http://tempuri.org/HydroService/GetDetailsOfCO2Response")]
            [WebGet()]
            IAsyncResult BeginGetDetailsOfCO2(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDetailsOfCO2'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDetailsOfCO2'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDetailsOfCO2' operation.</returns>
            QueryResult<DetailsOfCO2> EndGetDetailsOfCO2(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDetailsOfCO2Chamical' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetDetailsOfCO2ChamicalDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetDetailsOfCO2Chamical", ReplyAction="http://tempuri.org/HydroService/GetDetailsOfCO2ChamicalResponse")]
            [WebGet()]
            IAsyncResult BeginGetDetailsOfCO2Chamical(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDetailsOfCO2Chamical'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDetailsOfCO2Chamical'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDetailsOfCO2Chamical' operation.</returns>
            QueryResult<DetailsOfCO2Chamical> EndGetDetailsOfCO2Chamical(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDetailsOfCO2InjectionWell' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetDetailsOfCO2InjectionWellDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetDetailsOfCO2InjectionWell", ReplyAction="http://tempuri.org/HydroService/GetDetailsOfCO2InjectionWellResponse")]
            [WebGet()]
            IAsyncResult BeginGetDetailsOfCO2InjectionWell(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDetailsOfCO2InjectionWell'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDetailsOfCO2InjectionWell'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDetailsOfCO2InjectionWell' operation.</returns>
            QueryResult<DetailsOfCO2InjectionWell> EndGetDetailsOfCO2InjectionWell(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDetailsOfDeposit' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetDetailsOfDepositDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetDetailsOfDeposit", ReplyAction="http://tempuri.org/HydroService/GetDetailsOfDepositResponse")]
            [WebGet()]
            IAsyncResult BeginGetDetailsOfDeposit(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDetailsOfDeposit'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDetailsOfDeposit'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDetailsOfDeposit' operation.</returns>
            QueryResult<DetailsOfDeposit> EndGetDetailsOfDeposit(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMashinAlatVaTajhizat' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetMashinAlatVaTajhizatDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetMashinAlatVaTajhizat", ReplyAction="http://tempuri.org/HydroService/GetMashinAlatVaTajhizatResponse")]
            [WebGet()]
            IAsyncResult BeginGetMashinAlatVaTajhizat(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMashinAlatVaTajhizat'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMashinAlatVaTajhizat'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMashinAlatVaTajhizat' operation.</returns>
            QueryResult<MashinAlatVaTajhizat> EndGetMashinAlatVaTajhizat(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersons' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetPersonsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetPersons", ReplyAction="http://tempuri.org/HydroService/GetPersonsResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersons(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersons'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersons'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersons' operation.</returns>
            QueryResult<Persons> EndGetPersons(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonsSavabeg' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetPersonsSavabegDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetPersonsSavabeg", ReplyAction="http://tempuri.org/HydroService/GetPersonsSavabegResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonsSavabeg(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonsSavabeg'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonsSavabeg'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonsSavabeg' operation.</returns>
            QueryResult<PersonsSavabeg> EndGetPersonsSavabeg(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPeymanha' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetPeymanhaDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetPeymanha", ReplyAction="http://tempuri.org/HydroService/GetPeymanhaResponse")]
            [WebGet()]
            IAsyncResult BeginGetPeymanha(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPeymanha'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPeymanha'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPeymanha' operation.</returns>
            QueryResult<Peymanha> EndGetPeymanha(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPeymankar' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetPeymankarDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetPeymankar", ReplyAction="http://tempuri.org/HydroService/GetPeymankarResponse")]
            [WebGet()]
            IAsyncResult BeginGetPeymankar(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPeymankar'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPeymankar'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPeymankar' operation.</returns>
            QueryResult<Peymankar> EndGetPeymankar(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetProjectIdentification' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetProjectIdentificationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetProjectIdentification", ReplyAction="http://tempuri.org/HydroService/GetProjectIdentificationResponse")]
            [WebGet()]
            IAsyncResult BeginGetProjectIdentification(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetProjectIdentification'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetProjectIdentification'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetProjectIdentification' operation.</returns>
            QueryResult<ProjectIdentification> EndGetProjectIdentification(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSummaryOfPermits' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/GetSummaryOfPermitsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/GetSummaryOfPermits", ReplyAction="http://tempuri.org/HydroService/GetSummaryOfPermitsResponse")]
            [WebGet()]
            IAsyncResult BeginGetSummaryOfPermits(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSummaryOfPermits'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSummaryOfPermits'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSummaryOfPermits' operation.</returns>
            QueryResult<SummaryOfPermits> EndGetSummaryOfPermits(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/HydroService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/HydroService/SubmitChanges", ReplyAction="http://tempuri.org/HydroService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class HydroContextEntityContainer : EntityContainer
        {
            
            public HydroContextEntityContainer()
            {
                this.CreateEntitySet<DetailsOfCO2>(EntitySetOperations.All);
                this.CreateEntitySet<DetailsOfCO2Chamical>(EntitySetOperations.All);
                this.CreateEntitySet<DetailsOfCO2InjectionWell>(EntitySetOperations.All);
                this.CreateEntitySet<DetailsOfDeposit>(EntitySetOperations.All);
                this.CreateEntitySet<MashinAlatVaTajhizat>(EntitySetOperations.All);
                this.CreateEntitySet<Persons>(EntitySetOperations.All);
                this.CreateEntitySet<PersonsSavabeg>(EntitySetOperations.All);
                this.CreateEntitySet<Peymanha>(EntitySetOperations.All);
                this.CreateEntitySet<Peymankar>(EntitySetOperations.All);
                this.CreateEntitySet<ProjectIdentification>(EntitySetOperations.All);
                this.CreateEntitySet<SummaryOfPermits>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Attach' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Attach : Entity
    {
        
        private string _fileExt;
        
        private string _fileName;
        
        private string _filePath;
        
        private int _icopid;
        
        private EntityRef<ICOPMAS_Spec> _icopmas_Spec;
        
        private int _id;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFileExtChanging(string value);
        partial void OnFileExtChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnFilePathChanging(string value);
        partial void OnFilePathChanged();
        partial void OnICOPIDChanging(int value);
        partial void OnICOPIDChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Attach"/> class.
        /// </summary>
        public ICOPMAS_Attach()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FileExt' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(20)]
        public string FileExt
        {
            get
            {
                return this._fileExt;
            }
            set
            {
                if ((this._fileExt != value))
                {
                    this.OnFileExtChanging(value);
                    this.RaiseDataMemberChanging("FileExt");
                    this.ValidateProperty("FileExt", value);
                    this._fileExt = value;
                    this.RaiseDataMemberChanged("FileExt");
                    this.OnFileExtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if ((this._fileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.RaiseDataMemberChanging("FileName");
                    this.ValidateProperty("FileName", value);
                    this._fileName = value;
                    this.RaiseDataMemberChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FilePath' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(512)]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if ((this._filePath != value))
                {
                    this.OnFilePathChanging(value);
                    this.RaiseDataMemberChanging("FilePath");
                    this.ValidateProperty("FilePath", value);
                    this._filePath = value;
                    this.RaiseDataMemberChanged("FilePath");
                    this.OnFilePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ICOPID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ICOPID
        {
            get
            {
                return this._icopid;
            }
            set
            {
                if ((this._icopid != value))
                {
                    this.OnICOPIDChanging(value);
                    this.RaiseDataMemberChanging("ICOPID");
                    this.ValidateProperty("ICOPID", value);
                    this._icopid = value;
                    this.RaiseDataMemberChanged("ICOPID");
                    this.OnICOPIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="ICOPMAS_Spec"/> entity.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Attach", "ICOPID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public ICOPMAS_Spec ICOPMAS_Spec
        {
            get
            {
                if ((this._icopmas_Spec == null))
                {
                    this._icopmas_Spec = new EntityRef<ICOPMAS_Spec>(this, "ICOPMAS_Spec", this.FilterICOPMAS_Spec);
                }
                return this._icopmas_Spec.Entity;
            }
            set
            {
                ICOPMAS_Spec previous = this.ICOPMAS_Spec;
                if ((previous != value))
                {
                    this.ValidateProperty("ICOPMAS_Spec", value);
                    if ((previous != null))
                    {
                        this._icopmas_Spec.Entity = null;
                        previous.ICOPMAS_Attach.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ICOPID = value.ID;
                    }
                    else
                    {
                        this.ICOPID = default(int);
                    }
                    this._icopmas_Spec.Entity = value;
                    if ((value != null))
                    {
                        value.ICOPMAS_Attach.Add(this);
                    }
                    this.RaisePropertyChanged("ICOPMAS_Spec");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        private bool FilterICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            return (entity.ID == this.ICOPID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._icopid, this._id);
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Keyword' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Keyword : Entity
    {
        
        private int _icopid;
        
        private EntityRef<ICOPMAS_Spec> _icopmas_Spec;
        
        private int _id;
        
        private string _keyword;
        
        private string _keyword_En;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnICOPIDChanging(int value);
        partial void OnICOPIDChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnKeywordChanging(string value);
        partial void OnKeywordChanged();
        partial void OnKeyword_EnChanging(string value);
        partial void OnKeyword_EnChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Keyword"/> class.
        /// </summary>
        public ICOPMAS_Keyword()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ICOPID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ICOPID
        {
            get
            {
                return this._icopid;
            }
            set
            {
                if ((this._icopid != value))
                {
                    this.OnICOPIDChanging(value);
                    this.RaiseDataMemberChanging("ICOPID");
                    this.ValidateProperty("ICOPID", value);
                    this._icopid = value;
                    this.RaiseDataMemberChanged("ICOPID");
                    this.OnICOPIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="ICOPMAS_Spec"/> entity.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Keyword", "ICOPID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public ICOPMAS_Spec ICOPMAS_Spec
        {
            get
            {
                if ((this._icopmas_Spec == null))
                {
                    this._icopmas_Spec = new EntityRef<ICOPMAS_Spec>(this, "ICOPMAS_Spec", this.FilterICOPMAS_Spec);
                }
                return this._icopmas_Spec.Entity;
            }
            set
            {
                ICOPMAS_Spec previous = this.ICOPMAS_Spec;
                if ((previous != value))
                {
                    this.ValidateProperty("ICOPMAS_Spec", value);
                    if ((previous != null))
                    {
                        this._icopmas_Spec.Entity = null;
                        previous.ICOPMAS_Keyword.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ICOPID = value.ID;
                    }
                    else
                    {
                        this.ICOPID = default(int);
                    }
                    this._icopmas_Spec.Entity = value;
                    if ((value != null))
                    {
                        value.ICOPMAS_Keyword.Add(this);
                    }
                    this.RaisePropertyChanged("ICOPMAS_Spec");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keyword' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Keyword
        {
            get
            {
                return this._keyword;
            }
            set
            {
                if ((this._keyword != value))
                {
                    this.OnKeywordChanging(value);
                    this.RaiseDataMemberChanging("Keyword");
                    this.ValidateProperty("Keyword", value);
                    this._keyword = value;
                    this.RaiseDataMemberChanged("Keyword");
                    this.OnKeywordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keyword_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Keyword_En
        {
            get
            {
                return this._keyword_En;
            }
            set
            {
                if ((this._keyword_En != value))
                {
                    this.OnKeyword_EnChanging(value);
                    this.RaiseDataMemberChanging("Keyword_En");
                    this.ValidateProperty("Keyword_En", value);
                    this._keyword_En = value;
                    this.RaiseDataMemberChanged("Keyword_En");
                    this.OnKeyword_EnChanged();
                }
            }
        }
        
        private bool FilterICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            return (entity.ID == this.ICOPID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._icopid, this._id);
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Season' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Season : Entity
    {
        
        private EntityCollection<ICOPMAS_Spec> _icopmas_Spec;
        
        private int _id;
        
        private string _name;
        
        private Nullable<int> _typeID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeIDChanging(Nullable<int> value);
        partial void OnTypeIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Season"/> class.
        /// </summary>
        public ICOPMAS_Season()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="ICOPMAS_Spec"/> entity instances.
        /// </summary>
        [Association("ICOPMAS_Season_ICOPMAS_Spec", "ID", "SeasonID")]
        [XmlIgnore()]
        public EntityCollection<ICOPMAS_Spec> ICOPMAS_Spec
        {
            get
            {
                if ((this._icopmas_Spec == null))
                {
                    this._icopmas_Spec = new EntityCollection<ICOPMAS_Spec>(this, "ICOPMAS_Spec", this.FilterICOPMAS_Spec, this.AttachICOPMAS_Spec, this.DetachICOPMAS_Spec);
                }
                return this._icopmas_Spec;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TypeID
        {
            get
            {
                return this._typeID;
            }
            set
            {
                if ((this._typeID != value))
                {
                    this.OnTypeIDChanging(value);
                    this.RaiseDataMemberChanging("TypeID");
                    this.ValidateProperty("TypeID", value);
                    this._typeID = value;
                    this.RaiseDataMemberChanged("TypeID");
                    this.OnTypeIDChanged();
                }
            }
        }
        
        private void AttachICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            entity.ICOPMAS_Season = this;
        }
        
        private void DetachICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            entity.ICOPMAS_Season = null;
        }
        
        private bool FilterICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            return (entity.SeasonID == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Spec' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Spec : Entity
    {
        
        private EntityCollection<ICOPMAS_Attach> _icopmas_Attach;
        
        private EntityCollection<ICOPMAS_Keyword> _icopmas_Keyword;
        
        private EntityRef<ICOPMAS_Season> _icopmas_Season;
        
        private EntityCollection<ICOPMAS_Writer> _icopmas_Writer;
        
        private int _id;
        
        private string _name_En;
        
        private string _name_FA;
        
        private int _seasonID;
        
        private int _subjectID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnName_EnChanging(string value);
        partial void OnName_EnChanged();
        partial void OnName_FAChanging(string value);
        partial void OnName_FAChanged();
        partial void OnSeasonIDChanging(int value);
        partial void OnSeasonIDChanged();
        partial void OnSubjectIDChanging(int value);
        partial void OnSubjectIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Spec"/> class.
        /// </summary>
        public ICOPMAS_Spec()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="ICOPMAS_Attach"/> entity instances.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Attach", "ID", "ICOPID")]
        [XmlIgnore()]
        public EntityCollection<ICOPMAS_Attach> ICOPMAS_Attach
        {
            get
            {
                if ((this._icopmas_Attach == null))
                {
                    this._icopmas_Attach = new EntityCollection<ICOPMAS_Attach>(this, "ICOPMAS_Attach", this.FilterICOPMAS_Attach, this.AttachICOPMAS_Attach, this.DetachICOPMAS_Attach);
                }
                return this._icopmas_Attach;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="ICOPMAS_Keyword"/> entity instances.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Keyword", "ID", "ICOPID")]
        [XmlIgnore()]
        public EntityCollection<ICOPMAS_Keyword> ICOPMAS_Keyword
        {
            get
            {
                if ((this._icopmas_Keyword == null))
                {
                    this._icopmas_Keyword = new EntityCollection<ICOPMAS_Keyword>(this, "ICOPMAS_Keyword", this.FilterICOPMAS_Keyword, this.AttachICOPMAS_Keyword, this.DetachICOPMAS_Keyword);
                }
                return this._icopmas_Keyword;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="ICOPMAS_Season"/> entity.
        /// </summary>
        [Association("ICOPMAS_Season_ICOPMAS_Spec", "SeasonID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public ICOPMAS_Season ICOPMAS_Season
        {
            get
            {
                if ((this._icopmas_Season == null))
                {
                    this._icopmas_Season = new EntityRef<ICOPMAS_Season>(this, "ICOPMAS_Season", this.FilterICOPMAS_Season);
                }
                return this._icopmas_Season.Entity;
            }
            set
            {
                ICOPMAS_Season previous = this.ICOPMAS_Season;
                if ((previous != value))
                {
                    this.ValidateProperty("ICOPMAS_Season", value);
                    if ((previous != null))
                    {
                        this._icopmas_Season.Entity = null;
                        previous.ICOPMAS_Spec.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.SeasonID = value.ID;
                    }
                    else
                    {
                        this.SeasonID = default(int);
                    }
                    this._icopmas_Season.Entity = value;
                    if ((value != null))
                    {
                        value.ICOPMAS_Spec.Add(this);
                    }
                    this.RaisePropertyChanged("ICOPMAS_Season");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="ICOPMAS_Writer"/> entity instances.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Writer", "ID", "ICOPID")]
        [XmlIgnore()]
        public EntityCollection<ICOPMAS_Writer> ICOPMAS_Writer
        {
            get
            {
                if ((this._icopmas_Writer == null))
                {
                    this._icopmas_Writer = new EntityCollection<ICOPMAS_Writer>(this, "ICOPMAS_Writer", this.FilterICOPMAS_Writer, this.AttachICOPMAS_Writer, this.DetachICOPMAS_Writer);
                }
                return this._icopmas_Writer;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Name_En
        {
            get
            {
                return this._name_En;
            }
            set
            {
                if ((this._name_En != value))
                {
                    this.OnName_EnChanging(value);
                    this.RaiseDataMemberChanging("Name_En");
                    this.ValidateProperty("Name_En", value);
                    this._name_En = value;
                    this.RaiseDataMemberChanged("Name_En");
                    this.OnName_EnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name_FA' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Name_FA
        {
            get
            {
                return this._name_FA;
            }
            set
            {
                if ((this._name_FA != value))
                {
                    this.OnName_FAChanging(value);
                    this.RaiseDataMemberChanging("Name_FA");
                    this.ValidateProperty("Name_FA", value);
                    this._name_FA = value;
                    this.RaiseDataMemberChanged("Name_FA");
                    this.OnName_FAChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SeasonID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public int SeasonID
        {
            get
            {
                return this._seasonID;
            }
            set
            {
                if ((this._seasonID != value))
                {
                    this.OnSeasonIDChanging(value);
                    this.RaiseDataMemberChanging("SeasonID");
                    this.ValidateProperty("SeasonID", value);
                    this._seasonID = value;
                    this.RaiseDataMemberChanged("SeasonID");
                    this.OnSeasonIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        public int SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.RaiseDataMemberChanging("SubjectID");
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaiseDataMemberChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        private void AttachICOPMAS_Attach(ICOPMAS_Attach entity)
        {
            entity.ICOPMAS_Spec = this;
        }
        
        private void DetachICOPMAS_Attach(ICOPMAS_Attach entity)
        {
            entity.ICOPMAS_Spec = null;
        }
        
        private bool FilterICOPMAS_Attach(ICOPMAS_Attach entity)
        {
            return (entity.ICOPID == this.ID);
        }
        
        private void AttachICOPMAS_Keyword(ICOPMAS_Keyword entity)
        {
            entity.ICOPMAS_Spec = this;
        }
        
        private void DetachICOPMAS_Keyword(ICOPMAS_Keyword entity)
        {
            entity.ICOPMAS_Spec = null;
        }
        
        private bool FilterICOPMAS_Keyword(ICOPMAS_Keyword entity)
        {
            return (entity.ICOPID == this.ID);
        }
        
        private bool FilterICOPMAS_Season(ICOPMAS_Season entity)
        {
            return (entity.ID == this.SeasonID);
        }
        
        private void AttachICOPMAS_Writer(ICOPMAS_Writer entity)
        {
            entity.ICOPMAS_Spec = this;
        }
        
        private void DetachICOPMAS_Writer(ICOPMAS_Writer entity)
        {
            entity.ICOPMAS_Spec = null;
        }
        
        private bool FilterICOPMAS_Writer(ICOPMAS_Writer entity)
        {
            return (entity.ICOPID == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Type' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Type : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Type"/> class.
        /// </summary>
        public ICOPMAS_Type()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'ICOPMAS_Writer' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ICOPMAS_Writer : Entity
    {
        
        private int _icopid;
        
        private EntityRef<ICOPMAS_Spec> _icopmas_Spec;
        
        private int _id;
        
        private string _writerName;
        
        private string _writerName_En;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnICOPIDChanging(int value);
        partial void OnICOPIDChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnWriterNameChanging(string value);
        partial void OnWriterNameChanged();
        partial void OnWriterName_EnChanging(string value);
        partial void OnWriterName_EnChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ICOPMAS_Writer"/> class.
        /// </summary>
        public ICOPMAS_Writer()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ICOPID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ICOPID
        {
            get
            {
                return this._icopid;
            }
            set
            {
                if ((this._icopid != value))
                {
                    this.OnICOPIDChanging(value);
                    this.RaiseDataMemberChanging("ICOPID");
                    this.ValidateProperty("ICOPID", value);
                    this._icopid = value;
                    this.RaiseDataMemberChanged("ICOPID");
                    this.OnICOPIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="ICOPMAS_Spec"/> entity.
        /// </summary>
        [Association("ICOPMAS_Spec_ICOPMAS_Writer", "ICOPID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public ICOPMAS_Spec ICOPMAS_Spec
        {
            get
            {
                if ((this._icopmas_Spec == null))
                {
                    this._icopmas_Spec = new EntityRef<ICOPMAS_Spec>(this, "ICOPMAS_Spec", this.FilterICOPMAS_Spec);
                }
                return this._icopmas_Spec.Entity;
            }
            set
            {
                ICOPMAS_Spec previous = this.ICOPMAS_Spec;
                if ((previous != value))
                {
                    this.ValidateProperty("ICOPMAS_Spec", value);
                    if ((previous != null))
                    {
                        this._icopmas_Spec.Entity = null;
                        previous.ICOPMAS_Writer.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ICOPID = value.ID;
                    }
                    else
                    {
                        this.ICOPID = default(int);
                    }
                    this._icopmas_Spec.Entity = value;
                    if ((value != null))
                    {
                        value.ICOPMAS_Writer.Add(this);
                    }
                    this.RaisePropertyChanged("ICOPMAS_Spec");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WriterName' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string WriterName
        {
            get
            {
                return this._writerName;
            }
            set
            {
                if ((this._writerName != value))
                {
                    this.OnWriterNameChanging(value);
                    this.RaiseDataMemberChanging("WriterName");
                    this.ValidateProperty("WriterName", value);
                    this._writerName = value;
                    this.RaiseDataMemberChanged("WriterName");
                    this.OnWriterNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WriterName_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string WriterName_En
        {
            get
            {
                return this._writerName_En;
            }
            set
            {
                if ((this._writerName_En != value))
                {
                    this.OnWriterName_EnChanging(value);
                    this.RaiseDataMemberChanging("WriterName_En");
                    this.ValidateProperty("WriterName_En", value);
                    this._writerName_En = value;
                    this.RaiseDataMemberChanged("WriterName_En");
                    this.OnWriterName_EnChanged();
                }
            }
        }
        
        private bool FilterICOPMAS_Spec(ICOPMAS_Spec entity)
        {
            return (entity.ID == this.ICOPID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._icopid, this._id);
        }
    }
    
    /// <summary>
    /// The 'KeyWordList' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class KeyWordList : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="KeyWordList"/> class.
        /// </summary>
        public KeyWordList()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Log_UserAction' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Log_UserAction : Entity
    {
        
        private DateTime _actionDate;
        
        private string _actionDesc;
        
        private string _actionType;
        
        private string _applicationName;
        
        private int _id;
        
        private int _userID;
        
        private string _userName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnActionDateChanging(DateTime value);
        partial void OnActionDateChanged();
        partial void OnActionDescChanging(string value);
        partial void OnActionDescChanged();
        partial void OnActionTypeChanging(string value);
        partial void OnActionTypeChanged();
        partial void OnApplicationNameChanging(string value);
        partial void OnApplicationNameChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnUserIDChanging(int value);
        partial void OnUserIDChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Log_UserAction"/> class.
        /// </summary>
        public Log_UserAction()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ActionDate' value.
        /// </summary>
        [DataMember()]
        public DateTime ActionDate
        {
            get
            {
                return this._actionDate;
            }
            set
            {
                if ((this._actionDate != value))
                {
                    this.OnActionDateChanging(value);
                    this.RaiseDataMemberChanging("ActionDate");
                    this.ValidateProperty("ActionDate", value);
                    this._actionDate = value;
                    this.RaiseDataMemberChanged("ActionDate");
                    this.OnActionDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ActionDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string ActionDesc
        {
            get
            {
                return this._actionDesc;
            }
            set
            {
                if ((this._actionDesc != value))
                {
                    this.OnActionDescChanging(value);
                    this.RaiseDataMemberChanging("ActionDesc");
                    this.ValidateProperty("ActionDesc", value);
                    this._actionDesc = value;
                    this.RaiseDataMemberChanged("ActionDesc");
                    this.OnActionDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ActionType' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ActionType
        {
            get
            {
                return this._actionType;
            }
            set
            {
                if ((this._actionType != value))
                {
                    this.OnActionTypeChanging(value);
                    this.RaiseDataMemberChanging("ActionType");
                    this.ValidateProperty("ActionType", value);
                    this._actionType = value;
                    this.RaiseDataMemberChanged("ActionType");
                    this.OnActionTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ApplicationName
        {
            get
            {
                return this._applicationName;
            }
            set
            {
                if ((this._applicationName != value))
                {
                    this.OnApplicationNameChanging(value);
                    this.RaiseDataMemberChanging("ApplicationName");
                    this.ValidateProperty("ApplicationName", value);
                    this._applicationName = value;
                    this.RaiseDataMemberChanged("ApplicationName");
                    this.OnApplicationNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        public int UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaiseDataMemberChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.RaiseDataMemberChanging("UserName");
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaiseDataMemberChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Log_UserInOut' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Log_UserInOut : Entity
    {
        
        private string _applicationName;
        
        private int _id;
        
        private Nullable<DateTime> _inTime;
        
        private string _ip;
        
        private Nullable<DateTime> _outTime;
        
        private int _userID;
        
        private string _userName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationNameChanging(string value);
        partial void OnApplicationNameChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnInTimeChanging(Nullable<DateTime> value);
        partial void OnInTimeChanged();
        partial void OnIPChanging(string value);
        partial void OnIPChanged();
        partial void OnOutTimeChanging(Nullable<DateTime> value);
        partial void OnOutTimeChanged();
        partial void OnUserIDChanging(int value);
        partial void OnUserIDChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Log_UserInOut"/> class.
        /// </summary>
        public Log_UserInOut()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ApplicationName
        {
            get
            {
                return this._applicationName;
            }
            set
            {
                if ((this._applicationName != value))
                {
                    this.OnApplicationNameChanging(value);
                    this.RaiseDataMemberChanging("ApplicationName");
                    this.ValidateProperty("ApplicationName", value);
                    this._applicationName = value;
                    this.RaiseDataMemberChanged("ApplicationName");
                    this.OnApplicationNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> InTime
        {
            get
            {
                return this._inTime;
            }
            set
            {
                if ((this._inTime != value))
                {
                    this.OnInTimeChanging(value);
                    this.RaiseDataMemberChanging("InTime");
                    this.ValidateProperty("InTime", value);
                    this._inTime = value;
                    this.RaiseDataMemberChanged("InTime");
                    this.OnInTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IP' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string IP
        {
            get
            {
                return this._ip;
            }
            set
            {
                if ((this._ip != value))
                {
                    this.OnIPChanging(value);
                    this.RaiseDataMemberChanging("IP");
                    this.ValidateProperty("IP", value);
                    this._ip = value;
                    this.RaiseDataMemberChanged("IP");
                    this.OnIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OutTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> OutTime
        {
            get
            {
                return this._outTime;
            }
            set
            {
                if ((this._outTime != value))
                {
                    this.OnOutTimeChanging(value);
                    this.RaiseDataMemberChanging("OutTime");
                    this.ValidateProperty("OutTime", value);
                    this._outTime = value;
                    this.RaiseDataMemberChanged("OutTime");
                    this.OnOutTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        public int UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaiseDataMemberChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.RaiseDataMemberChanging("UserName");
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaiseDataMemberChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'MashinAlatVaTajhizat' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class MashinAlatVaTajhizat : Entity
    {
        
        private int _id;
        
        private Nullable<bool> _isAmadeBeKar;
        
        private Nullable<bool> _isEstijari;
        
        private Nullable<bool> _isMashgoolBeKar;
        
        private Nullable<bool> _isMelki;
        
        private string _molahezat;
        
        private string _nameMashinYaTajhiz;
        
        private EntityRef<Peymankar> _peymankar;
        
        private Nullable<int> _peymankarId;
        
        private Nullable<double> _saleSakht;
        
        private Nullable<double> _shomareSafePorseshName;
        
        private Nullable<DateTime> _tarikhErsalForm;
        
        private Nullable<double> _tedadSafehayePorseshName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIsAmadeBeKarChanging(Nullable<bool> value);
        partial void OnIsAmadeBeKarChanged();
        partial void OnIsEstijariChanging(Nullable<bool> value);
        partial void OnIsEstijariChanged();
        partial void OnIsMashgoolBeKarChanging(Nullable<bool> value);
        partial void OnIsMashgoolBeKarChanged();
        partial void OnIsMelkiChanging(Nullable<bool> value);
        partial void OnIsMelkiChanged();
        partial void OnMolahezatChanging(string value);
        partial void OnMolahezatChanged();
        partial void OnNameMashinYaTajhizChanging(string value);
        partial void OnNameMashinYaTajhizChanged();
        partial void OnPeymankarIdChanging(Nullable<int> value);
        partial void OnPeymankarIdChanged();
        partial void OnSaleSakhtChanging(Nullable<double> value);
        partial void OnSaleSakhtChanged();
        partial void OnShomareSafePorseshNameChanging(Nullable<double> value);
        partial void OnShomareSafePorseshNameChanged();
        partial void OnTarikhErsalFormChanging(Nullable<DateTime> value);
        partial void OnTarikhErsalFormChanged();
        partial void OnTedadSafehayePorseshNameChanging(Nullable<double> value);
        partial void OnTedadSafehayePorseshNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="MashinAlatVaTajhizat"/> class.
        /// </summary>
        public MashinAlatVaTajhizat()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsAmadeBeKar' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsAmadeBeKar
        {
            get
            {
                return this._isAmadeBeKar;
            }
            set
            {
                if ((this._isAmadeBeKar != value))
                {
                    this.OnIsAmadeBeKarChanging(value);
                    this.RaiseDataMemberChanging("IsAmadeBeKar");
                    this.ValidateProperty("IsAmadeBeKar", value);
                    this._isAmadeBeKar = value;
                    this.RaiseDataMemberChanged("IsAmadeBeKar");
                    this.OnIsAmadeBeKarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsEstijari' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsEstijari
        {
            get
            {
                return this._isEstijari;
            }
            set
            {
                if ((this._isEstijari != value))
                {
                    this.OnIsEstijariChanging(value);
                    this.RaiseDataMemberChanging("IsEstijari");
                    this.ValidateProperty("IsEstijari", value);
                    this._isEstijari = value;
                    this.RaiseDataMemberChanged("IsEstijari");
                    this.OnIsEstijariChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsMashgoolBeKar' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsMashgoolBeKar
        {
            get
            {
                return this._isMashgoolBeKar;
            }
            set
            {
                if ((this._isMashgoolBeKar != value))
                {
                    this.OnIsMashgoolBeKarChanging(value);
                    this.RaiseDataMemberChanging("IsMashgoolBeKar");
                    this.ValidateProperty("IsMashgoolBeKar", value);
                    this._isMashgoolBeKar = value;
                    this.RaiseDataMemberChanged("IsMashgoolBeKar");
                    this.OnIsMashgoolBeKarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsMelki' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsMelki
        {
            get
            {
                return this._isMelki;
            }
            set
            {
                if ((this._isMelki != value))
                {
                    this.OnIsMelkiChanging(value);
                    this.RaiseDataMemberChanging("IsMelki");
                    this.ValidateProperty("IsMelki", value);
                    this._isMelki = value;
                    this.RaiseDataMemberChanged("IsMelki");
                    this.OnIsMelkiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Molahezat' value.
        /// </summary>
        [DataMember()]
        [StringLength(500)]
        public string Molahezat
        {
            get
            {
                return this._molahezat;
            }
            set
            {
                if ((this._molahezat != value))
                {
                    this.OnMolahezatChanging(value);
                    this.RaiseDataMemberChanging("Molahezat");
                    this.ValidateProperty("Molahezat", value);
                    this._molahezat = value;
                    this.RaiseDataMemberChanged("Molahezat");
                    this.OnMolahezatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameMashinYaTajhiz' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameMashinYaTajhiz
        {
            get
            {
                return this._nameMashinYaTajhiz;
            }
            set
            {
                if ((this._nameMashinYaTajhiz != value))
                {
                    this.OnNameMashinYaTajhizChanging(value);
                    this.RaiseDataMemberChanging("NameMashinYaTajhiz");
                    this.ValidateProperty("NameMashinYaTajhiz", value);
                    this._nameMashinYaTajhiz = value;
                    this.RaiseDataMemberChanged("NameMashinYaTajhiz");
                    this.OnNameMashinYaTajhizChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Peymankar"/> entity.
        /// </summary>
        [Association("Peymankar_MashinAlatVaTajhizat", "PeymankarId", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public Peymankar Peymankar
        {
            get
            {
                if ((this._peymankar == null))
                {
                    this._peymankar = new EntityRef<Peymankar>(this, "Peymankar", this.FilterPeymankar);
                }
                return this._peymankar.Entity;
            }
            set
            {
                Peymankar previous = this.Peymankar;
                if ((previous != value))
                {
                    this.ValidateProperty("Peymankar", value);
                    if ((previous != null))
                    {
                        this._peymankar.Entity = null;
                        previous.MashinAlatVaTajhizat.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PeymankarId = value.Id;
                    }
                    else
                    {
                        this.PeymankarId = default(Nullable<int>);
                    }
                    this._peymankar.Entity = value;
                    if ((value != null))
                    {
                        value.MashinAlatVaTajhizat.Add(this);
                    }
                    this.RaisePropertyChanged("Peymankar");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PeymankarId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> PeymankarId
        {
            get
            {
                return this._peymankarId;
            }
            set
            {
                if ((this._peymankarId != value))
                {
                    this.OnPeymankarIdChanging(value);
                    this.RaiseDataMemberChanging("PeymankarId");
                    this.ValidateProperty("PeymankarId", value);
                    this._peymankarId = value;
                    this.RaiseDataMemberChanged("PeymankarId");
                    this.OnPeymankarIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SaleSakht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SaleSakht
        {
            get
            {
                return this._saleSakht;
            }
            set
            {
                if ((this._saleSakht != value))
                {
                    this.OnSaleSakhtChanging(value);
                    this.RaiseDataMemberChanging("SaleSakht");
                    this.ValidateProperty("SaleSakht", value);
                    this._saleSakht = value;
                    this.RaiseDataMemberChanged("SaleSakht");
                    this.OnSaleSakhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSafePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSafePorseshName
        {
            get
            {
                return this._shomareSafePorseshName;
            }
            set
            {
                if ((this._shomareSafePorseshName != value))
                {
                    this.OnShomareSafePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("ShomareSafePorseshName");
                    this.ValidateProperty("ShomareSafePorseshName", value);
                    this._shomareSafePorseshName = value;
                    this.RaiseDataMemberChanged("ShomareSafePorseshName");
                    this.OnShomareSafePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhErsalForm' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhErsalForm
        {
            get
            {
                return this._tarikhErsalForm;
            }
            set
            {
                if ((this._tarikhErsalForm != value))
                {
                    this.OnTarikhErsalFormChanging(value);
                    this.RaiseDataMemberChanging("TarikhErsalForm");
                    this.ValidateProperty("TarikhErsalForm", value);
                    this._tarikhErsalForm = value;
                    this.RaiseDataMemberChanged("TarikhErsalForm");
                    this.OnTarikhErsalFormChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSafehayePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadSafehayePorseshName
        {
            get
            {
                return this._tedadSafehayePorseshName;
            }
            set
            {
                if ((this._tedadSafehayePorseshName != value))
                {
                    this.OnTedadSafehayePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("TedadSafehayePorseshName");
                    this.ValidateProperty("TedadSafehayePorseshName", value);
                    this._tedadSafehayePorseshName = value;
                    this.RaiseDataMemberChanged("TedadSafehayePorseshName");
                    this.OnTedadSafehayePorseshNameChanged();
                }
            }
        }
        
        private bool FilterPeymankar(Peymankar entity)
        {
            return (entity.Id == this.PeymankarId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Memberships' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Memberships : Entity
    {
        
        private Guid _applicationId;
        
        private EntityRef<Applications> _applications;
        
        private string _comment;
        
        private DateTime _createDate;
        
        private string _email;
        
        private int _failedPasswordAnswerAttemptCount;
        
        private DateTime _failedPasswordAnswerAttemptWindowsStart;
        
        private int _failedPasswordAttemptCount;
        
        private DateTime _failedPasswordAttemptWindowStart;
        
        private bool _isApproved;
        
        private bool _isLockedOut;
        
        private DateTime _lastLockoutDate;
        
        private DateTime _lastLoginDate;
        
        private DateTime _lastPasswordChangedDate;
        
        private string _password;
        
        private string _passwordAnswer;
        
        private int _passwordFormat;
        
        private string _passwordQuestion;
        
        private string _passwordSalt;
        
        private Guid _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationIdChanging(Guid value);
        partial void OnApplicationIdChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnCreateDateChanging(DateTime value);
        partial void OnCreateDateChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
        partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
        partial void OnFailedPasswordAttemptCountChanging(int value);
        partial void OnFailedPasswordAttemptCountChanged();
        partial void OnFailedPasswordAttemptWindowStartChanging(DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
        partial void OnIsLockedOutChanging(bool value);
        partial void OnIsLockedOutChanged();
        partial void OnLastLockoutDateChanging(DateTime value);
        partial void OnLastLockoutDateChanged();
        partial void OnLastLoginDateChanging(DateTime value);
        partial void OnLastLoginDateChanged();
        partial void OnLastPasswordChangedDateChanging(DateTime value);
        partial void OnLastPasswordChangedDateChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnPasswordAnswerChanging(string value);
        partial void OnPasswordAnswerChanged();
        partial void OnPasswordFormatChanging(int value);
        partial void OnPasswordFormatChanged();
        partial void OnPasswordQuestionChanging(string value);
        partial void OnPasswordQuestionChanged();
        partial void OnPasswordSaltChanging(string value);
        partial void OnPasswordSaltChanged();
        partial void OnUserIdChanging(Guid value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Memberships"/> class.
        /// </summary>
        public Memberships()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Guid ApplicationId
        {
            get
            {
                return this._applicationId;
            }
            set
            {
                if ((this._applicationId != value))
                {
                    this.OnApplicationIdChanging(value);
                    this.RaiseDataMemberChanging("ApplicationId");
                    this.ValidateProperty("ApplicationId", value);
                    this._applicationId = value;
                    this.RaiseDataMemberChanged("ApplicationId");
                    this.OnApplicationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Applications"/> entity.
        /// </summary>
        [Association("Applications_Memberships", "ApplicationId", "ApplicationId", IsForeignKey=true)]
        [XmlIgnore()]
        public Applications Applications
        {
            get
            {
                if ((this._applications == null))
                {
                    this._applications = new EntityRef<Applications>(this, "Applications", this.FilterApplications);
                }
                return this._applications.Entity;
            }
            set
            {
                Applications previous = this.Applications;
                if ((previous != value))
                {
                    this.ValidateProperty("Applications", value);
                    if ((previous != null))
                    {
                        this._applications.Entity = null;
                        previous.Memberships.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ApplicationId = value.ApplicationId;
                    }
                    else
                    {
                        this.ApplicationId = default(Guid);
                    }
                    this._applications.Entity = value;
                    if ((value != null))
                    {
                        value.Memberships.Add(this);
                    }
                    this.RaisePropertyChanged("Applications");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Comment' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                if ((this._comment != value))
                {
                    this.OnCommentChanging(value);
                    this.RaiseDataMemberChanging("Comment");
                    this.ValidateProperty("Comment", value);
                    this._comment = value;
                    this.RaiseDataMemberChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CreateDate' value.
        /// </summary>
        [DataMember()]
        public DateTime CreateDate
        {
            get
            {
                return this._createDate;
            }
            set
            {
                if ((this._createDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.RaiseDataMemberChanging("CreateDate");
                    this.ValidateProperty("CreateDate", value);
                    this._createDate = value;
                    this.RaiseDataMemberChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Email' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnEmailChanging(value);
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._email = value;
                    this.RaiseDataMemberChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FailedPasswordAnswerAttemptCount' value.
        /// </summary>
        [DataMember()]
        public int FailedPasswordAnswerAttemptCount
        {
            get
            {
                return this._failedPasswordAnswerAttemptCount;
            }
            set
            {
                if ((this._failedPasswordAnswerAttemptCount != value))
                {
                    this.OnFailedPasswordAnswerAttemptCountChanging(value);
                    this.RaiseDataMemberChanging("FailedPasswordAnswerAttemptCount");
                    this.ValidateProperty("FailedPasswordAnswerAttemptCount", value);
                    this._failedPasswordAnswerAttemptCount = value;
                    this.RaiseDataMemberChanged("FailedPasswordAnswerAttemptCount");
                    this.OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FailedPasswordAnswerAttemptWindowsStart' value.
        /// </summary>
        [DataMember()]
        public DateTime FailedPasswordAnswerAttemptWindowsStart
        {
            get
            {
                return this._failedPasswordAnswerAttemptWindowsStart;
            }
            set
            {
                if ((this._failedPasswordAnswerAttemptWindowsStart != value))
                {
                    this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
                    this.RaiseDataMemberChanging("FailedPasswordAnswerAttemptWindowsStart");
                    this.ValidateProperty("FailedPasswordAnswerAttemptWindowsStart", value);
                    this._failedPasswordAnswerAttemptWindowsStart = value;
                    this.RaiseDataMemberChanged("FailedPasswordAnswerAttemptWindowsStart");
                    this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FailedPasswordAttemptCount' value.
        /// </summary>
        [DataMember()]
        public int FailedPasswordAttemptCount
        {
            get
            {
                return this._failedPasswordAttemptCount;
            }
            set
            {
                if ((this._failedPasswordAttemptCount != value))
                {
                    this.OnFailedPasswordAttemptCountChanging(value);
                    this.RaiseDataMemberChanging("FailedPasswordAttemptCount");
                    this.ValidateProperty("FailedPasswordAttemptCount", value);
                    this._failedPasswordAttemptCount = value;
                    this.RaiseDataMemberChanged("FailedPasswordAttemptCount");
                    this.OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FailedPasswordAttemptWindowStart' value.
        /// </summary>
        [DataMember()]
        public DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return this._failedPasswordAttemptWindowStart;
            }
            set
            {
                if ((this._failedPasswordAttemptWindowStart != value))
                {
                    this.OnFailedPasswordAttemptWindowStartChanging(value);
                    this.RaiseDataMemberChanging("FailedPasswordAttemptWindowStart");
                    this.ValidateProperty("FailedPasswordAttemptWindowStart", value);
                    this._failedPasswordAttemptWindowStart = value;
                    this.RaiseDataMemberChanged("FailedPasswordAttemptWindowStart");
                    this.OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsApproved' value.
        /// </summary>
        [DataMember()]
        public bool IsApproved
        {
            get
            {
                return this._isApproved;
            }
            set
            {
                if ((this._isApproved != value))
                {
                    this.OnIsApprovedChanging(value);
                    this.RaiseDataMemberChanging("IsApproved");
                    this.ValidateProperty("IsApproved", value);
                    this._isApproved = value;
                    this.RaiseDataMemberChanged("IsApproved");
                    this.OnIsApprovedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsLockedOut' value.
        /// </summary>
        [DataMember()]
        public bool IsLockedOut
        {
            get
            {
                return this._isLockedOut;
            }
            set
            {
                if ((this._isLockedOut != value))
                {
                    this.OnIsLockedOutChanging(value);
                    this.RaiseDataMemberChanging("IsLockedOut");
                    this.ValidateProperty("IsLockedOut", value);
                    this._isLockedOut = value;
                    this.RaiseDataMemberChanged("IsLockedOut");
                    this.OnIsLockedOutChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastLockoutDate' value.
        /// </summary>
        [DataMember()]
        public DateTime LastLockoutDate
        {
            get
            {
                return this._lastLockoutDate;
            }
            set
            {
                if ((this._lastLockoutDate != value))
                {
                    this.OnLastLockoutDateChanging(value);
                    this.RaiseDataMemberChanging("LastLockoutDate");
                    this.ValidateProperty("LastLockoutDate", value);
                    this._lastLockoutDate = value;
                    this.RaiseDataMemberChanged("LastLockoutDate");
                    this.OnLastLockoutDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastLoginDate' value.
        /// </summary>
        [DataMember()]
        public DateTime LastLoginDate
        {
            get
            {
                return this._lastLoginDate;
            }
            set
            {
                if ((this._lastLoginDate != value))
                {
                    this.OnLastLoginDateChanging(value);
                    this.RaiseDataMemberChanging("LastLoginDate");
                    this.ValidateProperty("LastLoginDate", value);
                    this._lastLoginDate = value;
                    this.RaiseDataMemberChanged("LastLoginDate");
                    this.OnLastLoginDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastPasswordChangedDate' value.
        /// </summary>
        [DataMember()]
        public DateTime LastPasswordChangedDate
        {
            get
            {
                return this._lastPasswordChangedDate;
            }
            set
            {
                if ((this._lastPasswordChangedDate != value))
                {
                    this.OnLastPasswordChangedDateChanging(value);
                    this.RaiseDataMemberChanging("LastPasswordChangedDate");
                    this.ValidateProperty("LastPasswordChangedDate", value);
                    this._lastPasswordChangedDate = value;
                    this.RaiseDataMemberChanged("LastPasswordChangedDate");
                    this.OnLastPasswordChangedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Password' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(128)]
        public string Password
        {
            get
            {
                return this._password;
            }
            set
            {
                if ((this._password != value))
                {
                    this.OnPasswordChanging(value);
                    this.RaiseDataMemberChanging("Password");
                    this.ValidateProperty("Password", value);
                    this._password = value;
                    this.RaiseDataMemberChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PasswordAnswer' value.
        /// </summary>
        [DataMember()]
        [StringLength(128)]
        public string PasswordAnswer
        {
            get
            {
                return this._passwordAnswer;
            }
            set
            {
                if ((this._passwordAnswer != value))
                {
                    this.OnPasswordAnswerChanging(value);
                    this.RaiseDataMemberChanging("PasswordAnswer");
                    this.ValidateProperty("PasswordAnswer", value);
                    this._passwordAnswer = value;
                    this.RaiseDataMemberChanged("PasswordAnswer");
                    this.OnPasswordAnswerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PasswordFormat' value.
        /// </summary>
        [DataMember()]
        public int PasswordFormat
        {
            get
            {
                return this._passwordFormat;
            }
            set
            {
                if ((this._passwordFormat != value))
                {
                    this.OnPasswordFormatChanging(value);
                    this.RaiseDataMemberChanging("PasswordFormat");
                    this.ValidateProperty("PasswordFormat", value);
                    this._passwordFormat = value;
                    this.RaiseDataMemberChanged("PasswordFormat");
                    this.OnPasswordFormatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PasswordQuestion' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string PasswordQuestion
        {
            get
            {
                return this._passwordQuestion;
            }
            set
            {
                if ((this._passwordQuestion != value))
                {
                    this.OnPasswordQuestionChanging(value);
                    this.RaiseDataMemberChanging("PasswordQuestion");
                    this.ValidateProperty("PasswordQuestion", value);
                    this._passwordQuestion = value;
                    this.RaiseDataMemberChanged("PasswordQuestion");
                    this.OnPasswordQuestionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PasswordSalt' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(128)]
        public string PasswordSalt
        {
            get
            {
                return this._passwordSalt;
            }
            set
            {
                if ((this._passwordSalt != value))
                {
                    this.OnPasswordSaltChanging(value);
                    this.RaiseDataMemberChanging("PasswordSalt");
                    this.ValidateProperty("PasswordSalt", value);
                    this._passwordSalt = value;
                    this.RaiseDataMemberChanged("PasswordSalt");
                    this.OnPasswordSaltChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        private bool FilterApplications(Applications entity)
        {
            return (entity.ApplicationId == this.ApplicationId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._userId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_Attach' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_Attach : Entity
    {
        
        private int _attachID;
        
        private string _ferestandeh;
        
        private int _fieldId;
        
        private string _girandeh;
        
        private string _keywords;
        
        private string _letterDate;
        
        private string _letterNo;
        
        private int _planID;
        
        private string _regDate;
        
        private string _regNo;
        
        private string _relatedDocs;
        
        private string _subject;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAttachIDChanging(int value);
        partial void OnAttachIDChanged();
        partial void OnFerestandehChanging(string value);
        partial void OnFerestandehChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnGirandehChanging(string value);
        partial void OnGirandehChanged();
        partial void OnKeywordsChanging(string value);
        partial void OnKeywordsChanged();
        partial void OnLetterDateChanging(string value);
        partial void OnLetterDateChanged();
        partial void OnLetterNoChanging(string value);
        partial void OnLetterNoChanged();
        partial void OnPlanIDChanging(int value);
        partial void OnPlanIDChanged();
        partial void OnRegDateChanging(string value);
        partial void OnRegDateChanged();
        partial void OnRegNoChanging(string value);
        partial void OnRegNoChanged();
        partial void OnRelatedDocsChanging(string value);
        partial void OnRelatedDocsChanged();
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_Attach"/> class.
        /// </summary>
        public Mojavez_Attach()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AttachID' value.
        /// </summary>
        [DataMember()]
        public int AttachID
        {
            get
            {
                return this._attachID;
            }
            set
            {
                if ((this._attachID != value))
                {
                    this.OnAttachIDChanging(value);
                    this.RaiseDataMemberChanging("AttachID");
                    this.ValidateProperty("AttachID", value);
                    this._attachID = value;
                    this.RaiseDataMemberChanged("AttachID");
                    this.OnAttachIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Ferestandeh' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Ferestandeh
        {
            get
            {
                return this._ferestandeh;
            }
            set
            {
                if ((this._ferestandeh != value))
                {
                    this.OnFerestandehChanging(value);
                    this.RaiseDataMemberChanging("Ferestandeh");
                    this.ValidateProperty("Ferestandeh", value);
                    this._ferestandeh = value;
                    this.RaiseDataMemberChanged("Ferestandeh");
                    this.OnFerestandehChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Girandeh' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Girandeh
        {
            get
            {
                return this._girandeh;
            }
            set
            {
                if ((this._girandeh != value))
                {
                    this.OnGirandehChanging(value);
                    this.RaiseDataMemberChanging("Girandeh");
                    this.ValidateProperty("Girandeh", value);
                    this._girandeh = value;
                    this.RaiseDataMemberChanged("Girandeh");
                    this.OnGirandehChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keywords' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Keywords
        {
            get
            {
                return this._keywords;
            }
            set
            {
                if ((this._keywords != value))
                {
                    this.OnKeywordsChanging(value);
                    this.RaiseDataMemberChanging("Keywords");
                    this.ValidateProperty("Keywords", value);
                    this._keywords = value;
                    this.RaiseDataMemberChanged("Keywords");
                    this.OnKeywordsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterDate
        {
            get
            {
                return this._letterDate;
            }
            set
            {
                if ((this._letterDate != value))
                {
                    this.OnLetterDateChanging(value);
                    this.RaiseDataMemberChanging("LetterDate");
                    this.ValidateProperty("LetterDate", value);
                    this._letterDate = value;
                    this.RaiseDataMemberChanged("LetterDate");
                    this.OnLetterDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LetterNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LetterNo
        {
            get
            {
                return this._letterNo;
            }
            set
            {
                if ((this._letterNo != value))
                {
                    this.OnLetterNoChanging(value);
                    this.RaiseDataMemberChanging("LetterNo");
                    this.ValidateProperty("LetterNo", value);
                    this._letterNo = value;
                    this.RaiseDataMemberChanged("LetterNo");
                    this.OnLetterNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanID' value.
        /// </summary>
        [DataMember()]
        public int PlanID
        {
            get
            {
                return this._planID;
            }
            set
            {
                if ((this._planID != value))
                {
                    this.OnPlanIDChanging(value);
                    this.RaiseDataMemberChanging("PlanID");
                    this.ValidateProperty("PlanID", value);
                    this._planID = value;
                    this.RaiseDataMemberChanged("PlanID");
                    this.OnPlanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RegDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string RegDate
        {
            get
            {
                return this._regDate;
            }
            set
            {
                if ((this._regDate != value))
                {
                    this.OnRegDateChanging(value);
                    this.RaiseDataMemberChanging("RegDate");
                    this.ValidateProperty("RegDate", value);
                    this._regDate = value;
                    this.RaiseDataMemberChanged("RegDate");
                    this.OnRegDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RegNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string RegNo
        {
            get
            {
                return this._regNo;
            }
            set
            {
                if ((this._regNo != value))
                {
                    this.OnRegNoChanging(value);
                    this.RaiseDataMemberChanging("RegNo");
                    this.ValidateProperty("RegNo", value);
                    this._regNo = value;
                    this.RaiseDataMemberChanged("RegNo");
                    this.OnRegNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RelatedDocs' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string RelatedDocs
        {
            get
            {
                return this._relatedDocs;
            }
            set
            {
                if ((this._relatedDocs != value))
                {
                    this.OnRelatedDocsChanging(value);
                    this.RaiseDataMemberChanging("RelatedDocs");
                    this.ValidateProperty("RelatedDocs", value);
                    this._relatedDocs = value;
                    this.RaiseDataMemberChanged("RelatedDocs");
                    this.OnRelatedDocsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Subject' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(255)]
        public string Subject
        {
            get
            {
                return this._subject;
            }
            set
            {
                if ((this._subject != value))
                {
                    this.OnSubjectChanging(value);
                    this.RaiseDataMemberChanging("Subject");
                    this.ValidateProperty("Subject", value);
                    this._subject = value;
                    this.RaiseDataMemberChanged("Subject");
                    this.OnSubjectChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_Attach_Files' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_Attach_Files : Entity
    {
        
        private int _attachID;
        
        private int _fileID;
        
        private string _fileName;
        
        private string _filePath;
        
        private int _planID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAttachIDChanging(int value);
        partial void OnAttachIDChanged();
        partial void OnFileIDChanging(int value);
        partial void OnFileIDChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnFilePathChanging(string value);
        partial void OnFilePathChanged();
        partial void OnPlanIDChanging(int value);
        partial void OnPlanIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_Attach_Files"/> class.
        /// </summary>
        public Mojavez_Attach_Files()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AttachID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int AttachID
        {
            get
            {
                return this._attachID;
            }
            set
            {
                if ((this._attachID != value))
                {
                    this.OnAttachIDChanging(value);
                    this.ValidateProperty("AttachID", value);
                    this._attachID = value;
                    this.RaisePropertyChanged("AttachID");
                    this.OnAttachIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FileID
        {
            get
            {
                return this._fileID;
            }
            set
            {
                if ((this._fileID != value))
                {
                    this.OnFileIDChanging(value);
                    this.ValidateProperty("FileID", value);
                    this._fileID = value;
                    this.RaisePropertyChanged("FileID");
                    this.OnFileIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if ((this._fileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.RaiseDataMemberChanging("FileName");
                    this.ValidateProperty("FileName", value);
                    this._fileName = value;
                    this.RaiseDataMemberChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FilePath' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if ((this._filePath != value))
                {
                    this.OnFilePathChanging(value);
                    this.RaiseDataMemberChanging("FilePath");
                    this.ValidateProperty("FilePath", value);
                    this._filePath = value;
                    this.RaiseDataMemberChanged("FilePath");
                    this.OnFilePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PlanID
        {
            get
            {
                return this._planID;
            }
            set
            {
                if ((this._planID != value))
                {
                    this.OnPlanIDChanging(value);
                    this.ValidateProperty("PlanID", value);
                    this._planID = value;
                    this.RaisePropertyChanged("PlanID");
                    this.OnPlanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._attachID, this._fileID, this._planID);
        }
    }
    
    /// <summary>
    /// The 'Mojavez_DocType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_DocType : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_DocType"/> class.
        /// </summary>
        public Mojavez_DocType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_DocTypeRelation' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_DocTypeRelation : Entity
    {
        
        private int _docTypeId;
        
        private int _fieldId;
        
        private int _id;
        
        private int _requestTypeId;
        
        private int _usageTypeId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDocTypeIdChanging(int value);
        partial void OnDocTypeIdChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnRequestTypeIdChanging(int value);
        partial void OnRequestTypeIdChanged();
        partial void OnUsageTypeIdChanging(int value);
        partial void OnUsageTypeIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_DocTypeRelation"/> class.
        /// </summary>
        public Mojavez_DocTypeRelation()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DocTypeId' value.
        /// </summary>
        [DataMember()]
        public int DocTypeId
        {
            get
            {
                return this._docTypeId;
            }
            set
            {
                if ((this._docTypeId != value))
                {
                    this.OnDocTypeIdChanging(value);
                    this.RaiseDataMemberChanging("DocTypeId");
                    this.ValidateProperty("DocTypeId", value);
                    this._docTypeId = value;
                    this.RaiseDataMemberChanged("DocTypeId");
                    this.OnDocTypeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RequestTypeId' value.
        /// </summary>
        [DataMember()]
        public int RequestTypeId
        {
            get
            {
                return this._requestTypeId;
            }
            set
            {
                if ((this._requestTypeId != value))
                {
                    this.OnRequestTypeIdChanging(value);
                    this.RaiseDataMemberChanging("RequestTypeId");
                    this.ValidateProperty("RequestTypeId", value);
                    this._requestTypeId = value;
                    this.RaiseDataMemberChanged("RequestTypeId");
                    this.OnRequestTypeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UsageTypeId' value.
        /// </summary>
        [DataMember()]
        public int UsageTypeId
        {
            get
            {
                return this._usageTypeId;
            }
            set
            {
                if ((this._usageTypeId != value))
                {
                    this.OnUsageTypeIdChanging(value);
                    this.RaiseDataMemberChanging("UsageTypeId");
                    this.ValidateProperty("UsageTypeId", value);
                    this._usageTypeId = value;
                    this.RaiseDataMemberChanged("UsageTypeId");
                    this.OnUsageTypeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_PlanDoc' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_PlanDoc : Entity
    {
        
        private Nullable<int> _docId;
        
        private string _fileDesc;
        
        private string _fileName;
        
        private int _id;
        
        private Nullable<bool> _noNeed;
        
        private int _planId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDocIdChanging(Nullable<int> value);
        partial void OnDocIdChanged();
        partial void OnFileDescChanging(string value);
        partial void OnFileDescChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNoNeedChanging(Nullable<bool> value);
        partial void OnNoNeedChanged();
        partial void OnPlanIdChanging(int value);
        partial void OnPlanIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_PlanDoc"/> class.
        /// </summary>
        public Mojavez_PlanDoc()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DocId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> DocId
        {
            get
            {
                return this._docId;
            }
            set
            {
                if ((this._docId != value))
                {
                    this.OnDocIdChanging(value);
                    this.RaiseDataMemberChanging("DocId");
                    this.ValidateProperty("DocId", value);
                    this._docId = value;
                    this.RaiseDataMemberChanged("DocId");
                    this.OnDocIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string FileDesc
        {
            get
            {
                return this._fileDesc;
            }
            set
            {
                if ((this._fileDesc != value))
                {
                    this.OnFileDescChanging(value);
                    this.RaiseDataMemberChanging("FileDesc");
                    this.ValidateProperty("FileDesc", value);
                    this._fileDesc = value;
                    this.RaiseDataMemberChanged("FileDesc");
                    this.OnFileDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileName' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if ((this._fileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.RaiseDataMemberChanging("FileName");
                    this.ValidateProperty("FileName", value);
                    this._fileName = value;
                    this.RaiseDataMemberChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NoNeed' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> NoNeed
        {
            get
            {
                return this._noNeed;
            }
            set
            {
                if ((this._noNeed != value))
                {
                    this.OnNoNeedChanging(value);
                    this.RaiseDataMemberChanging("NoNeed");
                    this.ValidateProperty("NoNeed", value);
                    this._noNeed = value;
                    this.RaiseDataMemberChanged("NoNeed");
                    this.OnNoNeedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanId' value.
        /// </summary>
        [DataMember()]
        public int PlanId
        {
            get
            {
                return this._planId;
            }
            set
            {
                if ((this._planId != value))
                {
                    this.OnPlanIdChanging(value);
                    this.RaiseDataMemberChanging("PlanId");
                    this.ValidateProperty("PlanId", value);
                    this._planId = value;
                    this.RaiseDataMemberChanged("PlanId");
                    this.OnPlanIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_PlanSpec' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_PlanSpec : Entity
    {
        
        private Nullable<bool> _abandaziExist;
        
        private string _abandaziType;
        
        private string _address;
        
        private string _consultant;
        
        private Nullable<bool> _dockExist;
        
        private Nullable<double> _dockHeight;
        
        private Nullable<double> _dockLen;
        
        private Nullable<double> _dockWidth;
        
        private Nullable<double> _dolphinExist;
        
        private Nullable<double> _dolphinHeight;
        
        private Nullable<double> _dolphinLen;
        
        private Nullable<double> _dolphinWidth;
        
        private Nullable<double> _e1;
        
        private Nullable<double> _e2;
        
        private Nullable<double> _e3;
        
        private string _email;
        
        private Nullable<double> _eskelehDepth;
        
        private Nullable<bool> _eskelehExist;
        
        private Nullable<double> _eskelehLen;
        
        private Nullable<double> _eskelehWidth;
        
        private Nullable<double> _estehsalArea;
        
        private Nullable<bool> _estehsalExist;
        
        private Nullable<double> _estehsalLen;
        
        private Nullable<double> _estehsalWidth;
        
        private string _fax;
        
        private string _field;
        
        private int _fieldId;
        
        private string _grade;
        
        private int _id;
        
        private string _investAmount;
        
        private Nullable<bool> _isClosed;
        
        private Nullable<bool> _lairoobiExist;
        
        private Nullable<double> _lairoobiVol;
        
        private string _managerEmail;
        
        private string _managerMobile;
        
        private string _managerName;
        
        private Nullable<bool> _mojShekanExist;
        
        private Nullable<double> _mojShekanMainLen;
        
        private Nullable<double> _mojShekanSubLen;
        
        private Nullable<double> _n1;
        
        private Nullable<double> _n2;
        
        private Nullable<double> _n3;
        
        private string _name;
        
        private Nullable<int> _ostanId;
        
        private string _parvandehNo;
        
        private Nullable<int> _personelCount;
        
        private string _phone;
        
        private string _planGoals;
        
        private bool _planGoalsAttached;
        
        private string _planSummary;
        
        private bool _planSummaryAttached;
        
        private string _registerDate;
        
        private string _requester;
        
        private string _requesterAddress;
        
        private Nullable<bool> _sakooExist;
        
        private Nullable<double> _sakooLen;
        
        private Nullable<double> _sakooWidth;
        
        private Nullable<bool> _sayerExist;
        
        private string _sayerProp;
        
        private Nullable<int> _shahrestanId;
        
        private Nullable<double> _shenavarAbkhor;
        
        private Nullable<double> _shenavarLen;
        
        private Nullable<double> _shenavarMaxCapacity;
        
        private string _shenavarType;
        
        private Nullable<double> _shenavarWidth;
        
        private string _webSite;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAbandaziExistChanging(Nullable<bool> value);
        partial void OnAbandaziExistChanged();
        partial void OnAbandaziTypeChanging(string value);
        partial void OnAbandaziTypeChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnConsultantChanging(string value);
        partial void OnConsultantChanged();
        partial void OnDockExistChanging(Nullable<bool> value);
        partial void OnDockExistChanged();
        partial void OnDockHeightChanging(Nullable<double> value);
        partial void OnDockHeightChanged();
        partial void OnDockLenChanging(Nullable<double> value);
        partial void OnDockLenChanged();
        partial void OnDockWidthChanging(Nullable<double> value);
        partial void OnDockWidthChanged();
        partial void OnDolphinExistChanging(Nullable<double> value);
        partial void OnDolphinExistChanged();
        partial void OnDolphinHeightChanging(Nullable<double> value);
        partial void OnDolphinHeightChanged();
        partial void OnDolphinLenChanging(Nullable<double> value);
        partial void OnDolphinLenChanged();
        partial void OnDolphinWidthChanging(Nullable<double> value);
        partial void OnDolphinWidthChanged();
        partial void OnE1Changing(Nullable<double> value);
        partial void OnE1Changed();
        partial void OnE2Changing(Nullable<double> value);
        partial void OnE2Changed();
        partial void OnE3Changing(Nullable<double> value);
        partial void OnE3Changed();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnEskelehDepthChanging(Nullable<double> value);
        partial void OnEskelehDepthChanged();
        partial void OnEskelehExistChanging(Nullable<bool> value);
        partial void OnEskelehExistChanged();
        partial void OnEskelehLenChanging(Nullable<double> value);
        partial void OnEskelehLenChanged();
        partial void OnEskelehWidthChanging(Nullable<double> value);
        partial void OnEskelehWidthChanged();
        partial void OnEstehsalAreaChanging(Nullable<double> value);
        partial void OnEstehsalAreaChanged();
        partial void OnEstehsalExistChanging(Nullable<bool> value);
        partial void OnEstehsalExistChanged();
        partial void OnEstehsalLenChanging(Nullable<double> value);
        partial void OnEstehsalLenChanged();
        partial void OnEstehsalWidthChanging(Nullable<double> value);
        partial void OnEstehsalWidthChanged();
        partial void OnFaxChanging(string value);
        partial void OnFaxChanged();
        partial void OnFieldChanging(string value);
        partial void OnFieldChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnGradeChanging(string value);
        partial void OnGradeChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnInvestAmountChanging(string value);
        partial void OnInvestAmountChanged();
        partial void OnIsClosedChanging(Nullable<bool> value);
        partial void OnIsClosedChanged();
        partial void OnLairoobiExistChanging(Nullable<bool> value);
        partial void OnLairoobiExistChanged();
        partial void OnLairoobiVolChanging(Nullable<double> value);
        partial void OnLairoobiVolChanged();
        partial void OnManagerEmailChanging(string value);
        partial void OnManagerEmailChanged();
        partial void OnManagerMobileChanging(string value);
        partial void OnManagerMobileChanged();
        partial void OnManagerNameChanging(string value);
        partial void OnManagerNameChanged();
        partial void OnMojShekanExistChanging(Nullable<bool> value);
        partial void OnMojShekanExistChanged();
        partial void OnMojShekanMainLenChanging(Nullable<double> value);
        partial void OnMojShekanMainLenChanged();
        partial void OnMojShekanSubLenChanging(Nullable<double> value);
        partial void OnMojShekanSubLenChanged();
        partial void OnN1Changing(Nullable<double> value);
        partial void OnN1Changed();
        partial void OnN2Changing(Nullable<double> value);
        partial void OnN2Changed();
        partial void OnN3Changing(Nullable<double> value);
        partial void OnN3Changed();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnOstanIdChanging(Nullable<int> value);
        partial void OnOstanIdChanged();
        partial void OnParvandehNoChanging(string value);
        partial void OnParvandehNoChanged();
        partial void OnPersonelCountChanging(Nullable<int> value);
        partial void OnPersonelCountChanged();
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
        partial void OnPlanGoalsChanging(string value);
        partial void OnPlanGoalsChanged();
        partial void OnPlanGoalsAttachedChanging(bool value);
        partial void OnPlanGoalsAttachedChanged();
        partial void OnPlanSummaryChanging(string value);
        partial void OnPlanSummaryChanged();
        partial void OnPlanSummaryAttachedChanging(bool value);
        partial void OnPlanSummaryAttachedChanged();
        partial void OnRegisterDateChanging(string value);
        partial void OnRegisterDateChanged();
        partial void OnRequesterChanging(string value);
        partial void OnRequesterChanged();
        partial void OnRequesterAddressChanging(string value);
        partial void OnRequesterAddressChanged();
        partial void OnSakooExistChanging(Nullable<bool> value);
        partial void OnSakooExistChanged();
        partial void OnSakooLenChanging(Nullable<double> value);
        partial void OnSakooLenChanged();
        partial void OnSakooWidthChanging(Nullable<double> value);
        partial void OnSakooWidthChanged();
        partial void OnSayerExistChanging(Nullable<bool> value);
        partial void OnSayerExistChanged();
        partial void OnSayerPropChanging(string value);
        partial void OnSayerPropChanged();
        partial void OnShahrestanIdChanging(Nullable<int> value);
        partial void OnShahrestanIdChanged();
        partial void OnShenavarAbkhorChanging(Nullable<double> value);
        partial void OnShenavarAbkhorChanged();
        partial void OnShenavarLenChanging(Nullable<double> value);
        partial void OnShenavarLenChanged();
        partial void OnShenavarMaxCapacityChanging(Nullable<double> value);
        partial void OnShenavarMaxCapacityChanged();
        partial void OnShenavarTypeChanging(string value);
        partial void OnShenavarTypeChanged();
        partial void OnShenavarWidthChanging(Nullable<double> value);
        partial void OnShenavarWidthChanged();
        partial void OnWebSiteChanging(string value);
        partial void OnWebSiteChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_PlanSpec"/> class.
        /// </summary>
        public Mojavez_PlanSpec()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AbandaziExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> AbandaziExist
        {
            get
            {
                return this._abandaziExist;
            }
            set
            {
                if ((this._abandaziExist != value))
                {
                    this.OnAbandaziExistChanging(value);
                    this.RaiseDataMemberChanging("AbandaziExist");
                    this.ValidateProperty("AbandaziExist", value);
                    this._abandaziExist = value;
                    this.RaiseDataMemberChanged("AbandaziExist");
                    this.OnAbandaziExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'AbandaziType' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string AbandaziType
        {
            get
            {
                return this._abandaziType;
            }
            set
            {
                if ((this._abandaziType != value))
                {
                    this.OnAbandaziTypeChanging(value);
                    this.RaiseDataMemberChanging("AbandaziType");
                    this.ValidateProperty("AbandaziType", value);
                    this._abandaziType = value;
                    this.RaiseDataMemberChanged("AbandaziType");
                    this.OnAbandaziTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Address' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                if ((this._address != value))
                {
                    this.OnAddressChanging(value);
                    this.RaiseDataMemberChanging("Address");
                    this.ValidateProperty("Address", value);
                    this._address = value;
                    this.RaiseDataMemberChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Consultant' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string Consultant
        {
            get
            {
                return this._consultant;
            }
            set
            {
                if ((this._consultant != value))
                {
                    this.OnConsultantChanging(value);
                    this.RaiseDataMemberChanging("Consultant");
                    this.ValidateProperty("Consultant", value);
                    this._consultant = value;
                    this.RaiseDataMemberChanged("Consultant");
                    this.OnConsultantChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DockExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> DockExist
        {
            get
            {
                return this._dockExist;
            }
            set
            {
                if ((this._dockExist != value))
                {
                    this.OnDockExistChanging(value);
                    this.RaiseDataMemberChanging("DockExist");
                    this.ValidateProperty("DockExist", value);
                    this._dockExist = value;
                    this.RaiseDataMemberChanged("DockExist");
                    this.OnDockExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DockHeight' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DockHeight
        {
            get
            {
                return this._dockHeight;
            }
            set
            {
                if ((this._dockHeight != value))
                {
                    this.OnDockHeightChanging(value);
                    this.RaiseDataMemberChanging("DockHeight");
                    this.ValidateProperty("DockHeight", value);
                    this._dockHeight = value;
                    this.RaiseDataMemberChanged("DockHeight");
                    this.OnDockHeightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DockLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DockLen
        {
            get
            {
                return this._dockLen;
            }
            set
            {
                if ((this._dockLen != value))
                {
                    this.OnDockLenChanging(value);
                    this.RaiseDataMemberChanging("DockLen");
                    this.ValidateProperty("DockLen", value);
                    this._dockLen = value;
                    this.RaiseDataMemberChanged("DockLen");
                    this.OnDockLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DockWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DockWidth
        {
            get
            {
                return this._dockWidth;
            }
            set
            {
                if ((this._dockWidth != value))
                {
                    this.OnDockWidthChanging(value);
                    this.RaiseDataMemberChanging("DockWidth");
                    this.ValidateProperty("DockWidth", value);
                    this._dockWidth = value;
                    this.RaiseDataMemberChanged("DockWidth");
                    this.OnDockWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DolphinExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DolphinExist
        {
            get
            {
                return this._dolphinExist;
            }
            set
            {
                if ((this._dolphinExist != value))
                {
                    this.OnDolphinExistChanging(value);
                    this.RaiseDataMemberChanging("DolphinExist");
                    this.ValidateProperty("DolphinExist", value);
                    this._dolphinExist = value;
                    this.RaiseDataMemberChanged("DolphinExist");
                    this.OnDolphinExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DolphinHeight' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DolphinHeight
        {
            get
            {
                return this._dolphinHeight;
            }
            set
            {
                if ((this._dolphinHeight != value))
                {
                    this.OnDolphinHeightChanging(value);
                    this.RaiseDataMemberChanging("DolphinHeight");
                    this.ValidateProperty("DolphinHeight", value);
                    this._dolphinHeight = value;
                    this.RaiseDataMemberChanged("DolphinHeight");
                    this.OnDolphinHeightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DolphinLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DolphinLen
        {
            get
            {
                return this._dolphinLen;
            }
            set
            {
                if ((this._dolphinLen != value))
                {
                    this.OnDolphinLenChanging(value);
                    this.RaiseDataMemberChanging("DolphinLen");
                    this.ValidateProperty("DolphinLen", value);
                    this._dolphinLen = value;
                    this.RaiseDataMemberChanged("DolphinLen");
                    this.OnDolphinLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DolphinWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DolphinWidth
        {
            get
            {
                return this._dolphinWidth;
            }
            set
            {
                if ((this._dolphinWidth != value))
                {
                    this.OnDolphinWidthChanging(value);
                    this.RaiseDataMemberChanging("DolphinWidth");
                    this.ValidateProperty("DolphinWidth", value);
                    this._dolphinWidth = value;
                    this.RaiseDataMemberChanged("DolphinWidth");
                    this.OnDolphinWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E1' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E1
        {
            get
            {
                return this._e1;
            }
            set
            {
                if ((this._e1 != value))
                {
                    this.OnE1Changing(value);
                    this.RaiseDataMemberChanging("E1");
                    this.ValidateProperty("E1", value);
                    this._e1 = value;
                    this.RaiseDataMemberChanged("E1");
                    this.OnE1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E2' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E2
        {
            get
            {
                return this._e2;
            }
            set
            {
                if ((this._e2 != value))
                {
                    this.OnE2Changing(value);
                    this.RaiseDataMemberChanging("E2");
                    this.ValidateProperty("E2", value);
                    this._e2 = value;
                    this.RaiseDataMemberChanged("E2");
                    this.OnE2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E3' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E3
        {
            get
            {
                return this._e3;
            }
            set
            {
                if ((this._e3 != value))
                {
                    this.OnE3Changing(value);
                    this.RaiseDataMemberChanging("E3");
                    this.ValidateProperty("E3", value);
                    this._e3 = value;
                    this.RaiseDataMemberChanged("E3");
                    this.OnE3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Email' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnEmailChanging(value);
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._email = value;
                    this.RaiseDataMemberChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehDepth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EskelehDepth
        {
            get
            {
                return this._eskelehDepth;
            }
            set
            {
                if ((this._eskelehDepth != value))
                {
                    this.OnEskelehDepthChanging(value);
                    this.RaiseDataMemberChanging("EskelehDepth");
                    this.ValidateProperty("EskelehDepth", value);
                    this._eskelehDepth = value;
                    this.RaiseDataMemberChanged("EskelehDepth");
                    this.OnEskelehDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> EskelehExist
        {
            get
            {
                return this._eskelehExist;
            }
            set
            {
                if ((this._eskelehExist != value))
                {
                    this.OnEskelehExistChanging(value);
                    this.RaiseDataMemberChanging("EskelehExist");
                    this.ValidateProperty("EskelehExist", value);
                    this._eskelehExist = value;
                    this.RaiseDataMemberChanged("EskelehExist");
                    this.OnEskelehExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EskelehLen
        {
            get
            {
                return this._eskelehLen;
            }
            set
            {
                if ((this._eskelehLen != value))
                {
                    this.OnEskelehLenChanging(value);
                    this.RaiseDataMemberChanging("EskelehLen");
                    this.ValidateProperty("EskelehLen", value);
                    this._eskelehLen = value;
                    this.RaiseDataMemberChanged("EskelehLen");
                    this.OnEskelehLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EskelehWidth
        {
            get
            {
                return this._eskelehWidth;
            }
            set
            {
                if ((this._eskelehWidth != value))
                {
                    this.OnEskelehWidthChanging(value);
                    this.RaiseDataMemberChanging("EskelehWidth");
                    this.ValidateProperty("EskelehWidth", value);
                    this._eskelehWidth = value;
                    this.RaiseDataMemberChanged("EskelehWidth");
                    this.OnEskelehWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EstehsalArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EstehsalArea
        {
            get
            {
                return this._estehsalArea;
            }
            set
            {
                if ((this._estehsalArea != value))
                {
                    this.OnEstehsalAreaChanging(value);
                    this.RaiseDataMemberChanging("EstehsalArea");
                    this.ValidateProperty("EstehsalArea", value);
                    this._estehsalArea = value;
                    this.RaiseDataMemberChanged("EstehsalArea");
                    this.OnEstehsalAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EstehsalExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> EstehsalExist
        {
            get
            {
                return this._estehsalExist;
            }
            set
            {
                if ((this._estehsalExist != value))
                {
                    this.OnEstehsalExistChanging(value);
                    this.RaiseDataMemberChanging("EstehsalExist");
                    this.ValidateProperty("EstehsalExist", value);
                    this._estehsalExist = value;
                    this.RaiseDataMemberChanged("EstehsalExist");
                    this.OnEstehsalExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EstehsalLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EstehsalLen
        {
            get
            {
                return this._estehsalLen;
            }
            set
            {
                if ((this._estehsalLen != value))
                {
                    this.OnEstehsalLenChanging(value);
                    this.RaiseDataMemberChanging("EstehsalLen");
                    this.ValidateProperty("EstehsalLen", value);
                    this._estehsalLen = value;
                    this.RaiseDataMemberChanged("EstehsalLen");
                    this.OnEstehsalLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EstehsalWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EstehsalWidth
        {
            get
            {
                return this._estehsalWidth;
            }
            set
            {
                if ((this._estehsalWidth != value))
                {
                    this.OnEstehsalWidthChanging(value);
                    this.RaiseDataMemberChanging("EstehsalWidth");
                    this.ValidateProperty("EstehsalWidth", value);
                    this._estehsalWidth = value;
                    this.RaiseDataMemberChanged("EstehsalWidth");
                    this.OnEstehsalWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Fax' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Fax
        {
            get
            {
                return this._fax;
            }
            set
            {
                if ((this._fax != value))
                {
                    this.OnFaxChanging(value);
                    this.RaiseDataMemberChanging("Fax");
                    this.ValidateProperty("Fax", value);
                    this._fax = value;
                    this.RaiseDataMemberChanged("Fax");
                    this.OnFaxChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Field' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Field
        {
            get
            {
                return this._field;
            }
            set
            {
                if ((this._field != value))
                {
                    this.OnFieldChanging(value);
                    this.RaiseDataMemberChanging("Field");
                    this.ValidateProperty("Field", value);
                    this._field = value;
                    this.RaiseDataMemberChanged("Field");
                    this.OnFieldChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Grade' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Grade
        {
            get
            {
                return this._grade;
            }
            set
            {
                if ((this._grade != value))
                {
                    this.OnGradeChanging(value);
                    this.RaiseDataMemberChanging("Grade");
                    this.ValidateProperty("Grade", value);
                    this._grade = value;
                    this.RaiseDataMemberChanged("Grade");
                    this.OnGradeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InvestAmount' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string InvestAmount
        {
            get
            {
                return this._investAmount;
            }
            set
            {
                if ((this._investAmount != value))
                {
                    this.OnInvestAmountChanging(value);
                    this.RaiseDataMemberChanging("InvestAmount");
                    this.ValidateProperty("InvestAmount", value);
                    this._investAmount = value;
                    this.RaiseDataMemberChanged("InvestAmount");
                    this.OnInvestAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsClosed' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsClosed
        {
            get
            {
                return this._isClosed;
            }
            set
            {
                if ((this._isClosed != value))
                {
                    this.OnIsClosedChanging(value);
                    this.RaiseDataMemberChanging("IsClosed");
                    this.ValidateProperty("IsClosed", value);
                    this._isClosed = value;
                    this.RaiseDataMemberChanged("IsClosed");
                    this.OnIsClosedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LairoobiExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> LairoobiExist
        {
            get
            {
                return this._lairoobiExist;
            }
            set
            {
                if ((this._lairoobiExist != value))
                {
                    this.OnLairoobiExistChanging(value);
                    this.RaiseDataMemberChanging("LairoobiExist");
                    this.ValidateProperty("LairoobiExist", value);
                    this._lairoobiExist = value;
                    this.RaiseDataMemberChanged("LairoobiExist");
                    this.OnLairoobiExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LairoobiVol' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> LairoobiVol
        {
            get
            {
                return this._lairoobiVol;
            }
            set
            {
                if ((this._lairoobiVol != value))
                {
                    this.OnLairoobiVolChanging(value);
                    this.RaiseDataMemberChanging("LairoobiVol");
                    this.ValidateProperty("LairoobiVol", value);
                    this._lairoobiVol = value;
                    this.RaiseDataMemberChanged("LairoobiVol");
                    this.OnLairoobiVolChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ManagerEmail' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ManagerEmail
        {
            get
            {
                return this._managerEmail;
            }
            set
            {
                if ((this._managerEmail != value))
                {
                    this.OnManagerEmailChanging(value);
                    this.RaiseDataMemberChanging("ManagerEmail");
                    this.ValidateProperty("ManagerEmail", value);
                    this._managerEmail = value;
                    this.RaiseDataMemberChanged("ManagerEmail");
                    this.OnManagerEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ManagerMobile' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ManagerMobile
        {
            get
            {
                return this._managerMobile;
            }
            set
            {
                if ((this._managerMobile != value))
                {
                    this.OnManagerMobileChanging(value);
                    this.RaiseDataMemberChanging("ManagerMobile");
                    this.ValidateProperty("ManagerMobile", value);
                    this._managerMobile = value;
                    this.RaiseDataMemberChanged("ManagerMobile");
                    this.OnManagerMobileChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ManagerName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ManagerName
        {
            get
            {
                return this._managerName;
            }
            set
            {
                if ((this._managerName != value))
                {
                    this.OnManagerNameChanging(value);
                    this.RaiseDataMemberChanging("ManagerName");
                    this.ValidateProperty("ManagerName", value);
                    this._managerName = value;
                    this.RaiseDataMemberChanged("ManagerName");
                    this.OnManagerNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MojShekanExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> MojShekanExist
        {
            get
            {
                return this._mojShekanExist;
            }
            set
            {
                if ((this._mojShekanExist != value))
                {
                    this.OnMojShekanExistChanging(value);
                    this.RaiseDataMemberChanging("MojShekanExist");
                    this.ValidateProperty("MojShekanExist", value);
                    this._mojShekanExist = value;
                    this.RaiseDataMemberChanged("MojShekanExist");
                    this.OnMojShekanExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MojShekanMainLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MojShekanMainLen
        {
            get
            {
                return this._mojShekanMainLen;
            }
            set
            {
                if ((this._mojShekanMainLen != value))
                {
                    this.OnMojShekanMainLenChanging(value);
                    this.RaiseDataMemberChanging("MojShekanMainLen");
                    this.ValidateProperty("MojShekanMainLen", value);
                    this._mojShekanMainLen = value;
                    this.RaiseDataMemberChanged("MojShekanMainLen");
                    this.OnMojShekanMainLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MojShekanSubLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MojShekanSubLen
        {
            get
            {
                return this._mojShekanSubLen;
            }
            set
            {
                if ((this._mojShekanSubLen != value))
                {
                    this.OnMojShekanSubLenChanging(value);
                    this.RaiseDataMemberChanging("MojShekanSubLen");
                    this.ValidateProperty("MojShekanSubLen", value);
                    this._mojShekanSubLen = value;
                    this.RaiseDataMemberChanged("MojShekanSubLen");
                    this.OnMojShekanSubLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N1' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N1
        {
            get
            {
                return this._n1;
            }
            set
            {
                if ((this._n1 != value))
                {
                    this.OnN1Changing(value);
                    this.RaiseDataMemberChanging("N1");
                    this.ValidateProperty("N1", value);
                    this._n1 = value;
                    this.RaiseDataMemberChanged("N1");
                    this.OnN1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N2' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N2
        {
            get
            {
                return this._n2;
            }
            set
            {
                if ((this._n2 != value))
                {
                    this.OnN2Changing(value);
                    this.RaiseDataMemberChanging("N2");
                    this.ValidateProperty("N2", value);
                    this._n2 = value;
                    this.RaiseDataMemberChanged("N2");
                    this.OnN2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N3' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N3
        {
            get
            {
                return this._n3;
            }
            set
            {
                if ((this._n3 != value))
                {
                    this.OnN3Changing(value);
                    this.RaiseDataMemberChanging("N3");
                    this.ValidateProperty("N3", value);
                    this._n3 = value;
                    this.RaiseDataMemberChanged("N3");
                    this.OnN3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OstanId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OstanId
        {
            get
            {
                return this._ostanId;
            }
            set
            {
                if ((this._ostanId != value))
                {
                    this.OnOstanIdChanging(value);
                    this.RaiseDataMemberChanging("OstanId");
                    this.ValidateProperty("OstanId", value);
                    this._ostanId = value;
                    this.RaiseDataMemberChanged("OstanId");
                    this.OnOstanIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParvandehNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ParvandehNo
        {
            get
            {
                return this._parvandehNo;
            }
            set
            {
                if ((this._parvandehNo != value))
                {
                    this.OnParvandehNoChanging(value);
                    this.RaiseDataMemberChanging("ParvandehNo");
                    this.ValidateProperty("ParvandehNo", value);
                    this._parvandehNo = value;
                    this.RaiseDataMemberChanged("ParvandehNo");
                    this.OnParvandehNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelCount' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> PersonelCount
        {
            get
            {
                return this._personelCount;
            }
            set
            {
                if ((this._personelCount != value))
                {
                    this.OnPersonelCountChanging(value);
                    this.RaiseDataMemberChanging("PersonelCount");
                    this.ValidateProperty("PersonelCount", value);
                    this._personelCount = value;
                    this.RaiseDataMemberChanged("PersonelCount");
                    this.OnPersonelCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Phone' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Phone
        {
            get
            {
                return this._phone;
            }
            set
            {
                if ((this._phone != value))
                {
                    this.OnPhoneChanging(value);
                    this.RaiseDataMemberChanging("Phone");
                    this.ValidateProperty("Phone", value);
                    this._phone = value;
                    this.RaiseDataMemberChanged("Phone");
                    this.OnPhoneChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanGoals' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string PlanGoals
        {
            get
            {
                return this._planGoals;
            }
            set
            {
                if ((this._planGoals != value))
                {
                    this.OnPlanGoalsChanging(value);
                    this.RaiseDataMemberChanging("PlanGoals");
                    this.ValidateProperty("PlanGoals", value);
                    this._planGoals = value;
                    this.RaiseDataMemberChanged("PlanGoals");
                    this.OnPlanGoalsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanGoalsAttached' value.
        /// </summary>
        [DataMember()]
        public bool PlanGoalsAttached
        {
            get
            {
                return this._planGoalsAttached;
            }
            set
            {
                if ((this._planGoalsAttached != value))
                {
                    this.OnPlanGoalsAttachedChanging(value);
                    this.RaiseDataMemberChanging("PlanGoalsAttached");
                    this.ValidateProperty("PlanGoalsAttached", value);
                    this._planGoalsAttached = value;
                    this.RaiseDataMemberChanged("PlanGoalsAttached");
                    this.OnPlanGoalsAttachedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanSummary' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string PlanSummary
        {
            get
            {
                return this._planSummary;
            }
            set
            {
                if ((this._planSummary != value))
                {
                    this.OnPlanSummaryChanging(value);
                    this.RaiseDataMemberChanging("PlanSummary");
                    this.ValidateProperty("PlanSummary", value);
                    this._planSummary = value;
                    this.RaiseDataMemberChanged("PlanSummary");
                    this.OnPlanSummaryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PlanSummaryAttached' value.
        /// </summary>
        [DataMember()]
        public bool PlanSummaryAttached
        {
            get
            {
                return this._planSummaryAttached;
            }
            set
            {
                if ((this._planSummaryAttached != value))
                {
                    this.OnPlanSummaryAttachedChanging(value);
                    this.RaiseDataMemberChanging("PlanSummaryAttached");
                    this.ValidateProperty("PlanSummaryAttached", value);
                    this._planSummaryAttached = value;
                    this.RaiseDataMemberChanged("PlanSummaryAttached");
                    this.OnPlanSummaryAttachedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RegisterDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string RegisterDate
        {
            get
            {
                return this._registerDate;
            }
            set
            {
                if ((this._registerDate != value))
                {
                    this.OnRegisterDateChanging(value);
                    this.RaiseDataMemberChanging("RegisterDate");
                    this.ValidateProperty("RegisterDate", value);
                    this._registerDate = value;
                    this.RaiseDataMemberChanged("RegisterDate");
                    this.OnRegisterDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Requester' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Requester
        {
            get
            {
                return this._requester;
            }
            set
            {
                if ((this._requester != value))
                {
                    this.OnRequesterChanging(value);
                    this.RaiseDataMemberChanging("Requester");
                    this.ValidateProperty("Requester", value);
                    this._requester = value;
                    this.RaiseDataMemberChanged("Requester");
                    this.OnRequesterChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RequesterAddress' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string RequesterAddress
        {
            get
            {
                return this._requesterAddress;
            }
            set
            {
                if ((this._requesterAddress != value))
                {
                    this.OnRequesterAddressChanging(value);
                    this.RaiseDataMemberChanging("RequesterAddress");
                    this.ValidateProperty("RequesterAddress", value);
                    this._requesterAddress = value;
                    this.RaiseDataMemberChanged("RequesterAddress");
                    this.OnRequesterAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SakooExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> SakooExist
        {
            get
            {
                return this._sakooExist;
            }
            set
            {
                if ((this._sakooExist != value))
                {
                    this.OnSakooExistChanging(value);
                    this.RaiseDataMemberChanging("SakooExist");
                    this.ValidateProperty("SakooExist", value);
                    this._sakooExist = value;
                    this.RaiseDataMemberChanged("SakooExist");
                    this.OnSakooExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SakooLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SakooLen
        {
            get
            {
                return this._sakooLen;
            }
            set
            {
                if ((this._sakooLen != value))
                {
                    this.OnSakooLenChanging(value);
                    this.RaiseDataMemberChanging("SakooLen");
                    this.ValidateProperty("SakooLen", value);
                    this._sakooLen = value;
                    this.RaiseDataMemberChanged("SakooLen");
                    this.OnSakooLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SakooWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SakooWidth
        {
            get
            {
                return this._sakooWidth;
            }
            set
            {
                if ((this._sakooWidth != value))
                {
                    this.OnSakooWidthChanging(value);
                    this.RaiseDataMemberChanging("SakooWidth");
                    this.ValidateProperty("SakooWidth", value);
                    this._sakooWidth = value;
                    this.RaiseDataMemberChanged("SakooWidth");
                    this.OnSakooWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SayerExist' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> SayerExist
        {
            get
            {
                return this._sayerExist;
            }
            set
            {
                if ((this._sayerExist != value))
                {
                    this.OnSayerExistChanging(value);
                    this.RaiseDataMemberChanging("SayerExist");
                    this.ValidateProperty("SayerExist", value);
                    this._sayerExist = value;
                    this.RaiseDataMemberChanged("SayerExist");
                    this.OnSayerExistChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SayerProp' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string SayerProp
        {
            get
            {
                return this._sayerProp;
            }
            set
            {
                if ((this._sayerProp != value))
                {
                    this.OnSayerPropChanging(value);
                    this.RaiseDataMemberChanging("SayerProp");
                    this.ValidateProperty("SayerProp", value);
                    this._sayerProp = value;
                    this.RaiseDataMemberChanged("SayerProp");
                    this.OnSayerPropChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShahrestanId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ShahrestanId
        {
            get
            {
                return this._shahrestanId;
            }
            set
            {
                if ((this._shahrestanId != value))
                {
                    this.OnShahrestanIdChanging(value);
                    this.RaiseDataMemberChanging("ShahrestanId");
                    this.ValidateProperty("ShahrestanId", value);
                    this._shahrestanId = value;
                    this.RaiseDataMemberChanged("ShahrestanId");
                    this.OnShahrestanIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShenavarAbkhor' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShenavarAbkhor
        {
            get
            {
                return this._shenavarAbkhor;
            }
            set
            {
                if ((this._shenavarAbkhor != value))
                {
                    this.OnShenavarAbkhorChanging(value);
                    this.RaiseDataMemberChanging("ShenavarAbkhor");
                    this.ValidateProperty("ShenavarAbkhor", value);
                    this._shenavarAbkhor = value;
                    this.RaiseDataMemberChanged("ShenavarAbkhor");
                    this.OnShenavarAbkhorChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShenavarLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShenavarLen
        {
            get
            {
                return this._shenavarLen;
            }
            set
            {
                if ((this._shenavarLen != value))
                {
                    this.OnShenavarLenChanging(value);
                    this.RaiseDataMemberChanging("ShenavarLen");
                    this.ValidateProperty("ShenavarLen", value);
                    this._shenavarLen = value;
                    this.RaiseDataMemberChanged("ShenavarLen");
                    this.OnShenavarLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShenavarMaxCapacity' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShenavarMaxCapacity
        {
            get
            {
                return this._shenavarMaxCapacity;
            }
            set
            {
                if ((this._shenavarMaxCapacity != value))
                {
                    this.OnShenavarMaxCapacityChanging(value);
                    this.RaiseDataMemberChanging("ShenavarMaxCapacity");
                    this.ValidateProperty("ShenavarMaxCapacity", value);
                    this._shenavarMaxCapacity = value;
                    this.RaiseDataMemberChanged("ShenavarMaxCapacity");
                    this.OnShenavarMaxCapacityChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShenavarType' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ShenavarType
        {
            get
            {
                return this._shenavarType;
            }
            set
            {
                if ((this._shenavarType != value))
                {
                    this.OnShenavarTypeChanging(value);
                    this.RaiseDataMemberChanging("ShenavarType");
                    this.ValidateProperty("ShenavarType", value);
                    this._shenavarType = value;
                    this.RaiseDataMemberChanged("ShenavarType");
                    this.OnShenavarTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShenavarWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShenavarWidth
        {
            get
            {
                return this._shenavarWidth;
            }
            set
            {
                if ((this._shenavarWidth != value))
                {
                    this.OnShenavarWidthChanging(value);
                    this.RaiseDataMemberChanging("ShenavarWidth");
                    this.ValidateProperty("ShenavarWidth", value);
                    this._shenavarWidth = value;
                    this.RaiseDataMemberChanged("ShenavarWidth");
                    this.OnShenavarWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WebSite' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string WebSite
        {
            get
            {
                return this._webSite;
            }
            set
            {
                if ((this._webSite != value))
                {
                    this.OnWebSiteChanging(value);
                    this.RaiseDataMemberChanging("WebSite");
                    this.ValidateProperty("WebSite", value);
                    this._webSite = value;
                    this.RaiseDataMemberChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_RequestType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_RequestType : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_RequestType"/> class.
        /// </summary>
        public Mojavez_RequestType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Mojavez_UsageType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Mojavez_UsageType : Entity
    {
        
        private int _fieldId;
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Mojavez_UsageType"/> class.
        /// </summary>
        public Mojavez_UsageType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'MojshekanStrucType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class MojshekanStrucType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="MojshekanStrucType"/> class.
        /// </summary>
        public MojshekanStrucType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Organizations' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Organizations : Entity
    {
        
        private int _id;
        
        private string _nameEn;
        
        private string _nameFa;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameEnChanging(string value);
        partial void OnNameEnChanged();
        partial void OnNameFaChanging(string value);
        partial void OnNameFaChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Organizations"/> class.
        /// </summary>
        public Organizations()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameEn' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NameEn
        {
            get
            {
                return this._nameEn;
            }
            set
            {
                if ((this._nameEn != value))
                {
                    this.OnNameEnChanging(value);
                    this.RaiseDataMemberChanging("NameEn");
                    this.ValidateProperty("NameEn", value);
                    this._nameEn = value;
                    this.RaiseDataMemberChanged("NameEn");
                    this.OnNameEnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameFa' value.
        /// </summary>
        [DataMember()]
        [StringLength(150)]
        public string NameFa
        {
            get
            {
                return this._nameFa;
            }
            set
            {
                if ((this._nameFa != value))
                {
                    this.OnNameFaChanging(value);
                    this.RaiseDataMemberChanging("NameFa");
                    this.ValidateProperty("NameFa", value);
                    this._nameFa = value;
                    this.RaiseDataMemberChanged("NameFa");
                    this.OnNameFaChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Ostan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Ostan : Entity
    {
        
        private int _id;
        
        private string _ostan_eng;
        
        private string _ostan_nam;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnOSTAN_ENGChanging(string value);
        partial void OnOSTAN_ENGChanged();
        partial void OnOSTAN_NAMChanging(string value);
        partial void OnOSTAN_NAMChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Ostan"/> class.
        /// </summary>
        public Ostan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OSTAN_ENG' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string OSTAN_ENG
        {
            get
            {
                return this._ostan_eng;
            }
            set
            {
                if ((this._ostan_eng != value))
                {
                    this.OnOSTAN_ENGChanging(value);
                    this.RaiseDataMemberChanging("OSTAN_ENG");
                    this.ValidateProperty("OSTAN_ENG", value);
                    this._ostan_eng = value;
                    this.RaiseDataMemberChanged("OSTAN_ENG");
                    this.OnOSTAN_ENGChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OSTAN_NAM' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string OSTAN_NAM
        {
            get
            {
                return this._ostan_nam;
            }
            set
            {
                if ((this._ostan_nam != value))
                {
                    this.OnOSTAN_NAMChanging(value);
                    this.RaiseDataMemberChanging("OSTAN_NAM");
                    this.ValidateProperty("OSTAN_NAM", value);
                    this._ostan_nam = value;
                    this.RaiseDataMemberChanged("OSTAN_NAM");
                    this.OnOSTAN_NAMChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'ParamDefinition' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ParamDefinition : Entity
    {
        
        private int _fieldId;
        
        private string _parameterDesc;
        
        private int _parameterID;
        
        private string _parameterValue;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnParameterDescChanging(string value);
        partial void OnParameterDescChanged();
        partial void OnParameterIDChanging(int value);
        partial void OnParameterIDChanged();
        partial void OnParameterValueChanging(string value);
        partial void OnParameterValueChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ParamDefinition"/> class.
        /// </summary>
        public ParamDefinition()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParameterDesc' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(100)]
        public string ParameterDesc
        {
            get
            {
                return this._parameterDesc;
            }
            set
            {
                if ((this._parameterDesc != value))
                {
                    this.OnParameterDescChanging(value);
                    this.RaiseDataMemberChanging("ParameterDesc");
                    this.ValidateProperty("ParameterDesc", value);
                    this._parameterDesc = value;
                    this.RaiseDataMemberChanged("ParameterDesc");
                    this.OnParameterDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParameterID' value.
        /// </summary>
        [DataMember()]
        public int ParameterID
        {
            get
            {
                return this._parameterID;
            }
            set
            {
                if ((this._parameterID != value))
                {
                    this.OnParameterIDChanging(value);
                    this.RaiseDataMemberChanging("ParameterID");
                    this.ValidateProperty("ParameterID", value);
                    this._parameterID = value;
                    this.RaiseDataMemberChanged("ParameterID");
                    this.OnParameterIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParameterValue' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(100)]
        public string ParameterValue
        {
            get
            {
                return this._parameterValue;
            }
            set
            {
                if ((this._parameterValue != value))
                {
                    this.OnParameterValueChanging(value);
                    this.RaiseDataMemberChanging("ParameterValue");
                    this.ValidateProperty("ParameterValue", value);
                    this._parameterValue = value;
                    this.RaiseDataMemberChanged("ParameterValue");
                    this.OnParameterValueChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Persons' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Persons : Entity
    {
        
        private string _daneshgah;
        
        private string _darsadSahm;
        
        private int _id;
        
        private string _isMortabet;
        
        private string _keshvar;
        
        private string _kodeMelli;
        
        private string _kodeSherkat;
        
        private Nullable<double> _mablagSahm;
        
        private string _madrakTahsili;
        
        private string _nam;
        
        private string _nameKhanevadegi;
        
        private string _namePedar;
        
        private EntityCollection<PersonsSavabeg> _personsSavabeg;
        
        private EntityRef<Peymankar> _peymankar;
        
        private Nullable<int> _peymankarId;
        
        private string _reshteyeTahsili;
        
        private Nullable<double> _saleAkhz;
        
        private string _semat;
        
        private string _shomarePerseneli;
        
        private Nullable<double> _shomareSafePorseshName;
        
        private string _shomareShenasname;
        
        private Nullable<int> _tajrobeSanavati;
        
        private Nullable<DateTime> _tarikhErsalForm;
        
        private Nullable<double> _tedadeSahm;
        
        private Nullable<double> _tedadSafehayePorseshName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDaneshgahChanging(string value);
        partial void OnDaneshgahChanged();
        partial void OnDarsadSahmChanging(string value);
        partial void OnDarsadSahmChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIsMortabetChanging(string value);
        partial void OnIsMortabetChanged();
        partial void OnKeshvarChanging(string value);
        partial void OnKeshvarChanged();
        partial void OnKodeMelliChanging(string value);
        partial void OnKodeMelliChanged();
        partial void OnKodeSherkatChanging(string value);
        partial void OnKodeSherkatChanged();
        partial void OnMablagSahmChanging(Nullable<double> value);
        partial void OnMablagSahmChanged();
        partial void OnMadrakTahsiliChanging(string value);
        partial void OnMadrakTahsiliChanged();
        partial void OnNamChanging(string value);
        partial void OnNamChanged();
        partial void OnNameKhanevadegiChanging(string value);
        partial void OnNameKhanevadegiChanged();
        partial void OnNamePedarChanging(string value);
        partial void OnNamePedarChanged();
        partial void OnPeymankarIdChanging(Nullable<int> value);
        partial void OnPeymankarIdChanged();
        partial void OnReshteyeTahsiliChanging(string value);
        partial void OnReshteyeTahsiliChanged();
        partial void OnSaleAkhzChanging(Nullable<double> value);
        partial void OnSaleAkhzChanged();
        partial void OnSematChanging(string value);
        partial void OnSematChanged();
        partial void OnShomarePerseneliChanging(string value);
        partial void OnShomarePerseneliChanged();
        partial void OnShomareSafePorseshNameChanging(Nullable<double> value);
        partial void OnShomareSafePorseshNameChanged();
        partial void OnShomareShenasnameChanging(string value);
        partial void OnShomareShenasnameChanged();
        partial void OnTajrobeSanavatiChanging(Nullable<int> value);
        partial void OnTajrobeSanavatiChanged();
        partial void OnTarikhErsalFormChanging(Nullable<DateTime> value);
        partial void OnTarikhErsalFormChanged();
        partial void OnTedadeSahmChanging(Nullable<double> value);
        partial void OnTedadeSahmChanged();
        partial void OnTedadSafehayePorseshNameChanging(Nullable<double> value);
        partial void OnTedadSafehayePorseshNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Persons"/> class.
        /// </summary>
        public Persons()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Daneshgah' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string Daneshgah
        {
            get
            {
                return this._daneshgah;
            }
            set
            {
                if ((this._daneshgah != value))
                {
                    this.OnDaneshgahChanging(value);
                    this.RaiseDataMemberChanging("Daneshgah");
                    this.ValidateProperty("Daneshgah", value);
                    this._daneshgah = value;
                    this.RaiseDataMemberChanged("Daneshgah");
                    this.OnDaneshgahChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DarsadSahm' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string DarsadSahm
        {
            get
            {
                return this._darsadSahm;
            }
            set
            {
                if ((this._darsadSahm != value))
                {
                    this.OnDarsadSahmChanging(value);
                    this.RaiseDataMemberChanging("DarsadSahm");
                    this.ValidateProperty("DarsadSahm", value);
                    this._darsadSahm = value;
                    this.RaiseDataMemberChanged("DarsadSahm");
                    this.OnDarsadSahmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsMortabet' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string IsMortabet
        {
            get
            {
                return this._isMortabet;
            }
            set
            {
                if ((this._isMortabet != value))
                {
                    this.OnIsMortabetChanging(value);
                    this.RaiseDataMemberChanging("IsMortabet");
                    this.ValidateProperty("IsMortabet", value);
                    this._isMortabet = value;
                    this.RaiseDataMemberChanged("IsMortabet");
                    this.OnIsMortabetChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keshvar' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string Keshvar
        {
            get
            {
                return this._keshvar;
            }
            set
            {
                if ((this._keshvar != value))
                {
                    this.OnKeshvarChanging(value);
                    this.RaiseDataMemberChanging("Keshvar");
                    this.ValidateProperty("Keshvar", value);
                    this._keshvar = value;
                    this.RaiseDataMemberChanged("Keshvar");
                    this.OnKeshvarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KodeMelli' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KodeMelli
        {
            get
            {
                return this._kodeMelli;
            }
            set
            {
                if ((this._kodeMelli != value))
                {
                    this.OnKodeMelliChanging(value);
                    this.RaiseDataMemberChanging("KodeMelli");
                    this.ValidateProperty("KodeMelli", value);
                    this._kodeMelli = value;
                    this.RaiseDataMemberChanged("KodeMelli");
                    this.OnKodeMelliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KodeSherkat' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string KodeSherkat
        {
            get
            {
                return this._kodeSherkat;
            }
            set
            {
                if ((this._kodeSherkat != value))
                {
                    this.OnKodeSherkatChanging(value);
                    this.RaiseDataMemberChanging("KodeSherkat");
                    this.ValidateProperty("KodeSherkat", value);
                    this._kodeSherkat = value;
                    this.RaiseDataMemberChanged("KodeSherkat");
                    this.OnKodeSherkatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MablagSahm' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MablagSahm
        {
            get
            {
                return this._mablagSahm;
            }
            set
            {
                if ((this._mablagSahm != value))
                {
                    this.OnMablagSahmChanging(value);
                    this.RaiseDataMemberChanging("MablagSahm");
                    this.ValidateProperty("MablagSahm", value);
                    this._mablagSahm = value;
                    this.RaiseDataMemberChanged("MablagSahm");
                    this.OnMablagSahmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MadrakTahsili' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MadrakTahsili
        {
            get
            {
                return this._madrakTahsili;
            }
            set
            {
                if ((this._madrakTahsili != value))
                {
                    this.OnMadrakTahsiliChanging(value);
                    this.RaiseDataMemberChanging("MadrakTahsili");
                    this.ValidateProperty("MadrakTahsili", value);
                    this._madrakTahsili = value;
                    this.RaiseDataMemberChanged("MadrakTahsili");
                    this.OnMadrakTahsiliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Nam' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string Nam
        {
            get
            {
                return this._nam;
            }
            set
            {
                if ((this._nam != value))
                {
                    this.OnNamChanging(value);
                    this.RaiseDataMemberChanging("Nam");
                    this.ValidateProperty("Nam", value);
                    this._nam = value;
                    this.RaiseDataMemberChanged("Nam");
                    this.OnNamChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameKhanevadegi' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameKhanevadegi
        {
            get
            {
                return this._nameKhanevadegi;
            }
            set
            {
                if ((this._nameKhanevadegi != value))
                {
                    this.OnNameKhanevadegiChanging(value);
                    this.RaiseDataMemberChanging("NameKhanevadegi");
                    this.ValidateProperty("NameKhanevadegi", value);
                    this._nameKhanevadegi = value;
                    this.RaiseDataMemberChanged("NameKhanevadegi");
                    this.OnNameKhanevadegiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NamePedar' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NamePedar
        {
            get
            {
                return this._namePedar;
            }
            set
            {
                if ((this._namePedar != value))
                {
                    this.OnNamePedarChanging(value);
                    this.RaiseDataMemberChanging("NamePedar");
                    this.ValidateProperty("NamePedar", value);
                    this._namePedar = value;
                    this.RaiseDataMemberChanged("NamePedar");
                    this.OnNamePedarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="PersonsSavabeg"/> entity instances.
        /// </summary>
        [Association("Persons_PersonsSavabeg", "Id", "PersonId")]
        [XmlIgnore()]
        public EntityCollection<PersonsSavabeg> PersonsSavabeg
        {
            get
            {
                if ((this._personsSavabeg == null))
                {
                    this._personsSavabeg = new EntityCollection<PersonsSavabeg>(this, "PersonsSavabeg", this.FilterPersonsSavabeg, this.AttachPersonsSavabeg, this.DetachPersonsSavabeg);
                }
                return this._personsSavabeg;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Peymankar"/> entity.
        /// </summary>
        [Association("Peymankar_Persons", "PeymankarId", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public Peymankar Peymankar
        {
            get
            {
                if ((this._peymankar == null))
                {
                    this._peymankar = new EntityRef<Peymankar>(this, "Peymankar", this.FilterPeymankar);
                }
                return this._peymankar.Entity;
            }
            set
            {
                Peymankar previous = this.Peymankar;
                if ((previous != value))
                {
                    this.ValidateProperty("Peymankar", value);
                    if ((previous != null))
                    {
                        this._peymankar.Entity = null;
                        previous.Persons.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PeymankarId = value.Id;
                    }
                    else
                    {
                        this.PeymankarId = default(Nullable<int>);
                    }
                    this._peymankar.Entity = value;
                    if ((value != null))
                    {
                        value.Persons.Add(this);
                    }
                    this.RaisePropertyChanged("Peymankar");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PeymankarId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> PeymankarId
        {
            get
            {
                return this._peymankarId;
            }
            set
            {
                if ((this._peymankarId != value))
                {
                    this.OnPeymankarIdChanging(value);
                    this.RaiseDataMemberChanging("PeymankarId");
                    this.ValidateProperty("PeymankarId", value);
                    this._peymankarId = value;
                    this.RaiseDataMemberChanged("PeymankarId");
                    this.OnPeymankarIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReshteyeTahsili' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string ReshteyeTahsili
        {
            get
            {
                return this._reshteyeTahsili;
            }
            set
            {
                if ((this._reshteyeTahsili != value))
                {
                    this.OnReshteyeTahsiliChanging(value);
                    this.RaiseDataMemberChanging("ReshteyeTahsili");
                    this.ValidateProperty("ReshteyeTahsili", value);
                    this._reshteyeTahsili = value;
                    this.RaiseDataMemberChanged("ReshteyeTahsili");
                    this.OnReshteyeTahsiliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SaleAkhz' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SaleAkhz
        {
            get
            {
                return this._saleAkhz;
            }
            set
            {
                if ((this._saleAkhz != value))
                {
                    this.OnSaleAkhzChanging(value);
                    this.RaiseDataMemberChanging("SaleAkhz");
                    this.ValidateProperty("SaleAkhz", value);
                    this._saleAkhz = value;
                    this.RaiseDataMemberChanged("SaleAkhz");
                    this.OnSaleAkhzChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Semat' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string Semat
        {
            get
            {
                return this._semat;
            }
            set
            {
                if ((this._semat != value))
                {
                    this.OnSematChanging(value);
                    this.RaiseDataMemberChanging("Semat");
                    this.ValidateProperty("Semat", value);
                    this._semat = value;
                    this.RaiseDataMemberChanged("Semat");
                    this.OnSematChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomarePerseneli' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string ShomarePerseneli
        {
            get
            {
                return this._shomarePerseneli;
            }
            set
            {
                if ((this._shomarePerseneli != value))
                {
                    this.OnShomarePerseneliChanging(value);
                    this.RaiseDataMemberChanging("ShomarePerseneli");
                    this.ValidateProperty("ShomarePerseneli", value);
                    this._shomarePerseneli = value;
                    this.RaiseDataMemberChanged("ShomarePerseneli");
                    this.OnShomarePerseneliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSafePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSafePorseshName
        {
            get
            {
                return this._shomareSafePorseshName;
            }
            set
            {
                if ((this._shomareSafePorseshName != value))
                {
                    this.OnShomareSafePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("ShomareSafePorseshName");
                    this.ValidateProperty("ShomareSafePorseshName", value);
                    this._shomareSafePorseshName = value;
                    this.RaiseDataMemberChanged("ShomareSafePorseshName");
                    this.OnShomareSafePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareShenasname' value.
        /// </summary>
        [DataMember()]
        [StringLength(30)]
        public string ShomareShenasname
        {
            get
            {
                return this._shomareShenasname;
            }
            set
            {
                if ((this._shomareShenasname != value))
                {
                    this.OnShomareShenasnameChanging(value);
                    this.RaiseDataMemberChanging("ShomareShenasname");
                    this.ValidateProperty("ShomareShenasname", value);
                    this._shomareShenasname = value;
                    this.RaiseDataMemberChanged("ShomareShenasname");
                    this.OnShomareShenasnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TajrobeSanavati' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TajrobeSanavati
        {
            get
            {
                return this._tajrobeSanavati;
            }
            set
            {
                if ((this._tajrobeSanavati != value))
                {
                    this.OnTajrobeSanavatiChanging(value);
                    this.RaiseDataMemberChanging("TajrobeSanavati");
                    this.ValidateProperty("TajrobeSanavati", value);
                    this._tajrobeSanavati = value;
                    this.RaiseDataMemberChanged("TajrobeSanavati");
                    this.OnTajrobeSanavatiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhErsalForm' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhErsalForm
        {
            get
            {
                return this._tarikhErsalForm;
            }
            set
            {
                if ((this._tarikhErsalForm != value))
                {
                    this.OnTarikhErsalFormChanging(value);
                    this.RaiseDataMemberChanging("TarikhErsalForm");
                    this.ValidateProperty("TarikhErsalForm", value);
                    this._tarikhErsalForm = value;
                    this.RaiseDataMemberChanged("TarikhErsalForm");
                    this.OnTarikhErsalFormChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadeSahm' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadeSahm
        {
            get
            {
                return this._tedadeSahm;
            }
            set
            {
                if ((this._tedadeSahm != value))
                {
                    this.OnTedadeSahmChanging(value);
                    this.RaiseDataMemberChanging("TedadeSahm");
                    this.ValidateProperty("TedadeSahm", value);
                    this._tedadeSahm = value;
                    this.RaiseDataMemberChanged("TedadeSahm");
                    this.OnTedadeSahmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSafehayePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadSafehayePorseshName
        {
            get
            {
                return this._tedadSafehayePorseshName;
            }
            set
            {
                if ((this._tedadSafehayePorseshName != value))
                {
                    this.OnTedadSafehayePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("TedadSafehayePorseshName");
                    this.ValidateProperty("TedadSafehayePorseshName", value);
                    this._tedadSafehayePorseshName = value;
                    this.RaiseDataMemberChanged("TedadSafehayePorseshName");
                    this.OnTedadSafehayePorseshNameChanged();
                }
            }
        }
        
        private void AttachPersonsSavabeg(PersonsSavabeg entity)
        {
            entity.Persons = this;
        }
        
        private void DetachPersonsSavabeg(PersonsSavabeg entity)
        {
            entity.Persons = null;
        }
        
        private bool FilterPersonsSavabeg(PersonsSavabeg entity)
        {
            return (entity.PersonId == this.Id);
        }
        
        private bool FilterPeymankar(Peymankar entity)
        {
            return (entity.Id == this.PeymankarId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'PersonsSavabeg' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PersonsSavabeg : Entity
    {
        
        private Nullable<DateTime> _azTarikhe;
        
        private int _id;
        
        private Nullable<double> _modat;
        
        private string _mozooeKar;
        
        private string _nameDastgah;
        
        private Nullable<int> _personId;
        
        private EntityRef<Persons> _persons;
        
        private string _semat;
        
        private Nullable<double> _shomareSafePorseshName;
        
        private Nullable<DateTime> _tarikhErsalForm;
        
        private Nullable<DateTime> _taTarikhe;
        
        private Nullable<double> _tedadSafehayePorseshName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAzTarikheChanging(Nullable<DateTime> value);
        partial void OnAzTarikheChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnModatChanging(Nullable<double> value);
        partial void OnModatChanged();
        partial void OnMozooeKarChanging(string value);
        partial void OnMozooeKarChanged();
        partial void OnNameDastgahChanging(string value);
        partial void OnNameDastgahChanged();
        partial void OnPersonIdChanging(Nullable<int> value);
        partial void OnPersonIdChanged();
        partial void OnSematChanging(string value);
        partial void OnSematChanged();
        partial void OnShomareSafePorseshNameChanging(Nullable<double> value);
        partial void OnShomareSafePorseshNameChanged();
        partial void OnTarikhErsalFormChanging(Nullable<DateTime> value);
        partial void OnTarikhErsalFormChanged();
        partial void OnTaTarikheChanging(Nullable<DateTime> value);
        partial void OnTaTarikheChanged();
        partial void OnTedadSafehayePorseshNameChanging(Nullable<double> value);
        partial void OnTedadSafehayePorseshNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonsSavabeg"/> class.
        /// </summary>
        public PersonsSavabeg()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AzTarikhe' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> AzTarikhe
        {
            get
            {
                return this._azTarikhe;
            }
            set
            {
                if ((this._azTarikhe != value))
                {
                    this.OnAzTarikheChanging(value);
                    this.RaiseDataMemberChanging("AzTarikhe");
                    this.ValidateProperty("AzTarikhe", value);
                    this._azTarikhe = value;
                    this.RaiseDataMemberChanged("AzTarikhe");
                    this.OnAzTarikheChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Modat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Modat
        {
            get
            {
                return this._modat;
            }
            set
            {
                if ((this._modat != value))
                {
                    this.OnModatChanging(value);
                    this.RaiseDataMemberChanging("Modat");
                    this.ValidateProperty("Modat", value);
                    this._modat = value;
                    this.RaiseDataMemberChanged("Modat");
                    this.OnModatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MozooeKar' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MozooeKar
        {
            get
            {
                return this._mozooeKar;
            }
            set
            {
                if ((this._mozooeKar != value))
                {
                    this.OnMozooeKarChanging(value);
                    this.RaiseDataMemberChanging("MozooeKar");
                    this.ValidateProperty("MozooeKar", value);
                    this._mozooeKar = value;
                    this.RaiseDataMemberChanged("MozooeKar");
                    this.OnMozooeKarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameDastgah' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameDastgah
        {
            get
            {
                return this._nameDastgah;
            }
            set
            {
                if ((this._nameDastgah != value))
                {
                    this.OnNameDastgahChanging(value);
                    this.RaiseDataMemberChanging("NameDastgah");
                    this.ValidateProperty("NameDastgah", value);
                    this._nameDastgah = value;
                    this.RaiseDataMemberChanged("NameDastgah");
                    this.OnNameDastgahChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> PersonId
        {
            get
            {
                return this._personId;
            }
            set
            {
                if ((this._personId != value))
                {
                    this.OnPersonIdChanging(value);
                    this.RaiseDataMemberChanging("PersonId");
                    this.ValidateProperty("PersonId", value);
                    this._personId = value;
                    this.RaiseDataMemberChanged("PersonId");
                    this.OnPersonIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Persons"/> entity.
        /// </summary>
        [Association("Persons_PersonsSavabeg", "PersonId", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public Persons Persons
        {
            get
            {
                if ((this._persons == null))
                {
                    this._persons = new EntityRef<Persons>(this, "Persons", this.FilterPersons);
                }
                return this._persons.Entity;
            }
            set
            {
                Persons previous = this.Persons;
                if ((previous != value))
                {
                    this.ValidateProperty("Persons", value);
                    if ((previous != null))
                    {
                        this._persons.Entity = null;
                        previous.PersonsSavabeg.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PersonId = value.Id;
                    }
                    else
                    {
                        this.PersonId = default(Nullable<int>);
                    }
                    this._persons.Entity = value;
                    if ((value != null))
                    {
                        value.PersonsSavabeg.Add(this);
                    }
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Semat' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string Semat
        {
            get
            {
                return this._semat;
            }
            set
            {
                if ((this._semat != value))
                {
                    this.OnSematChanging(value);
                    this.RaiseDataMemberChanging("Semat");
                    this.ValidateProperty("Semat", value);
                    this._semat = value;
                    this.RaiseDataMemberChanged("Semat");
                    this.OnSematChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSafePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSafePorseshName
        {
            get
            {
                return this._shomareSafePorseshName;
            }
            set
            {
                if ((this._shomareSafePorseshName != value))
                {
                    this.OnShomareSafePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("ShomareSafePorseshName");
                    this.ValidateProperty("ShomareSafePorseshName", value);
                    this._shomareSafePorseshName = value;
                    this.RaiseDataMemberChanged("ShomareSafePorseshName");
                    this.OnShomareSafePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhErsalForm' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhErsalForm
        {
            get
            {
                return this._tarikhErsalForm;
            }
            set
            {
                if ((this._tarikhErsalForm != value))
                {
                    this.OnTarikhErsalFormChanging(value);
                    this.RaiseDataMemberChanging("TarikhErsalForm");
                    this.ValidateProperty("TarikhErsalForm", value);
                    this._tarikhErsalForm = value;
                    this.RaiseDataMemberChanged("TarikhErsalForm");
                    this.OnTarikhErsalFormChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TaTarikhe' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TaTarikhe
        {
            get
            {
                return this._taTarikhe;
            }
            set
            {
                if ((this._taTarikhe != value))
                {
                    this.OnTaTarikheChanging(value);
                    this.RaiseDataMemberChanging("TaTarikhe");
                    this.ValidateProperty("TaTarikhe", value);
                    this._taTarikhe = value;
                    this.RaiseDataMemberChanged("TaTarikhe");
                    this.OnTaTarikheChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSafehayePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadSafehayePorseshName
        {
            get
            {
                return this._tedadSafehayePorseshName;
            }
            set
            {
                if ((this._tedadSafehayePorseshName != value))
                {
                    this.OnTedadSafehayePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("TedadSafehayePorseshName");
                    this.ValidateProperty("TedadSafehayePorseshName", value);
                    this._tedadSafehayePorseshName = value;
                    this.RaiseDataMemberChanged("TedadSafehayePorseshName");
                    this.OnTedadSafehayePorseshNameChanged();
                }
            }
        }
        
        private bool FilterPersons(Persons entity)
        {
            return (entity.Id == this.PersonId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Peymanha' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Peymanha : Entity
    {
        
        private int _id;
        
        private Nullable<double> _mablagePeyman;
        
        private Nullable<DateTime> _mablageSooratVaziat;
        
        private string _mahalEjra;
        
        private string _mozooePeyman;
        
        private string _nameKarfarma;
        
        private EntityRef<Peymankar> _peymankar;
        
        private Nullable<int> _peymankarId;
        
        private Nullable<double> _sahmeAmaliyatLayroobi;
        
        private Nullable<double> _shomareSafePorseshName;
        
        private Nullable<DateTime> _tarikheDaryaftSooratVaziat;
        
        private Nullable<DateTime> _tarikhePayan;
        
        private Nullable<DateTime> _tarikhErsalForm;
        
        private Nullable<DateTime> _tarikheShoro;
        
        private Nullable<double> _tedadSafehayePorseshName;
        
        private string _vaziatPeyman;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnMablagePeymanChanging(Nullable<double> value);
        partial void OnMablagePeymanChanged();
        partial void OnMablageSooratVaziatChanging(Nullable<DateTime> value);
        partial void OnMablageSooratVaziatChanged();
        partial void OnMahalEjraChanging(string value);
        partial void OnMahalEjraChanged();
        partial void OnMozooePeymanChanging(string value);
        partial void OnMozooePeymanChanged();
        partial void OnNameKarfarmaChanging(string value);
        partial void OnNameKarfarmaChanged();
        partial void OnPeymankarIdChanging(Nullable<int> value);
        partial void OnPeymankarIdChanged();
        partial void OnSahmeAmaliyatLayroobiChanging(Nullable<double> value);
        partial void OnSahmeAmaliyatLayroobiChanged();
        partial void OnShomareSafePorseshNameChanging(Nullable<double> value);
        partial void OnShomareSafePorseshNameChanged();
        partial void OnTarikheDaryaftSooratVaziatChanging(Nullable<DateTime> value);
        partial void OnTarikheDaryaftSooratVaziatChanged();
        partial void OnTarikhePayanChanging(Nullable<DateTime> value);
        partial void OnTarikhePayanChanged();
        partial void OnTarikhErsalFormChanging(Nullable<DateTime> value);
        partial void OnTarikhErsalFormChanged();
        partial void OnTarikheShoroChanging(Nullable<DateTime> value);
        partial void OnTarikheShoroChanged();
        partial void OnTedadSafehayePorseshNameChanging(Nullable<double> value);
        partial void OnTedadSafehayePorseshNameChanged();
        partial void OnVaziatPeymanChanging(string value);
        partial void OnVaziatPeymanChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Peymanha"/> class.
        /// </summary>
        public Peymanha()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MablagePeyman' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MablagePeyman
        {
            get
            {
                return this._mablagePeyman;
            }
            set
            {
                if ((this._mablagePeyman != value))
                {
                    this.OnMablagePeymanChanging(value);
                    this.RaiseDataMemberChanging("MablagePeyman");
                    this.ValidateProperty("MablagePeyman", value);
                    this._mablagePeyman = value;
                    this.RaiseDataMemberChanged("MablagePeyman");
                    this.OnMablagePeymanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MablageSooratVaziat' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> MablageSooratVaziat
        {
            get
            {
                return this._mablageSooratVaziat;
            }
            set
            {
                if ((this._mablageSooratVaziat != value))
                {
                    this.OnMablageSooratVaziatChanging(value);
                    this.RaiseDataMemberChanging("MablageSooratVaziat");
                    this.ValidateProperty("MablageSooratVaziat", value);
                    this._mablageSooratVaziat = value;
                    this.RaiseDataMemberChanged("MablageSooratVaziat");
                    this.OnMablageSooratVaziatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MahalEjra' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MahalEjra
        {
            get
            {
                return this._mahalEjra;
            }
            set
            {
                if ((this._mahalEjra != value))
                {
                    this.OnMahalEjraChanging(value);
                    this.RaiseDataMemberChanging("MahalEjra");
                    this.ValidateProperty("MahalEjra", value);
                    this._mahalEjra = value;
                    this.RaiseDataMemberChanged("MahalEjra");
                    this.OnMahalEjraChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MozooePeyman' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MozooePeyman
        {
            get
            {
                return this._mozooePeyman;
            }
            set
            {
                if ((this._mozooePeyman != value))
                {
                    this.OnMozooePeymanChanging(value);
                    this.RaiseDataMemberChanging("MozooePeyman");
                    this.ValidateProperty("MozooePeyman", value);
                    this._mozooePeyman = value;
                    this.RaiseDataMemberChanged("MozooePeyman");
                    this.OnMozooePeymanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameKarfarma' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameKarfarma
        {
            get
            {
                return this._nameKarfarma;
            }
            set
            {
                if ((this._nameKarfarma != value))
                {
                    this.OnNameKarfarmaChanging(value);
                    this.RaiseDataMemberChanging("NameKarfarma");
                    this.ValidateProperty("NameKarfarma", value);
                    this._nameKarfarma = value;
                    this.RaiseDataMemberChanged("NameKarfarma");
                    this.OnNameKarfarmaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Peymankar"/> entity.
        /// </summary>
        [Association("Peymankar_Peymanha", "PeymankarId", "Id", IsForeignKey=true)]
        [XmlIgnore()]
        public Peymankar Peymankar
        {
            get
            {
                if ((this._peymankar == null))
                {
                    this._peymankar = new EntityRef<Peymankar>(this, "Peymankar", this.FilterPeymankar);
                }
                return this._peymankar.Entity;
            }
            set
            {
                Peymankar previous = this.Peymankar;
                if ((previous != value))
                {
                    this.ValidateProperty("Peymankar", value);
                    if ((previous != null))
                    {
                        this._peymankar.Entity = null;
                        previous.Peymanha.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PeymankarId = value.Id;
                    }
                    else
                    {
                        this.PeymankarId = default(Nullable<int>);
                    }
                    this._peymankar.Entity = value;
                    if ((value != null))
                    {
                        value.Peymanha.Add(this);
                    }
                    this.RaisePropertyChanged("Peymankar");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PeymankarId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> PeymankarId
        {
            get
            {
                return this._peymankarId;
            }
            set
            {
                if ((this._peymankarId != value))
                {
                    this.OnPeymankarIdChanging(value);
                    this.RaiseDataMemberChanging("PeymankarId");
                    this.ValidateProperty("PeymankarId", value);
                    this._peymankarId = value;
                    this.RaiseDataMemberChanged("PeymankarId");
                    this.OnPeymankarIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SahmeAmaliyatLayroobi' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SahmeAmaliyatLayroobi
        {
            get
            {
                return this._sahmeAmaliyatLayroobi;
            }
            set
            {
                if ((this._sahmeAmaliyatLayroobi != value))
                {
                    this.OnSahmeAmaliyatLayroobiChanging(value);
                    this.RaiseDataMemberChanging("SahmeAmaliyatLayroobi");
                    this.ValidateProperty("SahmeAmaliyatLayroobi", value);
                    this._sahmeAmaliyatLayroobi = value;
                    this.RaiseDataMemberChanged("SahmeAmaliyatLayroobi");
                    this.OnSahmeAmaliyatLayroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSafePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSafePorseshName
        {
            get
            {
                return this._shomareSafePorseshName;
            }
            set
            {
                if ((this._shomareSafePorseshName != value))
                {
                    this.OnShomareSafePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("ShomareSafePorseshName");
                    this.ValidateProperty("ShomareSafePorseshName", value);
                    this._shomareSafePorseshName = value;
                    this.RaiseDataMemberChanged("ShomareSafePorseshName");
                    this.OnShomareSafePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikheDaryaftSooratVaziat' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikheDaryaftSooratVaziat
        {
            get
            {
                return this._tarikheDaryaftSooratVaziat;
            }
            set
            {
                if ((this._tarikheDaryaftSooratVaziat != value))
                {
                    this.OnTarikheDaryaftSooratVaziatChanging(value);
                    this.RaiseDataMemberChanging("TarikheDaryaftSooratVaziat");
                    this.ValidateProperty("TarikheDaryaftSooratVaziat", value);
                    this._tarikheDaryaftSooratVaziat = value;
                    this.RaiseDataMemberChanged("TarikheDaryaftSooratVaziat");
                    this.OnTarikheDaryaftSooratVaziatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhePayan' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhePayan
        {
            get
            {
                return this._tarikhePayan;
            }
            set
            {
                if ((this._tarikhePayan != value))
                {
                    this.OnTarikhePayanChanging(value);
                    this.RaiseDataMemberChanging("TarikhePayan");
                    this.ValidateProperty("TarikhePayan", value);
                    this._tarikhePayan = value;
                    this.RaiseDataMemberChanged("TarikhePayan");
                    this.OnTarikhePayanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhErsalForm' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhErsalForm
        {
            get
            {
                return this._tarikhErsalForm;
            }
            set
            {
                if ((this._tarikhErsalForm != value))
                {
                    this.OnTarikhErsalFormChanging(value);
                    this.RaiseDataMemberChanging("TarikhErsalForm");
                    this.ValidateProperty("TarikhErsalForm", value);
                    this._tarikhErsalForm = value;
                    this.RaiseDataMemberChanged("TarikhErsalForm");
                    this.OnTarikhErsalFormChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikheShoro' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikheShoro
        {
            get
            {
                return this._tarikheShoro;
            }
            set
            {
                if ((this._tarikheShoro != value))
                {
                    this.OnTarikheShoroChanging(value);
                    this.RaiseDataMemberChanging("TarikheShoro");
                    this.ValidateProperty("TarikheShoro", value);
                    this._tarikheShoro = value;
                    this.RaiseDataMemberChanged("TarikheShoro");
                    this.OnTarikheShoroChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSafehayePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadSafehayePorseshName
        {
            get
            {
                return this._tedadSafehayePorseshName;
            }
            set
            {
                if ((this._tedadSafehayePorseshName != value))
                {
                    this.OnTedadSafehayePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("TedadSafehayePorseshName");
                    this.ValidateProperty("TedadSafehayePorseshName", value);
                    this._tedadSafehayePorseshName = value;
                    this.RaiseDataMemberChanged("TedadSafehayePorseshName");
                    this.OnTedadSafehayePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VaziatPeyman' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string VaziatPeyman
        {
            get
            {
                return this._vaziatPeyman;
            }
            set
            {
                if ((this._vaziatPeyman != value))
                {
                    this.OnVaziatPeymanChanging(value);
                    this.RaiseDataMemberChanging("VaziatPeyman");
                    this.ValidateProperty("VaziatPeyman", value);
                    this._vaziatPeyman = value;
                    this.RaiseDataMemberChanged("VaziatPeyman");
                    this.OnVaziatPeymanChanged();
                }
            }
        }
        
        private bool FilterPeymankar(Peymankar entity)
        {
            return (entity.Id == this.PeymankarId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Peymankar' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Peymankar : Entity
    {
        
        private Nullable<double> _emtiyazMashinalat;
        
        private Nullable<double> _gardeshmali;
        
        private int _id;
        
        private string _kodeSherkat;
        
        private string _mahaleSabt;
        
        private EntityCollection<MashinAlatVaTajhizat> _mashinAlatVaTajhizat;
        
        private string _nameGabliPeymankar1;
        
        private string _nameGabliPeymankar2;
        
        private string _nameKamelePeymankar;
        
        private string _neshaniSherkat;
        
        private string _noeMalekiyatDaftarMarkazi;
        
        private string _noeSabt;
        
        private EntityCollection<Persons> _persons;
        
        private EntityCollection<Peymanha> _peymanha;
        
        private Nullable<double> _satheZirbanayeDaftarMarkazi;
        
        private Nullable<double> _shomareSabt;
        
        private Nullable<double> _shomareSafePorseshName;
        
        private string _shomareTelefonDaftarMarkazi;
        
        private Nullable<DateTime> _tarikhErsalForm;
        
        private Nullable<DateTime> _tarikhSabt;
        
        private Nullable<DateTime> _tarikhTasis;
        
        private Nullable<double> _tavanMaliBolandModat;
        
        private Nullable<double> _tavanMaliJari;
        
        private Nullable<int> _tedadGovahinameha;
        
        private Nullable<double> _tedadKarkonanFani;
        
        private Nullable<double> _tedadKarkonanKhadamati;
        
        private Nullable<double> _tedadKarkonanModir;
        
        private Nullable<double> _tedadSafehayePorseshName;
        
        private Nullable<int> _tedadSalhayeFaaliyat;
        
        private Nullable<double> _tedadShoraka;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnEmtiyazMashinalatChanging(Nullable<double> value);
        partial void OnEmtiyazMashinalatChanged();
        partial void OnGardeshmaliChanging(Nullable<double> value);
        partial void OnGardeshmaliChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnKodeSherkatChanging(string value);
        partial void OnKodeSherkatChanged();
        partial void OnMahaleSabtChanging(string value);
        partial void OnMahaleSabtChanged();
        partial void OnNameGabliPeymankar1Changing(string value);
        partial void OnNameGabliPeymankar1Changed();
        partial void OnNameGabliPeymankar2Changing(string value);
        partial void OnNameGabliPeymankar2Changed();
        partial void OnNameKamelePeymankarChanging(string value);
        partial void OnNameKamelePeymankarChanged();
        partial void OnNeshaniSherkatChanging(string value);
        partial void OnNeshaniSherkatChanged();
        partial void OnNoeMalekiyatDaftarMarkaziChanging(string value);
        partial void OnNoeMalekiyatDaftarMarkaziChanged();
        partial void OnNoeSabtChanging(string value);
        partial void OnNoeSabtChanged();
        partial void OnSatheZirbanayeDaftarMarkaziChanging(Nullable<double> value);
        partial void OnSatheZirbanayeDaftarMarkaziChanged();
        partial void OnShomareSabtChanging(Nullable<double> value);
        partial void OnShomareSabtChanged();
        partial void OnShomareSafePorseshNameChanging(Nullable<double> value);
        partial void OnShomareSafePorseshNameChanged();
        partial void OnShomareTelefonDaftarMarkaziChanging(string value);
        partial void OnShomareTelefonDaftarMarkaziChanged();
        partial void OnTarikhErsalFormChanging(Nullable<DateTime> value);
        partial void OnTarikhErsalFormChanged();
        partial void OnTarikhSabtChanging(Nullable<DateTime> value);
        partial void OnTarikhSabtChanged();
        partial void OnTarikhTasisChanging(Nullable<DateTime> value);
        partial void OnTarikhTasisChanged();
        partial void OnTavanMaliBolandModatChanging(Nullable<double> value);
        partial void OnTavanMaliBolandModatChanged();
        partial void OnTavanMaliJariChanging(Nullable<double> value);
        partial void OnTavanMaliJariChanged();
        partial void OnTedadGovahinamehaChanging(Nullable<int> value);
        partial void OnTedadGovahinamehaChanged();
        partial void OnTedadKarkonanFaniChanging(Nullable<double> value);
        partial void OnTedadKarkonanFaniChanged();
        partial void OnTedadKarkonanKhadamatiChanging(Nullable<double> value);
        partial void OnTedadKarkonanKhadamatiChanged();
        partial void OnTedadKarkonanModirChanging(Nullable<double> value);
        partial void OnTedadKarkonanModirChanged();
        partial void OnTedadSafehayePorseshNameChanging(Nullable<double> value);
        partial void OnTedadSafehayePorseshNameChanged();
        partial void OnTedadSalhayeFaaliyatChanging(Nullable<int> value);
        partial void OnTedadSalhayeFaaliyatChanged();
        partial void OnTedadShorakaChanging(Nullable<double> value);
        partial void OnTedadShorakaChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Peymankar"/> class.
        /// </summary>
        public Peymankar()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'EmtiyazMashinalat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> EmtiyazMashinalat
        {
            get
            {
                return this._emtiyazMashinalat;
            }
            set
            {
                if ((this._emtiyazMashinalat != value))
                {
                    this.OnEmtiyazMashinalatChanging(value);
                    this.RaiseDataMemberChanging("EmtiyazMashinalat");
                    this.ValidateProperty("EmtiyazMashinalat", value);
                    this._emtiyazMashinalat = value;
                    this.RaiseDataMemberChanged("EmtiyazMashinalat");
                    this.OnEmtiyazMashinalatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Gardeshmali' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Gardeshmali
        {
            get
            {
                return this._gardeshmali;
            }
            set
            {
                if ((this._gardeshmali != value))
                {
                    this.OnGardeshmaliChanging(value);
                    this.RaiseDataMemberChanging("Gardeshmali");
                    this.ValidateProperty("Gardeshmali", value);
                    this._gardeshmali = value;
                    this.RaiseDataMemberChanged("Gardeshmali");
                    this.OnGardeshmaliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KodeSherkat' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string KodeSherkat
        {
            get
            {
                return this._kodeSherkat;
            }
            set
            {
                if ((this._kodeSherkat != value))
                {
                    this.OnKodeSherkatChanging(value);
                    this.RaiseDataMemberChanging("KodeSherkat");
                    this.ValidateProperty("KodeSherkat", value);
                    this._kodeSherkat = value;
                    this.RaiseDataMemberChanged("KodeSherkat");
                    this.OnKodeSherkatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MahaleSabt' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MahaleSabt
        {
            get
            {
                return this._mahaleSabt;
            }
            set
            {
                if ((this._mahaleSabt != value))
                {
                    this.OnMahaleSabtChanging(value);
                    this.RaiseDataMemberChanging("MahaleSabt");
                    this.ValidateProperty("MahaleSabt", value);
                    this._mahaleSabt = value;
                    this.RaiseDataMemberChanged("MahaleSabt");
                    this.OnMahaleSabtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="MashinAlatVaTajhizat"/> entity instances.
        /// </summary>
        [Association("Peymankar_MashinAlatVaTajhizat", "Id", "PeymankarId")]
        [XmlIgnore()]
        public EntityCollection<MashinAlatVaTajhizat> MashinAlatVaTajhizat
        {
            get
            {
                if ((this._mashinAlatVaTajhizat == null))
                {
                    this._mashinAlatVaTajhizat = new EntityCollection<MashinAlatVaTajhizat>(this, "MashinAlatVaTajhizat", this.FilterMashinAlatVaTajhizat, this.AttachMashinAlatVaTajhizat, this.DetachMashinAlatVaTajhizat);
                }
                return this._mashinAlatVaTajhizat;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameGabliPeymankar1' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameGabliPeymankar1
        {
            get
            {
                return this._nameGabliPeymankar1;
            }
            set
            {
                if ((this._nameGabliPeymankar1 != value))
                {
                    this.OnNameGabliPeymankar1Changing(value);
                    this.RaiseDataMemberChanging("NameGabliPeymankar1");
                    this.ValidateProperty("NameGabliPeymankar1", value);
                    this._nameGabliPeymankar1 = value;
                    this.RaiseDataMemberChanged("NameGabliPeymankar1");
                    this.OnNameGabliPeymankar1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameGabliPeymankar2' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameGabliPeymankar2
        {
            get
            {
                return this._nameGabliPeymankar2;
            }
            set
            {
                if ((this._nameGabliPeymankar2 != value))
                {
                    this.OnNameGabliPeymankar2Changing(value);
                    this.RaiseDataMemberChanging("NameGabliPeymankar2");
                    this.ValidateProperty("NameGabliPeymankar2", value);
                    this._nameGabliPeymankar2 = value;
                    this.RaiseDataMemberChanged("NameGabliPeymankar2");
                    this.OnNameGabliPeymankar2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameKamelePeymankar' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NameKamelePeymankar
        {
            get
            {
                return this._nameKamelePeymankar;
            }
            set
            {
                if ((this._nameKamelePeymankar != value))
                {
                    this.OnNameKamelePeymankarChanging(value);
                    this.RaiseDataMemberChanging("NameKamelePeymankar");
                    this.ValidateProperty("NameKamelePeymankar", value);
                    this._nameKamelePeymankar = value;
                    this.RaiseDataMemberChanged("NameKamelePeymankar");
                    this.OnNameKamelePeymankarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NeshaniSherkat' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NeshaniSherkat
        {
            get
            {
                return this._neshaniSherkat;
            }
            set
            {
                if ((this._neshaniSherkat != value))
                {
                    this.OnNeshaniSherkatChanging(value);
                    this.RaiseDataMemberChanging("NeshaniSherkat");
                    this.ValidateProperty("NeshaniSherkat", value);
                    this._neshaniSherkat = value;
                    this.RaiseDataMemberChanged("NeshaniSherkat");
                    this.OnNeshaniSherkatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NoeMalekiyatDaftarMarkazi' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NoeMalekiyatDaftarMarkazi
        {
            get
            {
                return this._noeMalekiyatDaftarMarkazi;
            }
            set
            {
                if ((this._noeMalekiyatDaftarMarkazi != value))
                {
                    this.OnNoeMalekiyatDaftarMarkaziChanging(value);
                    this.RaiseDataMemberChanging("NoeMalekiyatDaftarMarkazi");
                    this.ValidateProperty("NoeMalekiyatDaftarMarkazi", value);
                    this._noeMalekiyatDaftarMarkazi = value;
                    this.RaiseDataMemberChanged("NoeMalekiyatDaftarMarkazi");
                    this.OnNoeMalekiyatDaftarMarkaziChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NoeSabt' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string NoeSabt
        {
            get
            {
                return this._noeSabt;
            }
            set
            {
                if ((this._noeSabt != value))
                {
                    this.OnNoeSabtChanging(value);
                    this.RaiseDataMemberChanging("NoeSabt");
                    this.ValidateProperty("NoeSabt", value);
                    this._noeSabt = value;
                    this.RaiseDataMemberChanged("NoeSabt");
                    this.OnNoeSabtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Persons"/> entity instances.
        /// </summary>
        [Association("Peymankar_Persons", "Id", "PeymankarId")]
        [XmlIgnore()]
        public EntityCollection<Persons> Persons
        {
            get
            {
                if ((this._persons == null))
                {
                    this._persons = new EntityCollection<Persons>(this, "Persons", this.FilterPersons, this.AttachPersons, this.DetachPersons);
                }
                return this._persons;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Peymanha"/> entity instances.
        /// </summary>
        [Association("Peymankar_Peymanha", "Id", "PeymankarId")]
        [XmlIgnore()]
        public EntityCollection<Peymanha> Peymanha
        {
            get
            {
                if ((this._peymanha == null))
                {
                    this._peymanha = new EntityCollection<Peymanha>(this, "Peymanha", this.FilterPeymanha, this.AttachPeymanha, this.DetachPeymanha);
                }
                return this._peymanha;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SatheZirbanayeDaftarMarkazi' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SatheZirbanayeDaftarMarkazi
        {
            get
            {
                return this._satheZirbanayeDaftarMarkazi;
            }
            set
            {
                if ((this._satheZirbanayeDaftarMarkazi != value))
                {
                    this.OnSatheZirbanayeDaftarMarkaziChanging(value);
                    this.RaiseDataMemberChanging("SatheZirbanayeDaftarMarkazi");
                    this.ValidateProperty("SatheZirbanayeDaftarMarkazi", value);
                    this._satheZirbanayeDaftarMarkazi = value;
                    this.RaiseDataMemberChanged("SatheZirbanayeDaftarMarkazi");
                    this.OnSatheZirbanayeDaftarMarkaziChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSabt' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSabt
        {
            get
            {
                return this._shomareSabt;
            }
            set
            {
                if ((this._shomareSabt != value))
                {
                    this.OnShomareSabtChanging(value);
                    this.RaiseDataMemberChanging("ShomareSabt");
                    this.ValidateProperty("ShomareSabt", value);
                    this._shomareSabt = value;
                    this.RaiseDataMemberChanged("ShomareSabt");
                    this.OnShomareSabtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareSafePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ShomareSafePorseshName
        {
            get
            {
                return this._shomareSafePorseshName;
            }
            set
            {
                if ((this._shomareSafePorseshName != value))
                {
                    this.OnShomareSafePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("ShomareSafePorseshName");
                    this.ValidateProperty("ShomareSafePorseshName", value);
                    this._shomareSafePorseshName = value;
                    this.RaiseDataMemberChanged("ShomareSafePorseshName");
                    this.OnShomareSafePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShomareTelefonDaftarMarkazi' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string ShomareTelefonDaftarMarkazi
        {
            get
            {
                return this._shomareTelefonDaftarMarkazi;
            }
            set
            {
                if ((this._shomareTelefonDaftarMarkazi != value))
                {
                    this.OnShomareTelefonDaftarMarkaziChanging(value);
                    this.RaiseDataMemberChanging("ShomareTelefonDaftarMarkazi");
                    this.ValidateProperty("ShomareTelefonDaftarMarkazi", value);
                    this._shomareTelefonDaftarMarkazi = value;
                    this.RaiseDataMemberChanged("ShomareTelefonDaftarMarkazi");
                    this.OnShomareTelefonDaftarMarkaziChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhErsalForm' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhErsalForm
        {
            get
            {
                return this._tarikhErsalForm;
            }
            set
            {
                if ((this._tarikhErsalForm != value))
                {
                    this.OnTarikhErsalFormChanging(value);
                    this.RaiseDataMemberChanging("TarikhErsalForm");
                    this.ValidateProperty("TarikhErsalForm", value);
                    this._tarikhErsalForm = value;
                    this.RaiseDataMemberChanged("TarikhErsalForm");
                    this.OnTarikhErsalFormChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhSabt' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhSabt
        {
            get
            {
                return this._tarikhSabt;
            }
            set
            {
                if ((this._tarikhSabt != value))
                {
                    this.OnTarikhSabtChanging(value);
                    this.RaiseDataMemberChanging("TarikhSabt");
                    this.ValidateProperty("TarikhSabt", value);
                    this._tarikhSabt = value;
                    this.RaiseDataMemberChanged("TarikhSabt");
                    this.OnTarikhSabtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TarikhTasis' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TarikhTasis
        {
            get
            {
                return this._tarikhTasis;
            }
            set
            {
                if ((this._tarikhTasis != value))
                {
                    this.OnTarikhTasisChanging(value);
                    this.RaiseDataMemberChanging("TarikhTasis");
                    this.ValidateProperty("TarikhTasis", value);
                    this._tarikhTasis = value;
                    this.RaiseDataMemberChanged("TarikhTasis");
                    this.OnTarikhTasisChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TavanMaliBolandModat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TavanMaliBolandModat
        {
            get
            {
                return this._tavanMaliBolandModat;
            }
            set
            {
                if ((this._tavanMaliBolandModat != value))
                {
                    this.OnTavanMaliBolandModatChanging(value);
                    this.RaiseDataMemberChanging("TavanMaliBolandModat");
                    this.ValidateProperty("TavanMaliBolandModat", value);
                    this._tavanMaliBolandModat = value;
                    this.RaiseDataMemberChanged("TavanMaliBolandModat");
                    this.OnTavanMaliBolandModatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TavanMaliJari' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TavanMaliJari
        {
            get
            {
                return this._tavanMaliJari;
            }
            set
            {
                if ((this._tavanMaliJari != value))
                {
                    this.OnTavanMaliJariChanging(value);
                    this.RaiseDataMemberChanging("TavanMaliJari");
                    this.ValidateProperty("TavanMaliJari", value);
                    this._tavanMaliJari = value;
                    this.RaiseDataMemberChanged("TavanMaliJari");
                    this.OnTavanMaliJariChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadGovahinameha' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TedadGovahinameha
        {
            get
            {
                return this._tedadGovahinameha;
            }
            set
            {
                if ((this._tedadGovahinameha != value))
                {
                    this.OnTedadGovahinamehaChanging(value);
                    this.RaiseDataMemberChanging("TedadGovahinameha");
                    this.ValidateProperty("TedadGovahinameha", value);
                    this._tedadGovahinameha = value;
                    this.RaiseDataMemberChanged("TedadGovahinameha");
                    this.OnTedadGovahinamehaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadKarkonanFani' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadKarkonanFani
        {
            get
            {
                return this._tedadKarkonanFani;
            }
            set
            {
                if ((this._tedadKarkonanFani != value))
                {
                    this.OnTedadKarkonanFaniChanging(value);
                    this.RaiseDataMemberChanging("TedadKarkonanFani");
                    this.ValidateProperty("TedadKarkonanFani", value);
                    this._tedadKarkonanFani = value;
                    this.RaiseDataMemberChanged("TedadKarkonanFani");
                    this.OnTedadKarkonanFaniChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadKarkonanKhadamati' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadKarkonanKhadamati
        {
            get
            {
                return this._tedadKarkonanKhadamati;
            }
            set
            {
                if ((this._tedadKarkonanKhadamati != value))
                {
                    this.OnTedadKarkonanKhadamatiChanging(value);
                    this.RaiseDataMemberChanging("TedadKarkonanKhadamati");
                    this.ValidateProperty("TedadKarkonanKhadamati", value);
                    this._tedadKarkonanKhadamati = value;
                    this.RaiseDataMemberChanged("TedadKarkonanKhadamati");
                    this.OnTedadKarkonanKhadamatiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadKarkonanModir' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadKarkonanModir
        {
            get
            {
                return this._tedadKarkonanModir;
            }
            set
            {
                if ((this._tedadKarkonanModir != value))
                {
                    this.OnTedadKarkonanModirChanging(value);
                    this.RaiseDataMemberChanging("TedadKarkonanModir");
                    this.ValidateProperty("TedadKarkonanModir", value);
                    this._tedadKarkonanModir = value;
                    this.RaiseDataMemberChanged("TedadKarkonanModir");
                    this.OnTedadKarkonanModirChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSafehayePorseshName' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadSafehayePorseshName
        {
            get
            {
                return this._tedadSafehayePorseshName;
            }
            set
            {
                if ((this._tedadSafehayePorseshName != value))
                {
                    this.OnTedadSafehayePorseshNameChanging(value);
                    this.RaiseDataMemberChanging("TedadSafehayePorseshName");
                    this.ValidateProperty("TedadSafehayePorseshName", value);
                    this._tedadSafehayePorseshName = value;
                    this.RaiseDataMemberChanged("TedadSafehayePorseshName");
                    this.OnTedadSafehayePorseshNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadSalhayeFaaliyat' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TedadSalhayeFaaliyat
        {
            get
            {
                return this._tedadSalhayeFaaliyat;
            }
            set
            {
                if ((this._tedadSalhayeFaaliyat != value))
                {
                    this.OnTedadSalhayeFaaliyatChanging(value);
                    this.RaiseDataMemberChanging("TedadSalhayeFaaliyat");
                    this.ValidateProperty("TedadSalhayeFaaliyat", value);
                    this._tedadSalhayeFaaliyat = value;
                    this.RaiseDataMemberChanged("TedadSalhayeFaaliyat");
                    this.OnTedadSalhayeFaaliyatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TedadShoraka' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> TedadShoraka
        {
            get
            {
                return this._tedadShoraka;
            }
            set
            {
                if ((this._tedadShoraka != value))
                {
                    this.OnTedadShorakaChanging(value);
                    this.RaiseDataMemberChanging("TedadShoraka");
                    this.ValidateProperty("TedadShoraka", value);
                    this._tedadShoraka = value;
                    this.RaiseDataMemberChanged("TedadShoraka");
                    this.OnTedadShorakaChanged();
                }
            }
        }
        
        private void AttachMashinAlatVaTajhizat(MashinAlatVaTajhizat entity)
        {
            entity.Peymankar = this;
        }
        
        private void DetachMashinAlatVaTajhizat(MashinAlatVaTajhizat entity)
        {
            entity.Peymankar = null;
        }
        
        private bool FilterMashinAlatVaTajhizat(MashinAlatVaTajhizat entity)
        {
            return (entity.PeymankarId == this.Id);
        }
        
        private void AttachPersons(Persons entity)
        {
            entity.Peymankar = this;
        }
        
        private void DetachPersons(Persons entity)
        {
            entity.Peymankar = null;
        }
        
        private bool FilterPersons(Persons entity)
        {
            return (entity.PeymankarId == this.Id);
        }
        
        private void AttachPeymanha(Peymanha entity)
        {
            entity.Peymankar = this;
        }
        
        private void DetachPeymanha(Peymanha entity)
        {
            entity.Peymankar = null;
        }
        
        private bool FilterPeymanha(Peymanha entity)
        {
            return (entity.PeymankarId == this.Id);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'PMOService' DomainService.
    /// </summary>
    public sealed partial class PMOContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PMOContext"/> class.
        /// </summary>
        public PMOContext() : 
                this(new WebDomainClient<IPMOServiceContract>(new Uri("LanSysWebGIS-Web-PMOService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PMOContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The PMOService service URI.</param>
        public PMOContext(Uri serviceUri) : 
                this(new WebDomainClient<IPMOServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PMOContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public PMOContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="Applications"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Applications> Applications
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Applications>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_DelHgDetail"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_DelHgDetail> Deliver_DelHgDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_DelHgDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_DelHoghooghi"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_DelHoghooghi> Deliver_DelHoghooghis
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_DelHoghooghi>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_DelStu"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_DelStu> Deliver_DelStus
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_DelStu>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_DelStuDetail"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_DelStuDetail> Deliver_DelStuDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_DelStuDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_ReqHgDetail"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_ReqHgDetail> Deliver_ReqHgDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_ReqHgDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_ReqHoghoghi"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_ReqHoghoghi> Deliver_ReqHoghoghis
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_ReqHoghoghi>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_ReqStu"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_ReqStu> Deliver_ReqStus
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_ReqStu>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Deliver_ReqStuDetail"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Deliver_ReqStuDetail> Deliver_ReqStuDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Deliver_ReqStuDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocFile"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocFile> DocFiles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocFile>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocFileUserLog"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocFileUserLog> DocFileUserLogs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocFileUserLog>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocKeyWord"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocKeyWord> DocKeyWords
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocKeyWord>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocLocationTree"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocLocationTree> DocLocationTrees
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocLocationTree>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocLocationType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocLocationType> DocLocationTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocLocationType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocSubjectLocationFilter"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocSubjectLocationFilter> DocSubjectLocationFilters
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocSubjectLocationFilter>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocSubjectTree"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocSubjectTree> DocSubjectTrees
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocSubjectTree>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocSubjectUserFilter"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocSubjectUserFilter> DocSubjectUserFilters
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocSubjectUserFilter>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocTitleTree"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocTitleTree> DocTitleTrees
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocTitleTree>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocTitleUserFilter"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocTitleUserFilter> DocTitleUserFilters
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocTitleUserFilter>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DocTree"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<DocTree> DocTrees
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DocTree>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="EmployeesInfo"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<EmployeesInfo> EmployeesInfos
        {
            get
            {
                return base.EntityContainer.GetEntitySet<EmployeesInfo>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="EskelehStrucType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<EskelehStrucType> EskelehStrucTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<EskelehStrucType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Attach"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Attach> ICOPMAS_Attaches
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Attach>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Keyword"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Keyword> ICOPMAS_Keywords
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Keyword>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Season"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Season> ICOPMAS_Seasons
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Season>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Spec"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Spec> ICOPMAS_Specs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Spec>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Type"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Type> ICOPMAS_Types
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Type>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ICOPMAS_Writer"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ICOPMAS_Writer> ICOPMAS_Writers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ICOPMAS_Writer>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="KeyWordList"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<KeyWordList> KeyWordLists
        {
            get
            {
                return base.EntityContainer.GetEntitySet<KeyWordList>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Log_UserAction"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Log_UserAction> Log_UserActions
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Log_UserAction>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Log_UserInOut"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Log_UserInOut> Log_UserInOuts
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Log_UserInOut>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Memberships"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Memberships> Memberships
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Memberships>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_Attach"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_Attach> Mojavez_Attaches
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_Attach>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_Attach_Files"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_Attach_Files> Mojavez_Attach_Files
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_Attach_Files>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_DocType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_DocType> Mojavez_DocTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_DocType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_DocTypeRelation"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_DocTypeRelation> Mojavez_DocTypeRelations
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_DocTypeRelation>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_PlanDoc"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_PlanDoc> Mojavez_PlanDocs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_PlanDoc>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_PlanSpec"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_PlanSpec> Mojavez_PlanSpecs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_PlanSpec>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_RequestType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_RequestType> Mojavez_RequestTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_RequestType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Mojavez_UsageType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Mojavez_UsageType> Mojavez_UsageTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Mojavez_UsageType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="MojshekanStrucType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<MojshekanStrucType> MojshekanStrucTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<MojshekanStrucType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Organizations"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Organizations> Organizations
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Organizations>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Ostan"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Ostan> Ostans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Ostan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="ParamDefinition"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<ParamDefinition> ParamDefinitions
        {
            get
            {
                return base.EntityContainer.GetEntitySet<ParamDefinition>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PortEskeleh"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<PortEskeleh> PortEskelehs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PortEskeleh>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PortInfo"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<PortInfo> PortInfos
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PortInfo>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PortMojshekan"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<PortMojshekan> PortMojshekans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PortMojshekan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PortSpec"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<PortSpec> PortSpecs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PortSpec>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PortStructure"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<PortStructure> PortStructures
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PortStructure>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Profiles"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Profiles> Profiles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Profiles>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Projects"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Projects> Projects
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Projects>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="RoadType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<RoadType> RoadTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<RoadType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwLinkDocs"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwLinkDocs> vwLinkDocs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwLinkDocs>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Shahrestan"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Shahrestan> Shahrestans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Shahrestan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SpatialServices"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<SpatialServices> SpatialServices
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SpatialServices>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SubjectLink"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<SubjectLink> SubjectLinks
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SubjectLink>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblAdminUsers"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblAdminUsers> tblAdminUsers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblAdminUsers>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblDataType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblDataType> tblDataTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblDataType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblInfoType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblInfoType> tblInfoTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblInfoType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblMission"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblMission> tblMissions
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblMission>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblOstan"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblOstan> tblOstans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblOstan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblPorts"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblPorts> tblPorts
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblPorts>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblProjectMap"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblProjectMap> tblProjectMaps
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblProjectMap>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="tblUsers"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<tblUsers> tblUsers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<tblUsers>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="TitleLocation"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<TitleLocation> TitleLocations
        {
            get
            {
                return base.EntityContainer.GetEntitySet<TitleLocation>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="TitleSpec"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<TitleSpec> TitleSpecs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<TitleSpec>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="TreeLayer"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<TreeLayer> TreeLayers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<TreeLayer>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserAccess"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<UserAccess> UserAccesses
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserAccess>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserLogs"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<UserLogs> UserLogs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserLogs>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UsersInRoles"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<UsersInRoles> UsersInRoles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UsersInRoles>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<UserType> UserTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vport"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vport> vports
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vport>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwAllPlan"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwAllPlan> vwAllPlans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwAllPlan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwDocFileList"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwDocFileList> vwDocFileLists
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwDocFileList>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwFileList"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwFileList> vwFileLists
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwFileList>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwIcopmasReport"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwIcopmasReport> vwIcopmasReports
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwIcopmasReport>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwMojavez_Attach"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwMojavez_Attach> vwMojavez_Attaches
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwMojavez_Attach>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwMojavezReport"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwMojavezReport> vwMojavezReports
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwMojavezReport>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwPlanReport"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwPlanReport> vwPlanReports
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwPlanReport>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="vwUsageType"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<vwUsageType> vwUsageTypes
        {
            get
            {
                return base.EntityContainer.GetEntitySet<vwUsageType>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Zone"/> entity instances that have been loaded into this <see cref="PMOContext"/> instance.
        /// </summary>
        public EntitySet<Zone> Zones
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Zone>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Applications"/> entity instances using the 'GetApplications' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Applications"/> entity instances.</returns>
        public EntityQuery<Applications> GetApplicationsQuery()
        {
            this.ValidateMethod("GetApplicationsQuery", null);
            return base.CreateQuery<Applications>("GetApplications", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_DelHgDetail"/> entity instances using the 'GetDeliver_DelHgDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_DelHgDetail"/> entity instances.</returns>
        public EntityQuery<Deliver_DelHgDetail> GetDeliver_DelHgDetailQuery()
        {
            this.ValidateMethod("GetDeliver_DelHgDetailQuery", null);
            return base.CreateQuery<Deliver_DelHgDetail>("GetDeliver_DelHgDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_DelHoghooghi"/> entity instances using the 'GetDeliver_DelHoghooghi' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_DelHoghooghi"/> entity instances.</returns>
        public EntityQuery<Deliver_DelHoghooghi> GetDeliver_DelHoghooghiQuery()
        {
            this.ValidateMethod("GetDeliver_DelHoghooghiQuery", null);
            return base.CreateQuery<Deliver_DelHoghooghi>("GetDeliver_DelHoghooghi", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_DelStu"/> entity instances using the 'GetDeliver_DelStu' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_DelStu"/> entity instances.</returns>
        public EntityQuery<Deliver_DelStu> GetDeliver_DelStuQuery()
        {
            this.ValidateMethod("GetDeliver_DelStuQuery", null);
            return base.CreateQuery<Deliver_DelStu>("GetDeliver_DelStu", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_DelStuDetail"/> entity instances using the 'GetDeliver_DelStuDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_DelStuDetail"/> entity instances.</returns>
        public EntityQuery<Deliver_DelStuDetail> GetDeliver_DelStuDetailQuery()
        {
            this.ValidateMethod("GetDeliver_DelStuDetailQuery", null);
            return base.CreateQuery<Deliver_DelStuDetail>("GetDeliver_DelStuDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_ReqHgDetail"/> entity instances using the 'GetDeliver_ReqHgDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_ReqHgDetail"/> entity instances.</returns>
        public EntityQuery<Deliver_ReqHgDetail> GetDeliver_ReqHgDetailQuery()
        {
            this.ValidateMethod("GetDeliver_ReqHgDetailQuery", null);
            return base.CreateQuery<Deliver_ReqHgDetail>("GetDeliver_ReqHgDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_ReqHoghoghi"/> entity instances using the 'GetDeliver_ReqHoghoghi' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_ReqHoghoghi"/> entity instances.</returns>
        public EntityQuery<Deliver_ReqHoghoghi> GetDeliver_ReqHoghoghiQuery()
        {
            this.ValidateMethod("GetDeliver_ReqHoghoghiQuery", null);
            return base.CreateQuery<Deliver_ReqHoghoghi>("GetDeliver_ReqHoghoghi", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_ReqStu"/> entity instances using the 'GetDeliver_ReqStu' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_ReqStu"/> entity instances.</returns>
        public EntityQuery<Deliver_ReqStu> GetDeliver_ReqStuQuery()
        {
            this.ValidateMethod("GetDeliver_ReqStuQuery", null);
            return base.CreateQuery<Deliver_ReqStu>("GetDeliver_ReqStu", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Deliver_ReqStuDetail"/> entity instances using the 'GetDeliver_ReqStuDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Deliver_ReqStuDetail"/> entity instances.</returns>
        public EntityQuery<Deliver_ReqStuDetail> GetDeliver_ReqStuDetailQuery()
        {
            this.ValidateMethod("GetDeliver_ReqStuDetailQuery", null);
            return base.CreateQuery<Deliver_ReqStuDetail>("GetDeliver_ReqStuDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFile"/> entity instances using the 'GetDocFile' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFile"/> entity instances.</returns>
        public EntityQuery<DocFile> GetDocFileQuery()
        {
            this.ValidateMethod("GetDocFileQuery", null);
            return base.CreateQuery<DocFile>("GetDocFile", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFile"/> entity instances using the 'GetDocFilesBy' query.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFile"/> entity instances.</returns>
        public EntityQuery<DocFile> GetDocFilesByQuery(string username)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            this.ValidateMethod("GetDocFilesByQuery", parameters);
            return base.CreateQuery<DocFile>("GetDocFilesBy", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFile"/> entity instances using the 'GetDocFilesFor' query.
        /// </summary>
        /// <param name="subjectId">The value for the 'subjectId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFile"/> entity instances.</returns>
        public EntityQuery<DocFile> GetDocFilesForQuery(int subjectId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("subjectId", subjectId);
            this.ValidateMethod("GetDocFilesForQuery", parameters);
            return base.CreateQuery<DocFile>("GetDocFilesFor", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFile"/> entity instances using the 'GetDocFilesUnaccepted' query.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFile"/> entity instances.</returns>
        public EntityQuery<DocFile> GetDocFilesUnacceptedQuery(int userId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            this.ValidateMethod("GetDocFilesUnacceptedQuery", parameters);
            return base.CreateQuery<DocFile>("GetDocFilesUnaccepted", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFileUserLog"/> entity instances using the 'GetDocFileUserLog' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFileUserLog"/> entity instances.</returns>
        public EntityQuery<DocFileUserLog> GetDocFileUserLogQuery()
        {
            this.ValidateMethod("GetDocFileUserLogQuery", null);
            return base.CreateQuery<DocFileUserLog>("GetDocFileUserLog", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFileUserLog"/> entity instances using the 'GetDocFileUserLogBy' query.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFileUserLog"/> entity instances.</returns>
        public EntityQuery<DocFileUserLog> GetDocFileUserLogByQuery(int userId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            this.ValidateMethod("GetDocFileUserLogByQuery", parameters);
            return base.CreateQuery<DocFileUserLog>("GetDocFileUserLogBy", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFileUserLog"/> entity instances using the 'GetDocFileUserLogFor' query.
        /// </summary>
        /// <param name="fileId">The value for the 'fileId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFileUserLog"/> entity instances.</returns>
        public EntityQuery<DocFileUserLog> GetDocFileUserLogForQuery(int fileId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("fileId", fileId);
            this.ValidateMethod("GetDocFileUserLogForQuery", parameters);
            return base.CreateQuery<DocFileUserLog>("GetDocFileUserLogFor", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocKeyWord"/> entity instances using the 'GetDocKeyWord' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocKeyWord"/> entity instances.</returns>
        public EntityQuery<DocKeyWord> GetDocKeyWordQuery()
        {
            this.ValidateMethod("GetDocKeyWordQuery", null);
            return base.CreateQuery<DocKeyWord>("GetDocKeyWord", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocLocationTree"/> entity instances using the 'GetDocLocationTree' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocLocationTree"/> entity instances.</returns>
        public EntityQuery<DocLocationTree> GetDocLocationTreeQuery()
        {
            this.ValidateMethod("GetDocLocationTreeQuery", null);
            return base.CreateQuery<DocLocationTree>("GetDocLocationTree", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocLocationType"/> entity instances using the 'GetDocLocationType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocLocationType"/> entity instances.</returns>
        public EntityQuery<DocLocationType> GetDocLocationTypeQuery()
        {
            this.ValidateMethod("GetDocLocationTypeQuery", null);
            return base.CreateQuery<DocLocationType>("GetDocLocationType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocSubjectLocationFilter"/> entity instances using the 'GetDocSubjectLocationFilter' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocSubjectLocationFilter"/> entity instances.</returns>
        public EntityQuery<DocSubjectLocationFilter> GetDocSubjectLocationFilterQuery()
        {
            this.ValidateMethod("GetDocSubjectLocationFilterQuery", null);
            return base.CreateQuery<DocSubjectLocationFilter>("GetDocSubjectLocationFilter", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocSubjectTree"/> entity instances using the 'GetDocSubjectTree' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocSubjectTree"/> entity instances.</returns>
        public EntityQuery<DocSubjectTree> GetDocSubjectTreeQuery()
        {
            this.ValidateMethod("GetDocSubjectTreeQuery", null);
            return base.CreateQuery<DocSubjectTree>("GetDocSubjectTree", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocSubjectUserFilter"/> entity instances using the 'GetDocSubjectUserFilter' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocSubjectUserFilter"/> entity instances.</returns>
        public EntityQuery<DocSubjectUserFilter> GetDocSubjectUserFilterQuery()
        {
            this.ValidateMethod("GetDocSubjectUserFilterQuery", null);
            return base.CreateQuery<DocSubjectUserFilter>("GetDocSubjectUserFilter", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocTitleTree"/> entity instances using the 'GetDocTitleTree' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocTitleTree"/> entity instances.</returns>
        public EntityQuery<DocTitleTree> GetDocTitleTreeQuery()
        {
            this.ValidateMethod("GetDocTitleTreeQuery", null);
            return base.CreateQuery<DocTitleTree>("GetDocTitleTree", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocTitleUserFilter"/> entity instances using the 'GetDocTitleUserFilter' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocTitleUserFilter"/> entity instances.</returns>
        public EntityQuery<DocTitleUserFilter> GetDocTitleUserFilterQuery()
        {
            this.ValidateMethod("GetDocTitleUserFilterQuery", null);
            return base.CreateQuery<DocTitleUserFilter>("GetDocTitleUserFilter", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocTree"/> entity instances using the 'GetDocTree' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocTree"/> entity instances.</returns>
        public EntityQuery<DocTree> GetDocTreeQuery()
        {
            this.ValidateMethod("GetDocTreeQuery", null);
            return base.CreateQuery<DocTree>("GetDocTree", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="EmployeesInfo"/> entity instances using the 'GetEmployeesInfo' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="EmployeesInfo"/> entity instances.</returns>
        public EntityQuery<EmployeesInfo> GetEmployeesInfoQuery()
        {
            this.ValidateMethod("GetEmployeesInfoQuery", null);
            return base.CreateQuery<EmployeesInfo>("GetEmployeesInfo", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="EskelehStrucType"/> entity instances using the 'GetEskelehStrucType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="EskelehStrucType"/> entity instances.</returns>
        public EntityQuery<EskelehStrucType> GetEskelehStrucTypeQuery()
        {
            this.ValidateMethod("GetEskelehStrucTypeQuery", null);
            return base.CreateQuery<EskelehStrucType>("GetEskelehStrucType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Attach"/> entity instances using the 'GetICOPMAS_Attach' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Attach"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Attach> GetICOPMAS_AttachQuery()
        {
            this.ValidateMethod("GetICOPMAS_AttachQuery", null);
            return base.CreateQuery<ICOPMAS_Attach>("GetICOPMAS_Attach", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Keyword"/> entity instances using the 'GetICOPMAS_Keyword' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Keyword"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Keyword> GetICOPMAS_KeywordQuery()
        {
            this.ValidateMethod("GetICOPMAS_KeywordQuery", null);
            return base.CreateQuery<ICOPMAS_Keyword>("GetICOPMAS_Keyword", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Season"/> entity instances using the 'GetICOPMAS_Season' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Season"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Season> GetICOPMAS_SeasonQuery()
        {
            this.ValidateMethod("GetICOPMAS_SeasonQuery", null);
            return base.CreateQuery<ICOPMAS_Season>("GetICOPMAS_Season", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Spec"/> entity instances using the 'GetICOPMAS_Spec' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Spec"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Spec> GetICOPMAS_SpecQuery()
        {
            this.ValidateMethod("GetICOPMAS_SpecQuery", null);
            return base.CreateQuery<ICOPMAS_Spec>("GetICOPMAS_Spec", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Type"/> entity instances using the 'GetICOPMAS_Type' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Type"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Type> GetICOPMAS_TypeQuery()
        {
            this.ValidateMethod("GetICOPMAS_TypeQuery", null);
            return base.CreateQuery<ICOPMAS_Type>("GetICOPMAS_Type", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ICOPMAS_Writer"/> entity instances using the 'GetICOPMAS_Writer' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ICOPMAS_Writer"/> entity instances.</returns>
        public EntityQuery<ICOPMAS_Writer> GetICOPMAS_WriterQuery()
        {
            this.ValidateMethod("GetICOPMAS_WriterQuery", null);
            return base.CreateQuery<ICOPMAS_Writer>("GetICOPMAS_Writer", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="KeyWordList"/> entity instances using the 'GetKeyWordList' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="KeyWordList"/> entity instances.</returns>
        public EntityQuery<KeyWordList> GetKeyWordListQuery()
        {
            this.ValidateMethod("GetKeyWordListQuery", null);
            return base.CreateQuery<KeyWordList>("GetKeyWordList", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocFile"/> entity instances using the 'GetLatestDocFiles' query.
        /// </summary>
        /// <param name="count">The value for the 'count' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocFile"/> entity instances.</returns>
        public EntityQuery<DocFile> GetLatestDocFilesQuery(int count)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("count", count);
            this.ValidateMethod("GetLatestDocFilesQuery", parameters);
            return base.CreateQuery<DocFile>("GetLatestDocFiles", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Log_UserAction"/> entity instances using the 'GetLog_UserAction' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Log_UserAction"/> entity instances.</returns>
        public EntityQuery<Log_UserAction> GetLog_UserActionQuery()
        {
            this.ValidateMethod("GetLog_UserActionQuery", null);
            return base.CreateQuery<Log_UserAction>("GetLog_UserAction", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Log_UserInOut"/> entity instances using the 'GetLog_UserInOut' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Log_UserInOut"/> entity instances.</returns>
        public EntityQuery<Log_UserInOut> GetLog_UserInOutQuery()
        {
            this.ValidateMethod("GetLog_UserInOutQuery", null);
            return base.CreateQuery<Log_UserInOut>("GetLog_UserInOut", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Memberships"/> entity instances using the 'GetMemberships' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Memberships"/> entity instances.</returns>
        public EntityQuery<Memberships> GetMembershipsQuery()
        {
            this.ValidateMethod("GetMembershipsQuery", null);
            return base.CreateQuery<Memberships>("GetMemberships", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_Attach"/> entity instances using the 'GetMojavez_Attach' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_Attach"/> entity instances.</returns>
        public EntityQuery<Mojavez_Attach> GetMojavez_AttachQuery()
        {
            this.ValidateMethod("GetMojavez_AttachQuery", null);
            return base.CreateQuery<Mojavez_Attach>("GetMojavez_Attach", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_Attach_Files"/> entity instances using the 'GetMojavez_Attach_Files' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_Attach_Files"/> entity instances.</returns>
        public EntityQuery<Mojavez_Attach_Files> GetMojavez_Attach_FilesQuery()
        {
            this.ValidateMethod("GetMojavez_Attach_FilesQuery", null);
            return base.CreateQuery<Mojavez_Attach_Files>("GetMojavez_Attach_Files", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_DocType"/> entity instances using the 'GetMojavez_DocType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_DocType"/> entity instances.</returns>
        public EntityQuery<Mojavez_DocType> GetMojavez_DocTypeQuery()
        {
            this.ValidateMethod("GetMojavez_DocTypeQuery", null);
            return base.CreateQuery<Mojavez_DocType>("GetMojavez_DocType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_DocTypeRelation"/> entity instances using the 'GetMojavez_DocTypeRelation' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_DocTypeRelation"/> entity instances.</returns>
        public EntityQuery<Mojavez_DocTypeRelation> GetMojavez_DocTypeRelationQuery()
        {
            this.ValidateMethod("GetMojavez_DocTypeRelationQuery", null);
            return base.CreateQuery<Mojavez_DocTypeRelation>("GetMojavez_DocTypeRelation", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_PlanDoc"/> entity instances using the 'GetMojavez_PlanDoc' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_PlanDoc"/> entity instances.</returns>
        public EntityQuery<Mojavez_PlanDoc> GetMojavez_PlanDocQuery()
        {
            this.ValidateMethod("GetMojavez_PlanDocQuery", null);
            return base.CreateQuery<Mojavez_PlanDoc>("GetMojavez_PlanDoc", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_PlanSpec"/> entity instances using the 'GetMojavez_PlanSpec' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_PlanSpec"/> entity instances.</returns>
        public EntityQuery<Mojavez_PlanSpec> GetMojavez_PlanSpecQuery()
        {
            this.ValidateMethod("GetMojavez_PlanSpecQuery", null);
            return base.CreateQuery<Mojavez_PlanSpec>("GetMojavez_PlanSpec", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_RequestType"/> entity instances using the 'GetMojavez_RequestType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_RequestType"/> entity instances.</returns>
        public EntityQuery<Mojavez_RequestType> GetMojavez_RequestTypeQuery()
        {
            this.ValidateMethod("GetMojavez_RequestTypeQuery", null);
            return base.CreateQuery<Mojavez_RequestType>("GetMojavez_RequestType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Mojavez_UsageType"/> entity instances using the 'GetMojavez_UsageType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Mojavez_UsageType"/> entity instances.</returns>
        public EntityQuery<Mojavez_UsageType> GetMojavez_UsageTypeQuery()
        {
            this.ValidateMethod("GetMojavez_UsageTypeQuery", null);
            return base.CreateQuery<Mojavez_UsageType>("GetMojavez_UsageType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="MojshekanStrucType"/> entity instances using the 'GetMojshekanStrucType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="MojshekanStrucType"/> entity instances.</returns>
        public EntityQuery<MojshekanStrucType> GetMojshekanStrucTypeQuery()
        {
            this.ValidateMethod("GetMojshekanStrucTypeQuery", null);
            return base.CreateQuery<MojshekanStrucType>("GetMojshekanStrucType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Organizations"/> entity instances using the 'GetOrganizations' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Organizations"/> entity instances.</returns>
        public EntityQuery<Organizations> GetOrganizationsQuery()
        {
            this.ValidateMethod("GetOrganizationsQuery", null);
            return base.CreateQuery<Organizations>("GetOrganizations", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Ostan"/> entity instances using the 'GetOstan' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Ostan"/> entity instances.</returns>
        public EntityQuery<Ostan> GetOstanQuery()
        {
            this.ValidateMethod("GetOstanQuery", null);
            return base.CreateQuery<Ostan>("GetOstan", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="ParamDefinition"/> entity instances using the 'GetParamDefinition' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="ParamDefinition"/> entity instances.</returns>
        public EntityQuery<ParamDefinition> GetParamDefinitionQuery()
        {
            this.ValidateMethod("GetParamDefinitionQuery", null);
            return base.CreateQuery<ParamDefinition>("GetParamDefinition", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PortEskeleh"/> entity instances using the 'GetPortEskeleh' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PortEskeleh"/> entity instances.</returns>
        public EntityQuery<PortEskeleh> GetPortEskelehQuery()
        {
            this.ValidateMethod("GetPortEskelehQuery", null);
            return base.CreateQuery<PortEskeleh>("GetPortEskeleh", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PortInfo"/> entity instances using the 'GetPortInfo' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PortInfo"/> entity instances.</returns>
        public EntityQuery<PortInfo> GetPortInfoQuery()
        {
            this.ValidateMethod("GetPortInfoQuery", null);
            return base.CreateQuery<PortInfo>("GetPortInfo", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PortMojshekan"/> entity instances using the 'GetPortMojshekan' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PortMojshekan"/> entity instances.</returns>
        public EntityQuery<PortMojshekan> GetPortMojshekanQuery()
        {
            this.ValidateMethod("GetPortMojshekanQuery", null);
            return base.CreateQuery<PortMojshekan>("GetPortMojshekan", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PortSpec"/> entity instances using the 'GetPortSpec' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PortSpec"/> entity instances.</returns>
        public EntityQuery<PortSpec> GetPortSpecQuery()
        {
            this.ValidateMethod("GetPortSpecQuery", null);
            return base.CreateQuery<PortSpec>("GetPortSpec", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PortStructure"/> entity instances using the 'GetPortStructure' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PortStructure"/> entity instances.</returns>
        public EntityQuery<PortStructure> GetPortStructureQuery()
        {
            this.ValidateMethod("GetPortStructureQuery", null);
            return base.CreateQuery<PortStructure>("GetPortStructure", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Profiles"/> entity instances using the 'GetProfiles' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Profiles"/> entity instances.</returns>
        public EntityQuery<Profiles> GetProfilesQuery()
        {
            this.ValidateMethod("GetProfilesQuery", null);
            return base.CreateQuery<Profiles>("GetProfiles", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Projects"/> entity instances using the 'GetProjects' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Projects"/> entity instances.</returns>
        public EntityQuery<Projects> GetProjectsQuery()
        {
            this.ValidateMethod("GetProjectsQuery", null);
            return base.CreateQuery<Projects>("GetProjects", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="RoadType"/> entity instances using the 'GetRoadType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="RoadType"/> entity instances.</returns>
        public EntityQuery<RoadType> GetRoadTypeQuery()
        {
            this.ValidateMethod("GetRoadTypeQuery", null);
            return base.CreateQuery<RoadType>("GetRoadType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwLinkDocs"/> entity instances using the 'GetSearchResult' query.
        /// </summary>
        /// <param name="criteria">The value for the 'criteria' parameter of the query.</param>
        /// <param name="keyword">The value for the 'keyword' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwLinkDocs"/> entity instances.</returns>
        public EntityQuery<vwLinkDocs> GetSearchResultQuery(string criteria, string keyword)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("criteria", criteria);
            parameters.Add("keyword", keyword);
            this.ValidateMethod("GetSearchResultQuery", parameters);
            return base.CreateQuery<vwLinkDocs>("GetSearchResult", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Shahrestan"/> entity instances using the 'GetShahrestan' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Shahrestan"/> entity instances.</returns>
        public EntityQuery<Shahrestan> GetShahrestanQuery()
        {
            this.ValidateMethod("GetShahrestanQuery", null);
            return base.CreateQuery<Shahrestan>("GetShahrestan", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SpatialServices"/> entity instances using the 'GetSpatialServices' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SpatialServices"/> entity instances.</returns>
        public EntityQuery<SpatialServices> GetSpatialServicesQuery()
        {
            this.ValidateMethod("GetSpatialServicesQuery", null);
            return base.CreateQuery<SpatialServices>("GetSpatialServices", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SubjectLink"/> entity instances using the 'GetSubjectLink' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SubjectLink"/> entity instances.</returns>
        public EntityQuery<SubjectLink> GetSubjectLinkQuery()
        {
            this.ValidateMethod("GetSubjectLinkQuery", null);
            return base.CreateQuery<SubjectLink>("GetSubjectLink", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocSubjectUserFilter"/> entity instances using the 'GetSubjectsFor' query.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocSubjectUserFilter"/> entity instances.</returns>
        public EntityQuery<DocSubjectUserFilter> GetSubjectsForQuery(int userId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            this.ValidateMethod("GetSubjectsForQuery", parameters);
            return base.CreateQuery<DocSubjectUserFilter>("GetSubjectsFor", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblAdminUsers"/> entity instances using the 'GettblAdminUsers' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblAdminUsers"/> entity instances.</returns>
        public EntityQuery<tblAdminUsers> GettblAdminUsersQuery()
        {
            this.ValidateMethod("GettblAdminUsersQuery", null);
            return base.CreateQuery<tblAdminUsers>("GettblAdminUsers", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblDataType"/> entity instances using the 'GetTblDataType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblDataType"/> entity instances.</returns>
        public EntityQuery<tblDataType> GetTblDataTypeQuery()
        {
            this.ValidateMethod("GetTblDataTypeQuery", null);
            return base.CreateQuery<tblDataType>("GetTblDataType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblInfoType"/> entity instances using the 'GetTblInfoType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblInfoType"/> entity instances.</returns>
        public EntityQuery<tblInfoType> GetTblInfoTypeQuery()
        {
            this.ValidateMethod("GetTblInfoTypeQuery", null);
            return base.CreateQuery<tblInfoType>("GetTblInfoType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblMission"/> entity instances using the 'GetTblMission' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblMission"/> entity instances.</returns>
        public EntityQuery<tblMission> GetTblMissionQuery()
        {
            this.ValidateMethod("GetTblMissionQuery", null);
            return base.CreateQuery<tblMission>("GetTblMission", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblOstan"/> entity instances using the 'GetTblOstan' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblOstan"/> entity instances.</returns>
        public EntityQuery<tblOstan> GetTblOstanQuery()
        {
            this.ValidateMethod("GetTblOstanQuery", null);
            return base.CreateQuery<tblOstan>("GetTblOstan", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblPorts"/> entity instances using the 'GetTblPorts' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblPorts"/> entity instances.</returns>
        public EntityQuery<tblPorts> GetTblPortsQuery()
        {
            this.ValidateMethod("GetTblPortsQuery", null);
            return base.CreateQuery<tblPorts>("GetTblPorts", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblProjectMap"/> entity instances using the 'GetTblProjectMap' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblProjectMap"/> entity instances.</returns>
        public EntityQuery<tblProjectMap> GetTblProjectMapQuery()
        {
            this.ValidateMethod("GetTblProjectMapQuery", null);
            return base.CreateQuery<tblProjectMap>("GetTblProjectMap", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="tblUsers"/> entity instances using the 'GetTblUsers' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="tblUsers"/> entity instances.</returns>
        public EntityQuery<tblUsers> GetTblUsersQuery()
        {
            this.ValidateMethod("GetTblUsersQuery", null);
            return base.CreateQuery<tblUsers>("GetTblUsers", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="TitleLocation"/> entity instances using the 'GetTitleLocation' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="TitleLocation"/> entity instances.</returns>
        public EntityQuery<TitleLocation> GetTitleLocationQuery()
        {
            this.ValidateMethod("GetTitleLocationQuery", null);
            return base.CreateQuery<TitleLocation>("GetTitleLocation", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DocTitleUserFilter"/> entity instances using the 'GetTitlesFor' query.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DocTitleUserFilter"/> entity instances.</returns>
        public EntityQuery<DocTitleUserFilter> GetTitlesForQuery(int userId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            this.ValidateMethod("GetTitlesForQuery", parameters);
            return base.CreateQuery<DocTitleUserFilter>("GetTitlesFor", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="TitleSpec"/> entity instances using the 'GetTitleSpec' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="TitleSpec"/> entity instances.</returns>
        public EntityQuery<TitleSpec> GetTitleSpecQuery()
        {
            this.ValidateMethod("GetTitleSpecQuery", null);
            return base.CreateQuery<TitleSpec>("GetTitleSpec", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="TreeLayer"/> entity instances using the 'GetTreeLayer' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="TreeLayer"/> entity instances.</returns>
        public EntityQuery<TreeLayer> GetTreeLayerQuery()
        {
            this.ValidateMethod("GetTreeLayerQuery", null);
            return base.CreateQuery<TreeLayer>("GetTreeLayer", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserAccess"/> entity instances using the 'GetUserAccess' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserAccess"/> entity instances.</returns>
        public EntityQuery<UserAccess> GetUserAccessQuery()
        {
            this.ValidateMethod("GetUserAccessQuery", null);
            return base.CreateQuery<UserAccess>("GetUserAccess", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserLogs"/> entity instances using the 'GetUserLogs' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserLogs"/> entity instances.</returns>
        public EntityQuery<UserLogs> GetUserLogsQuery()
        {
            this.ValidateMethod("GetUserLogsQuery", null);
            return base.CreateQuery<UserLogs>("GetUserLogs", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UsersInRoles"/> entity instances using the 'GetUsersInRoles' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UsersInRoles"/> entity instances.</returns>
        public EntityQuery<UsersInRoles> GetUsersInRolesQuery()
        {
            this.ValidateMethod("GetUsersInRolesQuery", null);
            return base.CreateQuery<UsersInRoles>("GetUsersInRoles", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserType"/> entity instances using the 'GetUserType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserType"/> entity instances.</returns>
        public EntityQuery<UserType> GetUserTypeQuery()
        {
            this.ValidateMethod("GetUserTypeQuery", null);
            return base.CreateQuery<UserType>("GetUserType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vport"/> entity instances using the 'GetVport' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vport"/> entity instances.</returns>
        public EntityQuery<vport> GetVportQuery()
        {
            this.ValidateMethod("GetVportQuery", null);
            return base.CreateQuery<vport>("GetVport", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwAllPlan"/> entity instances using the 'GetVwAllPlan' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwAllPlan"/> entity instances.</returns>
        public EntityQuery<vwAllPlan> GetVwAllPlanQuery()
        {
            this.ValidateMethod("GetVwAllPlanQuery", null);
            return base.CreateQuery<vwAllPlan>("GetVwAllPlan", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwDocFileList"/> entity instances using the 'GetVwDocFileList' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwDocFileList"/> entity instances.</returns>
        public EntityQuery<vwDocFileList> GetVwDocFileListQuery()
        {
            this.ValidateMethod("GetVwDocFileListQuery", null);
            return base.CreateQuery<vwDocFileList>("GetVwDocFileList", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwFileList"/> entity instances using the 'GetVwFileList' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwFileList"/> entity instances.</returns>
        public EntityQuery<vwFileList> GetVwFileListQuery()
        {
            this.ValidateMethod("GetVwFileListQuery", null);
            return base.CreateQuery<vwFileList>("GetVwFileList", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwIcopmasReport"/> entity instances using the 'GetVwIcopmasReport' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwIcopmasReport"/> entity instances.</returns>
        public EntityQuery<vwIcopmasReport> GetVwIcopmasReportQuery()
        {
            this.ValidateMethod("GetVwIcopmasReportQuery", null);
            return base.CreateQuery<vwIcopmasReport>("GetVwIcopmasReport", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwLinkDocs"/> entity instances using the 'GetVwLinkDocs' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwLinkDocs"/> entity instances.</returns>
        public EntityQuery<vwLinkDocs> GetVwLinkDocsQuery()
        {
            this.ValidateMethod("GetVwLinkDocsQuery", null);
            return base.CreateQuery<vwLinkDocs>("GetVwLinkDocs", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwMojavez_Attach"/> entity instances using the 'GetVwMojavez_Attach' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwMojavez_Attach"/> entity instances.</returns>
        public EntityQuery<vwMojavez_Attach> GetVwMojavez_AttachQuery()
        {
            this.ValidateMethod("GetVwMojavez_AttachQuery", null);
            return base.CreateQuery<vwMojavez_Attach>("GetVwMojavez_Attach", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwMojavezReport"/> entity instances using the 'GetVwMojavezReport' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwMojavezReport"/> entity instances.</returns>
        public EntityQuery<vwMojavezReport> GetVwMojavezReportQuery()
        {
            this.ValidateMethod("GetVwMojavezReportQuery", null);
            return base.CreateQuery<vwMojavezReport>("GetVwMojavezReport", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwPlanReport"/> entity instances using the 'GetVwPlanReport' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwPlanReport"/> entity instances.</returns>
        public EntityQuery<vwPlanReport> GetVwPlanReportQuery()
        {
            this.ValidateMethod("GetVwPlanReportQuery", null);
            return base.CreateQuery<vwPlanReport>("GetVwPlanReport", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="vwUsageType"/> entity instances using the 'GetVwUsageType' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="vwUsageType"/> entity instances.</returns>
        public EntityQuery<vwUsageType> GetVwUsageTypeQuery()
        {
            this.ValidateMethod("GetVwUsageTypeQuery", null);
            return base.CreateQuery<vwUsageType>("GetVwUsageType", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Zone"/> entity instances using the 'GetZone' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Zone"/> entity instances.</returns>
        public EntityQuery<Zone> GetZoneQuery()
        {
            this.ValidateMethod("GetZoneQuery", null);
            return base.CreateQuery<Zone>("GetZone", null, false, true);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePmoPassword' method of the DomainService.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation ChangePmoPassword(int userId, string newPassword, Action<InvokeOperation> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePmoPassword", parameters);
            return this.InvokeOperation("ChangePmoPassword", typeof(void), parameters, true, callback, userState);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePmoPassword' method of the DomainService.
        /// </summary>
        /// <param name="userId">The value for the 'userId' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation ChangePmoPassword(int userId, string newPassword)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userId", userId);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePmoPassword", parameters);
            return this.InvokeOperation("ChangePmoPassword", typeof(void), parameters, true, null, null);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'DownloadFile' method of the DomainService.
        /// </summary>
        /// <param name="FName">The value for the 'FName' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<byte[]> DownloadFile(string FName, Action<InvokeOperation<byte[]>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("FName", FName);
            this.ValidateMethod("DownloadFile", parameters);
            return ((InvokeOperation<byte[]>)(this.InvokeOperation("DownloadFile", typeof(byte[]), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'DownloadFile' method of the DomainService.
        /// </summary>
        /// <param name="FName">The value for the 'FName' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<byte[]> DownloadFile(string FName)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("FName", FName);
            this.ValidateMethod("DownloadFile", parameters);
            return ((InvokeOperation<byte[]>)(this.InvokeOperation("DownloadFile", typeof(byte[]), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetAdminUser' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetAdminUser(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetAdminUser", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetAdminUser", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetAdminUser' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetAdminUser()
        {
            this.ValidateMethod("GetAdminUser", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetAdminUser", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocFileWithMaxId' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocFileWithMaxId(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetDocFileWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocFileWithMaxId", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocFileWithMaxId' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocFileWithMaxId()
        {
            this.ValidateMethod("GetDocFileWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocFileWithMaxId", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocSubjectWithMaxId' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocSubjectWithMaxId(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetDocSubjectWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocSubjectWithMaxId", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocSubjectWithMaxId' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocSubjectWithMaxId()
        {
            this.ValidateMethod("GetDocSubjectWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocSubjectWithMaxId", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocTitleWithMaxId' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocTitleWithMaxId(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetDocTitleWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocTitleWithMaxId", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetDocTitleWithMaxId' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetDocTitleWithMaxId()
        {
            this.ValidateMethod("GetDocTitleWithMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetDocTitleWithMaxId", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetKeywordListMaxId' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetKeywordListMaxId(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetKeywordListMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetKeywordListMaxId", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetKeywordListMaxId' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetKeywordListMaxId()
        {
            this.ValidateMethod("GetKeywordListMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetKeywordListMaxId", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetTblUsersMaxId' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetTblUsersMaxId(Action<InvokeOperation<int>> callback, object userState)
        {
            this.ValidateMethod("GetTblUsersMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetTblUsersMaxId", typeof(int), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetTblUsersMaxId' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> GetTblUsersMaxId()
        {
            this.ValidateMethod("GetTblUsersMaxId", null);
            return ((InvokeOperation<int>)(this.InvokeOperation("GetTblUsersMaxId", typeof(int), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'SaveDocSubjectTree' method of the DomainService.
        /// </summary>
        /// <param name="docSubjectTree">The value for the 'docSubjectTree' parameter of this action.</param>
        /// <param name="ostanId">The value for the 'ostanId' parameter of this action.</param>
        /// <param name="tblDataTypeId">The value for the 'tblDataTypeId' parameter of this action.</param>
        /// <param name="tblInfoTypeId">The value for the 'tblInfoTypeId' parameter of this action.</param>
        /// <param name="tblPortsId">The value for the 'tblPortsId' parameter of this action.</param>
        /// <param name="zoneId">The value for the 'zoneId' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation SaveDocSubjectTree(string docSubjectTree, IEnumerable<int> ostanId, IEnumerable<int> tblDataTypeId, IEnumerable<int> tblInfoTypeId, IEnumerable<int> tblPortsId, IEnumerable<int> zoneId, Action<InvokeOperation> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("docSubjectTree", docSubjectTree);
            parameters.Add("ostanId", ostanId);
            parameters.Add("tblDataTypeId", tblDataTypeId);
            parameters.Add("tblInfoTypeId", tblInfoTypeId);
            parameters.Add("tblPortsId", tblPortsId);
            parameters.Add("zoneId", zoneId);
            this.ValidateMethod("SaveDocSubjectTree", parameters);
            return this.InvokeOperation("SaveDocSubjectTree", typeof(void), parameters, true, callback, userState);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'SaveDocSubjectTree' method of the DomainService.
        /// </summary>
        /// <param name="docSubjectTree">The value for the 'docSubjectTree' parameter of this action.</param>
        /// <param name="ostanId">The value for the 'ostanId' parameter of this action.</param>
        /// <param name="tblDataTypeId">The value for the 'tblDataTypeId' parameter of this action.</param>
        /// <param name="tblInfoTypeId">The value for the 'tblInfoTypeId' parameter of this action.</param>
        /// <param name="tblPortsId">The value for the 'tblPortsId' parameter of this action.</param>
        /// <param name="zoneId">The value for the 'zoneId' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation SaveDocSubjectTree(string docSubjectTree, IEnumerable<int> ostanId, IEnumerable<int> tblDataTypeId, IEnumerable<int> tblInfoTypeId, IEnumerable<int> tblPortsId, IEnumerable<int> zoneId)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("docSubjectTree", docSubjectTree);
            parameters.Add("ostanId", ostanId);
            parameters.Add("tblDataTypeId", tblDataTypeId);
            parameters.Add("tblInfoTypeId", tblInfoTypeId);
            parameters.Add("tblPortsId", tblPortsId);
            parameters.Add("zoneId", zoneId);
            this.ValidateMethod("SaveDocSubjectTree", parameters);
            return this.InvokeOperation("SaveDocSubjectTree", typeof(void), parameters, true, null, null);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new PMOContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'PMOService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IPMOServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'ChangePmoPassword' operation.
            /// </summary>
            /// <param name="userId">The value for the 'userId' parameter of this action.</param>
            /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/ChangePmoPasswordDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/ChangePmoPassword", ReplyAction="http://tempuri.org/PMOService/ChangePmoPasswordResponse")]
            IAsyncResult BeginChangePmoPassword(int userId, string newPassword, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginChangePmoPassword'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginChangePmoPassword'.</param>
            void EndChangePmoPassword(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'DownloadFile' operation.
            /// </summary>
            /// <param name="FName">The value for the 'FName' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/DownloadFileDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/DownloadFile", ReplyAction="http://tempuri.org/PMOService/DownloadFileResponse")]
            IAsyncResult BeginDownloadFile(string FName, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginDownloadFile'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginDownloadFile'.</param>
            /// <returns>The 'Byte[]' returned from the 'DownloadFile' operation.</returns>
            byte[] EndDownloadFile(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetAdminUser' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetAdminUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetAdminUser", ReplyAction="http://tempuri.org/PMOService/GetAdminUserResponse")]
            IAsyncResult BeginGetAdminUser(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetAdminUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetAdminUser'.</param>
            /// <returns>The 'Int32' returned from the 'GetAdminUser' operation.</returns>
            int EndGetAdminUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetApplications' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetApplicationsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetApplications", ReplyAction="http://tempuri.org/PMOService/GetApplicationsResponse")]
            [WebGet()]
            IAsyncResult BeginGetApplications(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetApplications'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetApplications'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetApplications' operation.</returns>
            QueryResult<Applications> EndGetApplications(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_DelHgDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_DelHgDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_DelHgDetail", ReplyAction="http://tempuri.org/PMOService/GetDeliver_DelHgDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_DelHgDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_DelHgDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_DelHgDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_DelHgDetail' operation.</returns>
            QueryResult<Deliver_DelHgDetail> EndGetDeliver_DelHgDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_DelHoghooghi' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_DelHoghooghiDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_DelHoghooghi", ReplyAction="http://tempuri.org/PMOService/GetDeliver_DelHoghooghiResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_DelHoghooghi(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_DelHoghooghi'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_DelHoghooghi'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_DelHoghooghi' operation.</returns>
            QueryResult<Deliver_DelHoghooghi> EndGetDeliver_DelHoghooghi(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_DelStu' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_DelStuDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_DelStu", ReplyAction="http://tempuri.org/PMOService/GetDeliver_DelStuResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_DelStu(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_DelStu'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_DelStu'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_DelStu' operation.</returns>
            QueryResult<Deliver_DelStu> EndGetDeliver_DelStu(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_DelStuDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_DelStuDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_DelStuDetail", ReplyAction="http://tempuri.org/PMOService/GetDeliver_DelStuDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_DelStuDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_DelStuDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_DelStuDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_DelStuDetail' operation.</returns>
            QueryResult<Deliver_DelStuDetail> EndGetDeliver_DelStuDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_ReqHgDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_ReqHgDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_ReqHgDetail", ReplyAction="http://tempuri.org/PMOService/GetDeliver_ReqHgDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_ReqHgDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_ReqHgDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_ReqHgDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_ReqHgDetail' operation.</returns>
            QueryResult<Deliver_ReqHgDetail> EndGetDeliver_ReqHgDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_ReqHoghoghi' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_ReqHoghoghiDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_ReqHoghoghi", ReplyAction="http://tempuri.org/PMOService/GetDeliver_ReqHoghoghiResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_ReqHoghoghi(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_ReqHoghoghi'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_ReqHoghoghi'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_ReqHoghoghi' operation.</returns>
            QueryResult<Deliver_ReqHoghoghi> EndGetDeliver_ReqHoghoghi(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_ReqStu' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_ReqStuDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_ReqStu", ReplyAction="http://tempuri.org/PMOService/GetDeliver_ReqStuResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_ReqStu(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_ReqStu'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_ReqStu'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_ReqStu' operation.</returns>
            QueryResult<Deliver_ReqStu> EndGetDeliver_ReqStu(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDeliver_ReqStuDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDeliver_ReqStuDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDeliver_ReqStuDetail", ReplyAction="http://tempuri.org/PMOService/GetDeliver_ReqStuDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetDeliver_ReqStuDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDeliver_ReqStuDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDeliver_ReqStuDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDeliver_ReqStuDetail' operation.</returns>
            QueryResult<Deliver_ReqStuDetail> EndGetDeliver_ReqStuDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFile' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFileDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFile", ReplyAction="http://tempuri.org/PMOService/GetDocFileResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFile(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFile'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFile'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFile' operation.</returns>
            QueryResult<DocFile> EndGetDocFile(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFilesBy' operation.
            /// </summary>
            /// <param name="username">The value for the 'username' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFilesByDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFilesBy", ReplyAction="http://tempuri.org/PMOService/GetDocFilesByResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFilesBy(string username, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFilesBy'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFilesBy'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFilesBy' operation.</returns>
            QueryResult<DocFile> EndGetDocFilesBy(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFilesFor' operation.
            /// </summary>
            /// <param name="subjectId">The value for the 'subjectId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFilesForDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFilesFor", ReplyAction="http://tempuri.org/PMOService/GetDocFilesForResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFilesFor(int subjectId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFilesFor'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFilesFor'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFilesFor' operation.</returns>
            QueryResult<DocFile> EndGetDocFilesFor(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFilesUnaccepted' operation.
            /// </summary>
            /// <param name="userId">The value for the 'userId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFilesUnacceptedDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFilesUnaccepted", ReplyAction="http://tempuri.org/PMOService/GetDocFilesUnacceptedResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFilesUnaccepted(int userId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFilesUnaccepted'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFilesUnaccepted'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFilesUnaccepted' operation.</returns>
            QueryResult<DocFile> EndGetDocFilesUnaccepted(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFileUserLog' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFileUserLogDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFileUserLog", ReplyAction="http://tempuri.org/PMOService/GetDocFileUserLogResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFileUserLog(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFileUserLog'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFileUserLog'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFileUserLog' operation.</returns>
            QueryResult<DocFileUserLog> EndGetDocFileUserLog(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFileUserLogBy' operation.
            /// </summary>
            /// <param name="userId">The value for the 'userId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFileUserLogByDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFileUserLogBy", ReplyAction="http://tempuri.org/PMOService/GetDocFileUserLogByResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFileUserLogBy(int userId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFileUserLogBy'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFileUserLogBy'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFileUserLogBy' operation.</returns>
            QueryResult<DocFileUserLog> EndGetDocFileUserLogBy(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFileUserLogFor' operation.
            /// </summary>
            /// <param name="fileId">The value for the 'fileId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFileUserLogForDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFileUserLogFor", ReplyAction="http://tempuri.org/PMOService/GetDocFileUserLogForResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocFileUserLogFor(int fileId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFileUserLogFor'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFileUserLogFor'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocFileUserLogFor' operation.</returns>
            QueryResult<DocFileUserLog> EndGetDocFileUserLogFor(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocFileWithMaxId' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocFileWithMaxIdDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocFileWithMaxId", ReplyAction="http://tempuri.org/PMOService/GetDocFileWithMaxIdResponse")]
            IAsyncResult BeginGetDocFileWithMaxId(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocFileWithMaxId'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocFileWithMaxId'.</param>
            /// <returns>The 'Int32' returned from the 'GetDocFileWithMaxId' operation.</returns>
            int EndGetDocFileWithMaxId(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocKeyWord' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocKeyWordDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocKeyWord", ReplyAction="http://tempuri.org/PMOService/GetDocKeyWordResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocKeyWord(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocKeyWord'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocKeyWord'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocKeyWord' operation.</returns>
            QueryResult<DocKeyWord> EndGetDocKeyWord(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocLocationTree' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocLocationTreeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocLocationTree", ReplyAction="http://tempuri.org/PMOService/GetDocLocationTreeResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocLocationTree(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocLocationTree'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocLocationTree'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocLocationTree' operation.</returns>
            QueryResult<DocLocationTree> EndGetDocLocationTree(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocLocationType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocLocationTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocLocationType", ReplyAction="http://tempuri.org/PMOService/GetDocLocationTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocLocationType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocLocationType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocLocationType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocLocationType' operation.</returns>
            QueryResult<DocLocationType> EndGetDocLocationType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocSubjectLocationFilter' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocSubjectLocationFilterDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocSubjectLocationFilter", ReplyAction="http://tempuri.org/PMOService/GetDocSubjectLocationFilterResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocSubjectLocationFilter(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocSubjectLocationFilter'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocSubjectLocationFilter'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocSubjectLocationFilter' operation.</returns>
            QueryResult<DocSubjectLocationFilter> EndGetDocSubjectLocationFilter(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocSubjectTree' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocSubjectTreeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocSubjectTree", ReplyAction="http://tempuri.org/PMOService/GetDocSubjectTreeResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocSubjectTree(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocSubjectTree'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocSubjectTree'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocSubjectTree' operation.</returns>
            QueryResult<DocSubjectTree> EndGetDocSubjectTree(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocSubjectUserFilter' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocSubjectUserFilterDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocSubjectUserFilter", ReplyAction="http://tempuri.org/PMOService/GetDocSubjectUserFilterResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocSubjectUserFilter(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocSubjectUserFilter'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocSubjectUserFilter'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocSubjectUserFilter' operation.</returns>
            QueryResult<DocSubjectUserFilter> EndGetDocSubjectUserFilter(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocSubjectWithMaxId' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocSubjectWithMaxIdDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocSubjectWithMaxId", ReplyAction="http://tempuri.org/PMOService/GetDocSubjectWithMaxIdResponse")]
            IAsyncResult BeginGetDocSubjectWithMaxId(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocSubjectWithMaxId'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocSubjectWithMaxId'.</param>
            /// <returns>The 'Int32' returned from the 'GetDocSubjectWithMaxId' operation.</returns>
            int EndGetDocSubjectWithMaxId(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocTitleTree' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocTitleTreeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocTitleTree", ReplyAction="http://tempuri.org/PMOService/GetDocTitleTreeResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocTitleTree(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocTitleTree'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocTitleTree'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocTitleTree' operation.</returns>
            QueryResult<DocTitleTree> EndGetDocTitleTree(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocTitleUserFilter' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocTitleUserFilterDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocTitleUserFilter", ReplyAction="http://tempuri.org/PMOService/GetDocTitleUserFilterResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocTitleUserFilter(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocTitleUserFilter'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocTitleUserFilter'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocTitleUserFilter' operation.</returns>
            QueryResult<DocTitleUserFilter> EndGetDocTitleUserFilter(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocTitleWithMaxId' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocTitleWithMaxIdDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocTitleWithMaxId", ReplyAction="http://tempuri.org/PMOService/GetDocTitleWithMaxIdResponse")]
            IAsyncResult BeginGetDocTitleWithMaxId(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocTitleWithMaxId'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocTitleWithMaxId'.</param>
            /// <returns>The 'Int32' returned from the 'GetDocTitleWithMaxId' operation.</returns>
            int EndGetDocTitleWithMaxId(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDocTree' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetDocTreeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetDocTree", ReplyAction="http://tempuri.org/PMOService/GetDocTreeResponse")]
            [WebGet()]
            IAsyncResult BeginGetDocTree(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDocTree'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDocTree'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDocTree' operation.</returns>
            QueryResult<DocTree> EndGetDocTree(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetEmployeesInfo' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetEmployeesInfoDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetEmployeesInfo", ReplyAction="http://tempuri.org/PMOService/GetEmployeesInfoResponse")]
            [WebGet()]
            IAsyncResult BeginGetEmployeesInfo(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetEmployeesInfo'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetEmployeesInfo'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetEmployeesInfo' operation.</returns>
            QueryResult<EmployeesInfo> EndGetEmployeesInfo(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetEskelehStrucType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetEskelehStrucTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetEskelehStrucType", ReplyAction="http://tempuri.org/PMOService/GetEskelehStrucTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetEskelehStrucType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetEskelehStrucType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetEskelehStrucType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetEskelehStrucType' operation.</returns>
            QueryResult<EskelehStrucType> EndGetEskelehStrucType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Attach' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_AttachDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Attach", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_AttachResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Attach(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Attach'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Attach'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Attach' operation.</returns>
            QueryResult<ICOPMAS_Attach> EndGetICOPMAS_Attach(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Keyword' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_KeywordDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Keyword", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_KeywordResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Keyword(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Keyword'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Keyword'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Keyword' operation.</returns>
            QueryResult<ICOPMAS_Keyword> EndGetICOPMAS_Keyword(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Season' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_SeasonDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Season", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_SeasonResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Season(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Season'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Season'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Season' operation.</returns>
            QueryResult<ICOPMAS_Season> EndGetICOPMAS_Season(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Spec' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_SpecDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Spec", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_SpecResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Spec(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Spec'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Spec'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Spec' operation.</returns>
            QueryResult<ICOPMAS_Spec> EndGetICOPMAS_Spec(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Type' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_TypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Type", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_TypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Type(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Type'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Type'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Type' operation.</returns>
            QueryResult<ICOPMAS_Type> EndGetICOPMAS_Type(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetICOPMAS_Writer' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetICOPMAS_WriterDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetICOPMAS_Writer", ReplyAction="http://tempuri.org/PMOService/GetICOPMAS_WriterResponse")]
            [WebGet()]
            IAsyncResult BeginGetICOPMAS_Writer(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetICOPMAS_Writer'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetICOPMAS_Writer'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetICOPMAS_Writer' operation.</returns>
            QueryResult<ICOPMAS_Writer> EndGetICOPMAS_Writer(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetKeyWordList' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetKeyWordListDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetKeyWordList", ReplyAction="http://tempuri.org/PMOService/GetKeyWordListResponse")]
            [WebGet()]
            IAsyncResult BeginGetKeyWordList(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetKeyWordList'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetKeyWordList'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetKeyWordList' operation.</returns>
            QueryResult<KeyWordList> EndGetKeyWordList(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetKeywordListMaxId' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetKeywordListMaxIdDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetKeywordListMaxId", ReplyAction="http://tempuri.org/PMOService/GetKeywordListMaxIdResponse")]
            IAsyncResult BeginGetKeywordListMaxId(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetKeywordListMaxId'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetKeywordListMaxId'.</param>
            /// <returns>The 'Int32' returned from the 'GetKeywordListMaxId' operation.</returns>
            int EndGetKeywordListMaxId(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetLatestDocFiles' operation.
            /// </summary>
            /// <param name="count">The value for the 'count' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetLatestDocFilesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetLatestDocFiles", ReplyAction="http://tempuri.org/PMOService/GetLatestDocFilesResponse")]
            [WebGet()]
            IAsyncResult BeginGetLatestDocFiles(int count, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetLatestDocFiles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetLatestDocFiles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetLatestDocFiles' operation.</returns>
            QueryResult<DocFile> EndGetLatestDocFiles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetLog_UserAction' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetLog_UserActionDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetLog_UserAction", ReplyAction="http://tempuri.org/PMOService/GetLog_UserActionResponse")]
            [WebGet()]
            IAsyncResult BeginGetLog_UserAction(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetLog_UserAction'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetLog_UserAction'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetLog_UserAction' operation.</returns>
            QueryResult<Log_UserAction> EndGetLog_UserAction(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetLog_UserInOut' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetLog_UserInOutDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetLog_UserInOut", ReplyAction="http://tempuri.org/PMOService/GetLog_UserInOutResponse")]
            [WebGet()]
            IAsyncResult BeginGetLog_UserInOut(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetLog_UserInOut'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetLog_UserInOut'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetLog_UserInOut' operation.</returns>
            QueryResult<Log_UserInOut> EndGetLog_UserInOut(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMemberships' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMembershipsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMemberships", ReplyAction="http://tempuri.org/PMOService/GetMembershipsResponse")]
            [WebGet()]
            IAsyncResult BeginGetMemberships(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMemberships'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMemberships'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMemberships' operation.</returns>
            QueryResult<Memberships> EndGetMemberships(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_Attach' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_AttachDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_Attach", ReplyAction="http://tempuri.org/PMOService/GetMojavez_AttachResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_Attach(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_Attach'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_Attach'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_Attach' operation.</returns>
            QueryResult<Mojavez_Attach> EndGetMojavez_Attach(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_Attach_Files' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_Attach_FilesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_Attach_Files", ReplyAction="http://tempuri.org/PMOService/GetMojavez_Attach_FilesResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_Attach_Files(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_Attach_Files'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_Attach_Files'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_Attach_Files' operation.</returns>
            QueryResult<Mojavez_Attach_Files> EndGetMojavez_Attach_Files(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_DocType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_DocTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_DocType", ReplyAction="http://tempuri.org/PMOService/GetMojavez_DocTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_DocType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_DocType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_DocType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_DocType' operation.</returns>
            QueryResult<Mojavez_DocType> EndGetMojavez_DocType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_DocTypeRelation' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_DocTypeRelationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_DocTypeRelation", ReplyAction="http://tempuri.org/PMOService/GetMojavez_DocTypeRelationResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_DocTypeRelation(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_DocTypeRelation'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_DocTypeRelation'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_DocTypeRelation' operation.</returns>
            QueryResult<Mojavez_DocTypeRelation> EndGetMojavez_DocTypeRelation(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_PlanDoc' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_PlanDocDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_PlanDoc", ReplyAction="http://tempuri.org/PMOService/GetMojavez_PlanDocResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_PlanDoc(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_PlanDoc'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_PlanDoc'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_PlanDoc' operation.</returns>
            QueryResult<Mojavez_PlanDoc> EndGetMojavez_PlanDoc(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_PlanSpec' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_PlanSpecDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_PlanSpec", ReplyAction="http://tempuri.org/PMOService/GetMojavez_PlanSpecResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_PlanSpec(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_PlanSpec'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_PlanSpec'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_PlanSpec' operation.</returns>
            QueryResult<Mojavez_PlanSpec> EndGetMojavez_PlanSpec(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_RequestType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_RequestTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_RequestType", ReplyAction="http://tempuri.org/PMOService/GetMojavez_RequestTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_RequestType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_RequestType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_RequestType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_RequestType' operation.</returns>
            QueryResult<Mojavez_RequestType> EndGetMojavez_RequestType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojavez_UsageType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojavez_UsageTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojavez_UsageType", ReplyAction="http://tempuri.org/PMOService/GetMojavez_UsageTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojavez_UsageType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojavez_UsageType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojavez_UsageType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojavez_UsageType' operation.</returns>
            QueryResult<Mojavez_UsageType> EndGetMojavez_UsageType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMojshekanStrucType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetMojshekanStrucTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetMojshekanStrucType", ReplyAction="http://tempuri.org/PMOService/GetMojshekanStrucTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetMojshekanStrucType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMojshekanStrucType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMojshekanStrucType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMojshekanStrucType' operation.</returns>
            QueryResult<MojshekanStrucType> EndGetMojshekanStrucType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetOrganizations' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetOrganizationsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetOrganizations", ReplyAction="http://tempuri.org/PMOService/GetOrganizationsResponse")]
            [WebGet()]
            IAsyncResult BeginGetOrganizations(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetOrganizations'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetOrganizations'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetOrganizations' operation.</returns>
            QueryResult<Organizations> EndGetOrganizations(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetOstan' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetOstanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetOstan", ReplyAction="http://tempuri.org/PMOService/GetOstanResponse")]
            [WebGet()]
            IAsyncResult BeginGetOstan(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetOstan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetOstan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetOstan' operation.</returns>
            QueryResult<Ostan> EndGetOstan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetParamDefinition' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetParamDefinitionDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetParamDefinition", ReplyAction="http://tempuri.org/PMOService/GetParamDefinitionResponse")]
            [WebGet()]
            IAsyncResult BeginGetParamDefinition(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetParamDefinition'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetParamDefinition'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetParamDefinition' operation.</returns>
            QueryResult<ParamDefinition> EndGetParamDefinition(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPortEskeleh' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetPortEskelehDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetPortEskeleh", ReplyAction="http://tempuri.org/PMOService/GetPortEskelehResponse")]
            [WebGet()]
            IAsyncResult BeginGetPortEskeleh(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPortEskeleh'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPortEskeleh'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPortEskeleh' operation.</returns>
            QueryResult<PortEskeleh> EndGetPortEskeleh(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPortInfo' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetPortInfoDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetPortInfo", ReplyAction="http://tempuri.org/PMOService/GetPortInfoResponse")]
            [WebGet()]
            IAsyncResult BeginGetPortInfo(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPortInfo'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPortInfo'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPortInfo' operation.</returns>
            QueryResult<PortInfo> EndGetPortInfo(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPortMojshekan' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetPortMojshekanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetPortMojshekan", ReplyAction="http://tempuri.org/PMOService/GetPortMojshekanResponse")]
            [WebGet()]
            IAsyncResult BeginGetPortMojshekan(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPortMojshekan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPortMojshekan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPortMojshekan' operation.</returns>
            QueryResult<PortMojshekan> EndGetPortMojshekan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPortSpec' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetPortSpecDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetPortSpec", ReplyAction="http://tempuri.org/PMOService/GetPortSpecResponse")]
            [WebGet()]
            IAsyncResult BeginGetPortSpec(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPortSpec'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPortSpec'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPortSpec' operation.</returns>
            QueryResult<PortSpec> EndGetPortSpec(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPortStructure' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetPortStructureDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetPortStructure", ReplyAction="http://tempuri.org/PMOService/GetPortStructureResponse")]
            [WebGet()]
            IAsyncResult BeginGetPortStructure(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPortStructure'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPortStructure'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPortStructure' operation.</returns>
            QueryResult<PortStructure> EndGetPortStructure(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetProfiles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetProfilesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetProfiles", ReplyAction="http://tempuri.org/PMOService/GetProfilesResponse")]
            [WebGet()]
            IAsyncResult BeginGetProfiles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetProfiles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetProfiles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetProfiles' operation.</returns>
            QueryResult<Profiles> EndGetProfiles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetProjects' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetProjectsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetProjects", ReplyAction="http://tempuri.org/PMOService/GetProjectsResponse")]
            [WebGet()]
            IAsyncResult BeginGetProjects(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetProjects'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetProjects'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetProjects' operation.</returns>
            QueryResult<Projects> EndGetProjects(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetRoadType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetRoadTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetRoadType", ReplyAction="http://tempuri.org/PMOService/GetRoadTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetRoadType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetRoadType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetRoadType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetRoadType' operation.</returns>
            QueryResult<RoadType> EndGetRoadType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSearchResult' operation.
            /// </summary>
            /// <param name="criteria">The value for the 'criteria' parameter of this action.</param>
            /// <param name="keyword">The value for the 'keyword' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetSearchResultDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetSearchResult", ReplyAction="http://tempuri.org/PMOService/GetSearchResultResponse")]
            [WebGet()]
            IAsyncResult BeginGetSearchResult(string criteria, string keyword, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSearchResult'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSearchResult'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSearchResult' operation.</returns>
            QueryResult<vwLinkDocs> EndGetSearchResult(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetShahrestan' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetShahrestanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetShahrestan", ReplyAction="http://tempuri.org/PMOService/GetShahrestanResponse")]
            [WebGet()]
            IAsyncResult BeginGetShahrestan(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetShahrestan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetShahrestan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetShahrestan' operation.</returns>
            QueryResult<Shahrestan> EndGetShahrestan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSpatialServices' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetSpatialServicesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetSpatialServices", ReplyAction="http://tempuri.org/PMOService/GetSpatialServicesResponse")]
            [WebGet()]
            IAsyncResult BeginGetSpatialServices(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSpatialServices'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSpatialServices'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSpatialServices' operation.</returns>
            QueryResult<SpatialServices> EndGetSpatialServices(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSubjectLink' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetSubjectLinkDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetSubjectLink", ReplyAction="http://tempuri.org/PMOService/GetSubjectLinkResponse")]
            [WebGet()]
            IAsyncResult BeginGetSubjectLink(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSubjectLink'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSubjectLink'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSubjectLink' operation.</returns>
            QueryResult<SubjectLink> EndGetSubjectLink(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSubjectsFor' operation.
            /// </summary>
            /// <param name="userId">The value for the 'userId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetSubjectsForDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetSubjectsFor", ReplyAction="http://tempuri.org/PMOService/GetSubjectsForResponse")]
            [WebGet()]
            IAsyncResult BeginGetSubjectsFor(int userId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSubjectsFor'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSubjectsFor'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSubjectsFor' operation.</returns>
            QueryResult<DocSubjectUserFilter> EndGetSubjectsFor(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GettblAdminUsers' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GettblAdminUsersDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GettblAdminUsers", ReplyAction="http://tempuri.org/PMOService/GettblAdminUsersResponse")]
            [WebGet()]
            IAsyncResult BeginGettblAdminUsers(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGettblAdminUsers'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGettblAdminUsers'.</param>
            /// <returns>The 'QueryResult' returned from the 'GettblAdminUsers' operation.</returns>
            QueryResult<tblAdminUsers> EndGettblAdminUsers(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblDataType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblDataTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblDataType", ReplyAction="http://tempuri.org/PMOService/GetTblDataTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblDataType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblDataType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblDataType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblDataType' operation.</returns>
            QueryResult<tblDataType> EndGetTblDataType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblInfoType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblInfoTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblInfoType", ReplyAction="http://tempuri.org/PMOService/GetTblInfoTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblInfoType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblInfoType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblInfoType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblInfoType' operation.</returns>
            QueryResult<tblInfoType> EndGetTblInfoType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblMission' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblMissionDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblMission", ReplyAction="http://tempuri.org/PMOService/GetTblMissionResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblMission(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblMission'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblMission'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblMission' operation.</returns>
            QueryResult<tblMission> EndGetTblMission(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblOstan' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblOstanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblOstan", ReplyAction="http://tempuri.org/PMOService/GetTblOstanResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblOstan(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblOstan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblOstan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblOstan' operation.</returns>
            QueryResult<tblOstan> EndGetTblOstan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblPorts' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblPortsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblPorts", ReplyAction="http://tempuri.org/PMOService/GetTblPortsResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblPorts(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblPorts'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblPorts'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblPorts' operation.</returns>
            QueryResult<tblPorts> EndGetTblPorts(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblProjectMap' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblProjectMapDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblProjectMap", ReplyAction="http://tempuri.org/PMOService/GetTblProjectMapResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblProjectMap(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblProjectMap'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblProjectMap'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblProjectMap' operation.</returns>
            QueryResult<tblProjectMap> EndGetTblProjectMap(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblUsers' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblUsersDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblUsers", ReplyAction="http://tempuri.org/PMOService/GetTblUsersResponse")]
            [WebGet()]
            IAsyncResult BeginGetTblUsers(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblUsers'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblUsers'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTblUsers' operation.</returns>
            QueryResult<tblUsers> EndGetTblUsers(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTblUsersMaxId' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTblUsersMaxIdDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTblUsersMaxId", ReplyAction="http://tempuri.org/PMOService/GetTblUsersMaxIdResponse")]
            IAsyncResult BeginGetTblUsersMaxId(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTblUsersMaxId'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTblUsersMaxId'.</param>
            /// <returns>The 'Int32' returned from the 'GetTblUsersMaxId' operation.</returns>
            int EndGetTblUsersMaxId(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTitleLocation' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTitleLocationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTitleLocation", ReplyAction="http://tempuri.org/PMOService/GetTitleLocationResponse")]
            [WebGet()]
            IAsyncResult BeginGetTitleLocation(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTitleLocation'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTitleLocation'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTitleLocation' operation.</returns>
            QueryResult<TitleLocation> EndGetTitleLocation(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTitlesFor' operation.
            /// </summary>
            /// <param name="userId">The value for the 'userId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTitlesForDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTitlesFor", ReplyAction="http://tempuri.org/PMOService/GetTitlesForResponse")]
            [WebGet()]
            IAsyncResult BeginGetTitlesFor(int userId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTitlesFor'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTitlesFor'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTitlesFor' operation.</returns>
            QueryResult<DocTitleUserFilter> EndGetTitlesFor(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTitleSpec' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTitleSpecDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTitleSpec", ReplyAction="http://tempuri.org/PMOService/GetTitleSpecResponse")]
            [WebGet()]
            IAsyncResult BeginGetTitleSpec(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTitleSpec'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTitleSpec'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTitleSpec' operation.</returns>
            QueryResult<TitleSpec> EndGetTitleSpec(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTreeLayer' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetTreeLayerDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetTreeLayer", ReplyAction="http://tempuri.org/PMOService/GetTreeLayerResponse")]
            [WebGet()]
            IAsyncResult BeginGetTreeLayer(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTreeLayer'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTreeLayer'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTreeLayer' operation.</returns>
            QueryResult<TreeLayer> EndGetTreeLayer(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserAccess' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetUserAccessDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetUserAccess", ReplyAction="http://tempuri.org/PMOService/GetUserAccessResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserAccess(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserAccess'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserAccess'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserAccess' operation.</returns>
            QueryResult<UserAccess> EndGetUserAccess(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserLogs' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetUserLogsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetUserLogs", ReplyAction="http://tempuri.org/PMOService/GetUserLogsResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserLogs(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserLogs'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserLogs'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserLogs' operation.</returns>
            QueryResult<UserLogs> EndGetUserLogs(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUsersInRoles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetUsersInRolesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetUsersInRoles", ReplyAction="http://tempuri.org/PMOService/GetUsersInRolesResponse")]
            [WebGet()]
            IAsyncResult BeginGetUsersInRoles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUsersInRoles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUsersInRoles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUsersInRoles' operation.</returns>
            QueryResult<UsersInRoles> EndGetUsersInRoles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetUserTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetUserType", ReplyAction="http://tempuri.org/PMOService/GetUserTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserType' operation.</returns>
            QueryResult<UserType> EndGetUserType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVport' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVportDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVport", ReplyAction="http://tempuri.org/PMOService/GetVportResponse")]
            [WebGet()]
            IAsyncResult BeginGetVport(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVport'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVport'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVport' operation.</returns>
            QueryResult<vport> EndGetVport(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwAllPlan' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwAllPlanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwAllPlan", ReplyAction="http://tempuri.org/PMOService/GetVwAllPlanResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwAllPlan(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwAllPlan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwAllPlan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwAllPlan' operation.</returns>
            QueryResult<vwAllPlan> EndGetVwAllPlan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwDocFileList' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwDocFileListDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwDocFileList", ReplyAction="http://tempuri.org/PMOService/GetVwDocFileListResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwDocFileList(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwDocFileList'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwDocFileList'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwDocFileList' operation.</returns>
            QueryResult<vwDocFileList> EndGetVwDocFileList(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwFileList' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwFileListDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwFileList", ReplyAction="http://tempuri.org/PMOService/GetVwFileListResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwFileList(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwFileList'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwFileList'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwFileList' operation.</returns>
            QueryResult<vwFileList> EndGetVwFileList(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwIcopmasReport' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwIcopmasReportDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwIcopmasReport", ReplyAction="http://tempuri.org/PMOService/GetVwIcopmasReportResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwIcopmasReport(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwIcopmasReport'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwIcopmasReport'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwIcopmasReport' operation.</returns>
            QueryResult<vwIcopmasReport> EndGetVwIcopmasReport(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwLinkDocs' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwLinkDocsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwLinkDocs", ReplyAction="http://tempuri.org/PMOService/GetVwLinkDocsResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwLinkDocs(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwLinkDocs'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwLinkDocs'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwLinkDocs' operation.</returns>
            QueryResult<vwLinkDocs> EndGetVwLinkDocs(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwMojavez_Attach' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwMojavez_AttachDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwMojavez_Attach", ReplyAction="http://tempuri.org/PMOService/GetVwMojavez_AttachResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwMojavez_Attach(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwMojavez_Attach'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwMojavez_Attach'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwMojavez_Attach' operation.</returns>
            QueryResult<vwMojavez_Attach> EndGetVwMojavez_Attach(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwMojavezReport' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwMojavezReportDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwMojavezReport", ReplyAction="http://tempuri.org/PMOService/GetVwMojavezReportResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwMojavezReport(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwMojavezReport'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwMojavezReport'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwMojavezReport' operation.</returns>
            QueryResult<vwMojavezReport> EndGetVwMojavezReport(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwPlanReport' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwPlanReportDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwPlanReport", ReplyAction="http://tempuri.org/PMOService/GetVwPlanReportResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwPlanReport(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwPlanReport'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwPlanReport'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwPlanReport' operation.</returns>
            QueryResult<vwPlanReport> EndGetVwPlanReport(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetVwUsageType' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetVwUsageTypeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetVwUsageType", ReplyAction="http://tempuri.org/PMOService/GetVwUsageTypeResponse")]
            [WebGet()]
            IAsyncResult BeginGetVwUsageType(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetVwUsageType'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetVwUsageType'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetVwUsageType' operation.</returns>
            QueryResult<vwUsageType> EndGetVwUsageType(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetZone' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/GetZoneDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/GetZone", ReplyAction="http://tempuri.org/PMOService/GetZoneResponse")]
            [WebGet()]
            IAsyncResult BeginGetZone(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetZone'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetZone'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetZone' operation.</returns>
            QueryResult<Zone> EndGetZone(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SaveDocSubjectTree' operation.
            /// </summary>
            /// <param name="docSubjectTree">The value for the 'docSubjectTree' parameter of this action.</param>
            /// <param name="ostanId">The value for the 'ostanId' parameter of this action.</param>
            /// <param name="tblDataTypeId">The value for the 'tblDataTypeId' parameter of this action.</param>
            /// <param name="tblInfoTypeId">The value for the 'tblInfoTypeId' parameter of this action.</param>
            /// <param name="tblPortsId">The value for the 'tblPortsId' parameter of this action.</param>
            /// <param name="zoneId">The value for the 'zoneId' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/SaveDocSubjectTreeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/SaveDocSubjectTree", ReplyAction="http://tempuri.org/PMOService/SaveDocSubjectTreeResponse")]
            IAsyncResult BeginSaveDocSubjectTree(string docSubjectTree, IEnumerable<int> ostanId, IEnumerable<int> tblDataTypeId, IEnumerable<int> tblInfoTypeId, IEnumerable<int> tblPortsId, IEnumerable<int> zoneId, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSaveDocSubjectTree'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSaveDocSubjectTree'.</param>
            void EndSaveDocSubjectTree(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/PMOService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/PMOService/SubmitChanges", ReplyAction="http://tempuri.org/PMOService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class PMOContextEntityContainer : EntityContainer
        {
            
            public PMOContextEntityContainer()
            {
                this.CreateEntitySet<Applications>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_DelHgDetail>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_DelHoghooghi>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_DelStu>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_DelStuDetail>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_ReqHgDetail>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_ReqHoghoghi>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_ReqStu>(EntitySetOperations.All);
                this.CreateEntitySet<Deliver_ReqStuDetail>(EntitySetOperations.All);
                this.CreateEntitySet<DocFile>(EntitySetOperations.All);
                this.CreateEntitySet<DocFileUserLog>(EntitySetOperations.All);
                this.CreateEntitySet<DocKeyWord>(EntitySetOperations.All);
                this.CreateEntitySet<DocLocationTree>(EntitySetOperations.All);
                this.CreateEntitySet<DocLocationType>(EntitySetOperations.All);
                this.CreateEntitySet<DocSubjectLocationFilter>(EntitySetOperations.All);
                this.CreateEntitySet<DocSubjectTree>(EntitySetOperations.All);
                this.CreateEntitySet<DocSubjectUserFilter>(EntitySetOperations.All);
                this.CreateEntitySet<DocTitleTree>(EntitySetOperations.All);
                this.CreateEntitySet<DocTitleUserFilter>(EntitySetOperations.All);
                this.CreateEntitySet<DocTree>(EntitySetOperations.All);
                this.CreateEntitySet<EmployeesInfo>(EntitySetOperations.All);
                this.CreateEntitySet<EskelehStrucType>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Attach>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Keyword>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Season>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Spec>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Type>(EntitySetOperations.All);
                this.CreateEntitySet<ICOPMAS_Writer>(EntitySetOperations.All);
                this.CreateEntitySet<KeyWordList>(EntitySetOperations.All);
                this.CreateEntitySet<Log_UserAction>(EntitySetOperations.All);
                this.CreateEntitySet<Log_UserInOut>(EntitySetOperations.All);
                this.CreateEntitySet<Memberships>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_Attach>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_Attach_Files>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_DocType>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_DocTypeRelation>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_PlanDoc>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_PlanSpec>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_RequestType>(EntitySetOperations.All);
                this.CreateEntitySet<Mojavez_UsageType>(EntitySetOperations.All);
                this.CreateEntitySet<MojshekanStrucType>(EntitySetOperations.All);
                this.CreateEntitySet<Organizations>(EntitySetOperations.All);
                this.CreateEntitySet<Ostan>(EntitySetOperations.All);
                this.CreateEntitySet<ParamDefinition>(EntitySetOperations.All);
                this.CreateEntitySet<PortEskeleh>(EntitySetOperations.All);
                this.CreateEntitySet<PortInfo>(EntitySetOperations.All);
                this.CreateEntitySet<PortMojshekan>(EntitySetOperations.All);
                this.CreateEntitySet<PortSpec>(EntitySetOperations.All);
                this.CreateEntitySet<PortStructure>(EntitySetOperations.All);
                this.CreateEntitySet<Profiles>(EntitySetOperations.All);
                this.CreateEntitySet<Projects>(EntitySetOperations.All);
                this.CreateEntitySet<RoadType>(EntitySetOperations.All);
                this.CreateEntitySet<Shahrestan>(EntitySetOperations.All);
                this.CreateEntitySet<SpatialServices>(EntitySetOperations.All);
                this.CreateEntitySet<SubjectLink>(EntitySetOperations.All);
                this.CreateEntitySet<tblAdminUsers>(EntitySetOperations.None);
                this.CreateEntitySet<tblDataType>(EntitySetOperations.All);
                this.CreateEntitySet<tblInfoType>(EntitySetOperations.All);
                this.CreateEntitySet<tblMission>(EntitySetOperations.All);
                this.CreateEntitySet<tblOstan>(EntitySetOperations.All);
                this.CreateEntitySet<tblPorts>(EntitySetOperations.All);
                this.CreateEntitySet<tblProjectMap>(EntitySetOperations.All);
                this.CreateEntitySet<tblUsers>(EntitySetOperations.All);
                this.CreateEntitySet<TitleLocation>(EntitySetOperations.All);
                this.CreateEntitySet<TitleSpec>(EntitySetOperations.All);
                this.CreateEntitySet<TreeLayer>(EntitySetOperations.All);
                this.CreateEntitySet<UserAccess>(EntitySetOperations.All);
                this.CreateEntitySet<UserLogs>(EntitySetOperations.All);
                this.CreateEntitySet<UsersInRoles>(EntitySetOperations.All);
                this.CreateEntitySet<UserType>(EntitySetOperations.All);
                this.CreateEntitySet<vport>(EntitySetOperations.All);
                this.CreateEntitySet<vwAllPlan>(EntitySetOperations.All);
                this.CreateEntitySet<vwDocFileList>(EntitySetOperations.All);
                this.CreateEntitySet<vwFileList>(EntitySetOperations.All);
                this.CreateEntitySet<vwIcopmasReport>(EntitySetOperations.All);
                this.CreateEntitySet<vwLinkDocs>(EntitySetOperations.All);
                this.CreateEntitySet<vwMojavez_Attach>(EntitySetOperations.All);
                this.CreateEntitySet<vwMojavezReport>(EntitySetOperations.All);
                this.CreateEntitySet<vwPlanReport>(EntitySetOperations.All);
                this.CreateEntitySet<vwUsageType>(EntitySetOperations.All);
                this.CreateEntitySet<Zone>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'PortEskeleh' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PortEskeleh : Entity
    {
        
        private Nullable<int> _bolardCount;
        
        private Nullable<double> _capacity;
        
        private Nullable<double> _depth;
        
        private int _eskelehID;
        
        private string _eskelehNo;
        
        private Nullable<int> _fenderCount;
        
        private Nullable<double> _len;
        
        private int _portID;
        
        private Nullable<int> _structureTypeID;
        
        private string _useType;
        
        private Nullable<double> _width;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBolardCountChanging(Nullable<int> value);
        partial void OnBolardCountChanged();
        partial void OnCapacityChanging(Nullable<double> value);
        partial void OnCapacityChanged();
        partial void OnDepthChanging(Nullable<double> value);
        partial void OnDepthChanged();
        partial void OnEskelehIDChanging(int value);
        partial void OnEskelehIDChanged();
        partial void OnEskelehNoChanging(string value);
        partial void OnEskelehNoChanged();
        partial void OnFenderCountChanging(Nullable<int> value);
        partial void OnFenderCountChanged();
        partial void OnLenChanging(Nullable<double> value);
        partial void OnLenChanged();
        partial void OnPortIDChanging(int value);
        partial void OnPortIDChanged();
        partial void OnStructureTypeIDChanging(Nullable<int> value);
        partial void OnStructureTypeIDChanged();
        partial void OnUseTypeChanging(string value);
        partial void OnUseTypeChanged();
        partial void OnWidthChanging(Nullable<double> value);
        partial void OnWidthChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PortEskeleh"/> class.
        /// </summary>
        public PortEskeleh()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BolardCount' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> BolardCount
        {
            get
            {
                return this._bolardCount;
            }
            set
            {
                if ((this._bolardCount != value))
                {
                    this.OnBolardCountChanging(value);
                    this.RaiseDataMemberChanging("BolardCount");
                    this.ValidateProperty("BolardCount", value);
                    this._bolardCount = value;
                    this.RaiseDataMemberChanged("BolardCount");
                    this.OnBolardCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Capacity' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Capacity
        {
            get
            {
                return this._capacity;
            }
            set
            {
                if ((this._capacity != value))
                {
                    this.OnCapacityChanging(value);
                    this.RaiseDataMemberChanging("Capacity");
                    this.ValidateProperty("Capacity", value);
                    this._capacity = value;
                    this.RaiseDataMemberChanged("Capacity");
                    this.OnCapacityChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Depth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Depth
        {
            get
            {
                return this._depth;
            }
            set
            {
                if ((this._depth != value))
                {
                    this.OnDepthChanging(value);
                    this.RaiseDataMemberChanging("Depth");
                    this.ValidateProperty("Depth", value);
                    this._depth = value;
                    this.RaiseDataMemberChanged("Depth");
                    this.OnDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int EskelehID
        {
            get
            {
                return this._eskelehID;
            }
            set
            {
                if ((this._eskelehID != value))
                {
                    this.OnEskelehIDChanging(value);
                    this.ValidateProperty("EskelehID", value);
                    this._eskelehID = value;
                    this.RaisePropertyChanged("EskelehID");
                    this.OnEskelehIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskelehNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string EskelehNo
        {
            get
            {
                return this._eskelehNo;
            }
            set
            {
                if ((this._eskelehNo != value))
                {
                    this.OnEskelehNoChanging(value);
                    this.RaiseDataMemberChanging("EskelehNo");
                    this.ValidateProperty("EskelehNo", value);
                    this._eskelehNo = value;
                    this.RaiseDataMemberChanged("EskelehNo");
                    this.OnEskelehNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FenderCount' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> FenderCount
        {
            get
            {
                return this._fenderCount;
            }
            set
            {
                if ((this._fenderCount != value))
                {
                    this.OnFenderCountChanging(value);
                    this.RaiseDataMemberChanging("FenderCount");
                    this.ValidateProperty("FenderCount", value);
                    this._fenderCount = value;
                    this.RaiseDataMemberChanged("FenderCount");
                    this.OnFenderCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Len' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Len
        {
            get
            {
                return this._len;
            }
            set
            {
                if ((this._len != value))
                {
                    this.OnLenChanging(value);
                    this.RaiseDataMemberChanging("Len");
                    this.ValidateProperty("Len", value);
                    this._len = value;
                    this.RaiseDataMemberChanged("Len");
                    this.OnLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaisePropertyChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StructureTypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> StructureTypeID
        {
            get
            {
                return this._structureTypeID;
            }
            set
            {
                if ((this._structureTypeID != value))
                {
                    this.OnStructureTypeIDChanging(value);
                    this.RaiseDataMemberChanging("StructureTypeID");
                    this.ValidateProperty("StructureTypeID", value);
                    this._structureTypeID = value;
                    this.RaiseDataMemberChanged("StructureTypeID");
                    this.OnStructureTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UseType' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string UseType
        {
            get
            {
                return this._useType;
            }
            set
            {
                if ((this._useType != value))
                {
                    this.OnUseTypeChanging(value);
                    this.RaiseDataMemberChanging("UseType");
                    this.ValidateProperty("UseType", value);
                    this._useType = value;
                    this.RaiseDataMemberChanged("UseType");
                    this.OnUseTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Width' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> Width
        {
            get
            {
                return this._width;
            }
            set
            {
                if ((this._width != value))
                {
                    this.OnWidthChanging(value);
                    this.RaiseDataMemberChanging("Width");
                    this.ValidateProperty("Width", value);
                    this._width = value;
                    this.RaiseDataMemberChanged("Width");
                    this.OnWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._eskelehID, this._portID);
        }
    }
    
    /// <summary>
    /// The 'PortInfo' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PortInfo : Entity
    {
        
        private Nullable<bool> _active;
        
        private string _comment;
        
        private Nullable<bool> _deactive;
        
        private Nullable<double> _e;
        
        private string _endUser;
        
        private Nullable<int> _madeYear;
        
        private Nullable<double> _n;
        
        private string _owner;
        
        private int _portID;
        
        private Nullable<int> _useTypeID;
        
        private Nullable<int> _useYear;
        
        private string _vagozari;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnActiveChanging(Nullable<bool> value);
        partial void OnActiveChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnDeactiveChanging(Nullable<bool> value);
        partial void OnDeactiveChanged();
        partial void OnEChanging(Nullable<double> value);
        partial void OnEChanged();
        partial void OnEndUserChanging(string value);
        partial void OnEndUserChanged();
        partial void OnMadeYearChanging(Nullable<int> value);
        partial void OnMadeYearChanged();
        partial void OnNChanging(Nullable<double> value);
        partial void OnNChanged();
        partial void OnOwnerChanging(string value);
        partial void OnOwnerChanged();
        partial void OnPortIDChanging(int value);
        partial void OnPortIDChanged();
        partial void OnUseTypeIDChanging(Nullable<int> value);
        partial void OnUseTypeIDChanged();
        partial void OnUseYearChanging(Nullable<int> value);
        partial void OnUseYearChanged();
        partial void OnVagozariChanging(string value);
        partial void OnVagozariChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PortInfo"/> class.
        /// </summary>
        public PortInfo()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Active' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Active
        {
            get
            {
                return this._active;
            }
            set
            {
                if ((this._active != value))
                {
                    this.OnActiveChanging(value);
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._active = value;
                    this.RaiseDataMemberChanged("Active");
                    this.OnActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Comment' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                if ((this._comment != value))
                {
                    this.OnCommentChanging(value);
                    this.RaiseDataMemberChanging("Comment");
                    this.ValidateProperty("Comment", value);
                    this._comment = value;
                    this.RaiseDataMemberChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Deactive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Deactive
        {
            get
            {
                return this._deactive;
            }
            set
            {
                if ((this._deactive != value))
                {
                    this.OnDeactiveChanging(value);
                    this.RaiseDataMemberChanging("Deactive");
                    this.ValidateProperty("Deactive", value);
                    this._deactive = value;
                    this.RaiseDataMemberChanged("Deactive");
                    this.OnDeactiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E
        {
            get
            {
                return this._e;
            }
            set
            {
                if ((this._e != value))
                {
                    this.OnEChanging(value);
                    this.RaiseDataMemberChanging("E");
                    this.ValidateProperty("E", value);
                    this._e = value;
                    this.RaiseDataMemberChanged("E");
                    this.OnEChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EndUser' value.
        /// </summary>
        [DataMember()]
        [StringLength(60)]
        public string EndUser
        {
            get
            {
                return this._endUser;
            }
            set
            {
                if ((this._endUser != value))
                {
                    this.OnEndUserChanging(value);
                    this.RaiseDataMemberChanging("EndUser");
                    this.ValidateProperty("EndUser", value);
                    this._endUser = value;
                    this.RaiseDataMemberChanged("EndUser");
                    this.OnEndUserChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MadeYear' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> MadeYear
        {
            get
            {
                return this._madeYear;
            }
            set
            {
                if ((this._madeYear != value))
                {
                    this.OnMadeYearChanging(value);
                    this.RaiseDataMemberChanging("MadeYear");
                    this.ValidateProperty("MadeYear", value);
                    this._madeYear = value;
                    this.RaiseDataMemberChanged("MadeYear");
                    this.OnMadeYearChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N
        {
            get
            {
                return this._n;
            }
            set
            {
                if ((this._n != value))
                {
                    this.OnNChanging(value);
                    this.RaiseDataMemberChanging("N");
                    this.ValidateProperty("N", value);
                    this._n = value;
                    this.RaiseDataMemberChanged("N");
                    this.OnNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Owner' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                if ((this._owner != value))
                {
                    this.OnOwnerChanging(value);
                    this.RaiseDataMemberChanging("Owner");
                    this.ValidateProperty("Owner", value);
                    this._owner = value;
                    this.RaiseDataMemberChanged("Owner");
                    this.OnOwnerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaisePropertyChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UseTypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> UseTypeID
        {
            get
            {
                return this._useTypeID;
            }
            set
            {
                if ((this._useTypeID != value))
                {
                    this.OnUseTypeIDChanging(value);
                    this.RaiseDataMemberChanging("UseTypeID");
                    this.ValidateProperty("UseTypeID", value);
                    this._useTypeID = value;
                    this.RaiseDataMemberChanged("UseTypeID");
                    this.OnUseTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UseYear' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> UseYear
        {
            get
            {
                return this._useYear;
            }
            set
            {
                if ((this._useYear != value))
                {
                    this.OnUseYearChanging(value);
                    this.RaiseDataMemberChanging("UseYear");
                    this.ValidateProperty("UseYear", value);
                    this._useYear = value;
                    this.RaiseDataMemberChanged("UseYear");
                    this.OnUseYearChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Vagozari' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Vagozari
        {
            get
            {
                return this._vagozari;
            }
            set
            {
                if ((this._vagozari != value))
                {
                    this.OnVagozariChanging(value);
                    this.RaiseDataMemberChanging("Vagozari");
                    this.ValidateProperty("Vagozari", value);
                    this._vagozari = value;
                    this.RaiseDataMemberChanged("Vagozari");
                    this.OnVagozariChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._portID;
        }
    }
    
    /// <summary>
    /// The 'PortMojshekan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PortMojshekan : Entity
    {
        
        private string _channelDepth;
        
        private string _channelLen;
        
        private string _coordinates;
        
        private Nullable<double> _langargahDepth;
        
        private Nullable<bool> _liroobi;
        
        private Nullable<double> _mainLen;
        
        private string _neededLiroobi;
        
        private Nullable<double> _poolArea;
        
        private Nullable<double> _poolDiameter;
        
        private int _portID;
        
        private string _signs;
        
        private Nullable<int> _structureTypeID;
        
        private Nullable<double> _subLen;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnChannelDepthChanging(string value);
        partial void OnChannelDepthChanged();
        partial void OnChannelLenChanging(string value);
        partial void OnChannelLenChanged();
        partial void OnCoordinatesChanging(string value);
        partial void OnCoordinatesChanged();
        partial void OnLangargahDepthChanging(Nullable<double> value);
        partial void OnLangargahDepthChanged();
        partial void OnLiroobiChanging(Nullable<bool> value);
        partial void OnLiroobiChanged();
        partial void OnMainLenChanging(Nullable<double> value);
        partial void OnMainLenChanged();
        partial void OnNeededLiroobiChanging(string value);
        partial void OnNeededLiroobiChanged();
        partial void OnPoolAreaChanging(Nullable<double> value);
        partial void OnPoolAreaChanged();
        partial void OnPoolDiameterChanging(Nullable<double> value);
        partial void OnPoolDiameterChanged();
        partial void OnPortIDChanging(int value);
        partial void OnPortIDChanged();
        partial void OnSignsChanging(string value);
        partial void OnSignsChanged();
        partial void OnStructureTypeIDChanging(Nullable<int> value);
        partial void OnStructureTypeIDChanged();
        partial void OnSubLenChanging(Nullable<double> value);
        partial void OnSubLenChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PortMojshekan"/> class.
        /// </summary>
        public PortMojshekan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ChannelDepth' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ChannelDepth
        {
            get
            {
                return this._channelDepth;
            }
            set
            {
                if ((this._channelDepth != value))
                {
                    this.OnChannelDepthChanging(value);
                    this.RaiseDataMemberChanging("ChannelDepth");
                    this.ValidateProperty("ChannelDepth", value);
                    this._channelDepth = value;
                    this.RaiseDataMemberChanged("ChannelDepth");
                    this.OnChannelDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ChannelLen' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ChannelLen
        {
            get
            {
                return this._channelLen;
            }
            set
            {
                if ((this._channelLen != value))
                {
                    this.OnChannelLenChanging(value);
                    this.RaiseDataMemberChanging("ChannelLen");
                    this.ValidateProperty("ChannelLen", value);
                    this._channelLen = value;
                    this.RaiseDataMemberChanged("ChannelLen");
                    this.OnChannelLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Coordinates' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string Coordinates
        {
            get
            {
                return this._coordinates;
            }
            set
            {
                if ((this._coordinates != value))
                {
                    this.OnCoordinatesChanging(value);
                    this.RaiseDataMemberChanging("Coordinates");
                    this.ValidateProperty("Coordinates", value);
                    this._coordinates = value;
                    this.RaiseDataMemberChanged("Coordinates");
                    this.OnCoordinatesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LangargahDepth' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> LangargahDepth
        {
            get
            {
                return this._langargahDepth;
            }
            set
            {
                if ((this._langargahDepth != value))
                {
                    this.OnLangargahDepthChanging(value);
                    this.RaiseDataMemberChanging("LangargahDepth");
                    this.ValidateProperty("LangargahDepth", value);
                    this._langargahDepth = value;
                    this.RaiseDataMemberChanged("LangargahDepth");
                    this.OnLangargahDepthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Liroobi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Liroobi
        {
            get
            {
                return this._liroobi;
            }
            set
            {
                if ((this._liroobi != value))
                {
                    this.OnLiroobiChanging(value);
                    this.RaiseDataMemberChanging("Liroobi");
                    this.ValidateProperty("Liroobi", value);
                    this._liroobi = value;
                    this.RaiseDataMemberChanged("Liroobi");
                    this.OnLiroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MainLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> MainLen
        {
            get
            {
                return this._mainLen;
            }
            set
            {
                if ((this._mainLen != value))
                {
                    this.OnMainLenChanging(value);
                    this.RaiseDataMemberChanging("MainLen");
                    this.ValidateProperty("MainLen", value);
                    this._mainLen = value;
                    this.RaiseDataMemberChanged("MainLen");
                    this.OnMainLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NeededLiroobi' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NeededLiroobi
        {
            get
            {
                return this._neededLiroobi;
            }
            set
            {
                if ((this._neededLiroobi != value))
                {
                    this.OnNeededLiroobiChanging(value);
                    this.RaiseDataMemberChanging("NeededLiroobi");
                    this.ValidateProperty("NeededLiroobi", value);
                    this._neededLiroobi = value;
                    this.RaiseDataMemberChanged("NeededLiroobi");
                    this.OnNeededLiroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PoolArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> PoolArea
        {
            get
            {
                return this._poolArea;
            }
            set
            {
                if ((this._poolArea != value))
                {
                    this.OnPoolAreaChanging(value);
                    this.RaiseDataMemberChanging("PoolArea");
                    this.ValidateProperty("PoolArea", value);
                    this._poolArea = value;
                    this.RaiseDataMemberChanged("PoolArea");
                    this.OnPoolAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PoolDiameter' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> PoolDiameter
        {
            get
            {
                return this._poolDiameter;
            }
            set
            {
                if ((this._poolDiameter != value))
                {
                    this.OnPoolDiameterChanging(value);
                    this.RaiseDataMemberChanging("PoolDiameter");
                    this.ValidateProperty("PoolDiameter", value);
                    this._poolDiameter = value;
                    this.RaiseDataMemberChanged("PoolDiameter");
                    this.OnPoolDiameterChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaisePropertyChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Signs' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Signs
        {
            get
            {
                return this._signs;
            }
            set
            {
                if ((this._signs != value))
                {
                    this.OnSignsChanging(value);
                    this.RaiseDataMemberChanging("Signs");
                    this.ValidateProperty("Signs", value);
                    this._signs = value;
                    this.RaiseDataMemberChanged("Signs");
                    this.OnSignsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StructureTypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> StructureTypeID
        {
            get
            {
                return this._structureTypeID;
            }
            set
            {
                if ((this._structureTypeID != value))
                {
                    this.OnStructureTypeIDChanging(value);
                    this.RaiseDataMemberChanging("StructureTypeID");
                    this.ValidateProperty("StructureTypeID", value);
                    this._structureTypeID = value;
                    this.RaiseDataMemberChanged("StructureTypeID");
                    this.OnStructureTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubLen' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SubLen
        {
            get
            {
                return this._subLen;
            }
            set
            {
                if ((this._subLen != value))
                {
                    this.OnSubLenChanging(value);
                    this.RaiseDataMemberChanging("SubLen");
                    this.ValidateProperty("SubLen", value);
                    this._subLen = value;
                    this.RaiseDataMemberChanged("SubLen");
                    this.OnSubLenChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._portID;
        }
    }
    
    /// <summary>
    /// The 'PortSpec' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PortSpec : Entity
    {
        
        private Nullable<double> _distToLocation;
        
        private string _fillDate;
        
        private string _location;
        
        private Nullable<bool> _locInKhalij;
        
        private Nullable<bool> _locInKhor;
        
        private Nullable<bool> _locSea;
        
        private int _portID;
        
        private Nullable<int> _roadTypeID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDistToLocationChanging(Nullable<double> value);
        partial void OnDistToLocationChanged();
        partial void OnFillDateChanging(string value);
        partial void OnFillDateChanged();
        partial void OnLocationChanging(string value);
        partial void OnLocationChanged();
        partial void OnLocInKhalijChanging(Nullable<bool> value);
        partial void OnLocInKhalijChanged();
        partial void OnLocInKhorChanging(Nullable<bool> value);
        partial void OnLocInKhorChanged();
        partial void OnLocSeaChanging(Nullable<bool> value);
        partial void OnLocSeaChanged();
        partial void OnPortIDChanging(int value);
        partial void OnPortIDChanged();
        partial void OnRoadTypeIDChanging(Nullable<int> value);
        partial void OnRoadTypeIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PortSpec"/> class.
        /// </summary>
        public PortSpec()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DistToLocation' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DistToLocation
        {
            get
            {
                return this._distToLocation;
            }
            set
            {
                if ((this._distToLocation != value))
                {
                    this.OnDistToLocationChanging(value);
                    this.RaiseDataMemberChanging("DistToLocation");
                    this.ValidateProperty("DistToLocation", value);
                    this._distToLocation = value;
                    this.RaiseDataMemberChanged("DistToLocation");
                    this.OnDistToLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FillDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string FillDate
        {
            get
            {
                return this._fillDate;
            }
            set
            {
                if ((this._fillDate != value))
                {
                    this.OnFillDateChanging(value);
                    this.RaiseDataMemberChanging("FillDate");
                    this.ValidateProperty("FillDate", value);
                    this._fillDate = value;
                    this.RaiseDataMemberChanged("FillDate");
                    this.OnFillDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Location' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Location
        {
            get
            {
                return this._location;
            }
            set
            {
                if ((this._location != value))
                {
                    this.OnLocationChanging(value);
                    this.RaiseDataMemberChanging("Location");
                    this.ValidateProperty("Location", value);
                    this._location = value;
                    this.RaiseDataMemberChanged("Location");
                    this.OnLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocInKhalij' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> LocInKhalij
        {
            get
            {
                return this._locInKhalij;
            }
            set
            {
                if ((this._locInKhalij != value))
                {
                    this.OnLocInKhalijChanging(value);
                    this.RaiseDataMemberChanging("LocInKhalij");
                    this.ValidateProperty("LocInKhalij", value);
                    this._locInKhalij = value;
                    this.RaiseDataMemberChanged("LocInKhalij");
                    this.OnLocInKhalijChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocInKhor' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> LocInKhor
        {
            get
            {
                return this._locInKhor;
            }
            set
            {
                if ((this._locInKhor != value))
                {
                    this.OnLocInKhorChanging(value);
                    this.RaiseDataMemberChanging("LocInKhor");
                    this.ValidateProperty("LocInKhor", value);
                    this._locInKhor = value;
                    this.RaiseDataMemberChanged("LocInKhor");
                    this.OnLocInKhorChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocSea' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> LocSea
        {
            get
            {
                return this._locSea;
            }
            set
            {
                if ((this._locSea != value))
                {
                    this.OnLocSeaChanging(value);
                    this.RaiseDataMemberChanging("LocSea");
                    this.ValidateProperty("LocSea", value);
                    this._locSea = value;
                    this.RaiseDataMemberChanged("LocSea");
                    this.OnLocSeaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaisePropertyChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RoadTypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> RoadTypeID
        {
            get
            {
                return this._roadTypeID;
            }
            set
            {
                if ((this._roadTypeID != value))
                {
                    this.OnRoadTypeIDChanging(value);
                    this.RaiseDataMemberChanging("RoadTypeID");
                    this.ValidateProperty("RoadTypeID", value);
                    this._roadTypeID = value;
                    this.RaiseDataMemberChanged("RoadTypeID");
                    this.OnRoadTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._portID;
        }
    }
    
    /// <summary>
    /// The 'PortStructure' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class PortStructure : Entity
    {
        
        private Nullable<bool> _ab;
        
        private Nullable<bool> _atashneshani;
        
        private Nullable<double> _backArea;
        
        private Nullable<bool> _bargh;
        
        private Nullable<bool> _borj;
        
        private Nullable<double> _coveredStoreArea;
        
        private Nullable<bool> _fans;
        
        private int _fieldId;
        
        private Nullable<bool> _harigh;
        
        private Nullable<bool> _hesar;
        
        private Nullable<bool> _marz;
        
        private Nullable<bool> _negahbani;
        
        private Nullable<double> _officialArea;
        
        private Nullable<double> _openStoredArea;
        
        private Nullable<bool> _payaneh;
        
        private Nullable<int> _portID;
        
        private Nullable<bool> _restooran;
        
        private Nullable<bool> _roshanaee;
        
        private Nullable<double> _siteArea;
        
        private Nullable<bool> _tajhizatDarya;
        
        private Nullable<bool> _tajhizatKhoshki;
        
        private Nullable<bool> _tajhizatMokhaberat;
        
        private Nullable<bool> _tamirgah;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAbChanging(Nullable<bool> value);
        partial void OnAbChanged();
        partial void OnAtashneshaniChanging(Nullable<bool> value);
        partial void OnAtashneshaniChanged();
        partial void OnBackAreaChanging(Nullable<double> value);
        partial void OnBackAreaChanged();
        partial void OnBarghChanging(Nullable<bool> value);
        partial void OnBarghChanged();
        partial void OnBorjChanging(Nullable<bool> value);
        partial void OnBorjChanged();
        partial void OnCoveredStoreAreaChanging(Nullable<double> value);
        partial void OnCoveredStoreAreaChanged();
        partial void OnFansChanging(Nullable<bool> value);
        partial void OnFansChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnHarighChanging(Nullable<bool> value);
        partial void OnHarighChanged();
        partial void OnHesarChanging(Nullable<bool> value);
        partial void OnHesarChanged();
        partial void OnMarzChanging(Nullable<bool> value);
        partial void OnMarzChanged();
        partial void OnNegahbaniChanging(Nullable<bool> value);
        partial void OnNegahbaniChanged();
        partial void OnOfficialAreaChanging(Nullable<double> value);
        partial void OnOfficialAreaChanged();
        partial void OnOpenStoredAreaChanging(Nullable<double> value);
        partial void OnOpenStoredAreaChanged();
        partial void OnPayanehChanging(Nullable<bool> value);
        partial void OnPayanehChanged();
        partial void OnPortIDChanging(Nullable<int> value);
        partial void OnPortIDChanged();
        partial void OnRestooranChanging(Nullable<bool> value);
        partial void OnRestooranChanged();
        partial void OnRoshanaeeChanging(Nullable<bool> value);
        partial void OnRoshanaeeChanged();
        partial void OnSiteAreaChanging(Nullable<double> value);
        partial void OnSiteAreaChanged();
        partial void OnTajhizatDaryaChanging(Nullable<bool> value);
        partial void OnTajhizatDaryaChanged();
        partial void OnTajhizatKhoshkiChanging(Nullable<bool> value);
        partial void OnTajhizatKhoshkiChanged();
        partial void OnTajhizatMokhaberatChanging(Nullable<bool> value);
        partial void OnTajhizatMokhaberatChanged();
        partial void OnTamirgahChanging(Nullable<bool> value);
        partial void OnTamirgahChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PortStructure"/> class.
        /// </summary>
        public PortStructure()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Ab' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Ab
        {
            get
            {
                return this._ab;
            }
            set
            {
                if ((this._ab != value))
                {
                    this.OnAbChanging(value);
                    this.RaiseDataMemberChanging("Ab");
                    this.ValidateProperty("Ab", value);
                    this._ab = value;
                    this.RaiseDataMemberChanged("Ab");
                    this.OnAbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Atashneshani' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Atashneshani
        {
            get
            {
                return this._atashneshani;
            }
            set
            {
                if ((this._atashneshani != value))
                {
                    this.OnAtashneshaniChanging(value);
                    this.RaiseDataMemberChanging("Atashneshani");
                    this.ValidateProperty("Atashneshani", value);
                    this._atashneshani = value;
                    this.RaiseDataMemberChanged("Atashneshani");
                    this.OnAtashneshaniChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BackArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> BackArea
        {
            get
            {
                return this._backArea;
            }
            set
            {
                if ((this._backArea != value))
                {
                    this.OnBackAreaChanging(value);
                    this.RaiseDataMemberChanging("BackArea");
                    this.ValidateProperty("BackArea", value);
                    this._backArea = value;
                    this.RaiseDataMemberChanged("BackArea");
                    this.OnBackAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Bargh' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Bargh
        {
            get
            {
                return this._bargh;
            }
            set
            {
                if ((this._bargh != value))
                {
                    this.OnBarghChanging(value);
                    this.RaiseDataMemberChanging("Bargh");
                    this.ValidateProperty("Bargh", value);
                    this._bargh = value;
                    this.RaiseDataMemberChanged("Bargh");
                    this.OnBarghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Borj' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Borj
        {
            get
            {
                return this._borj;
            }
            set
            {
                if ((this._borj != value))
                {
                    this.OnBorjChanging(value);
                    this.RaiseDataMemberChanging("Borj");
                    this.ValidateProperty("Borj", value);
                    this._borj = value;
                    this.RaiseDataMemberChanged("Borj");
                    this.OnBorjChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CoveredStoreArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> CoveredStoreArea
        {
            get
            {
                return this._coveredStoreArea;
            }
            set
            {
                if ((this._coveredStoreArea != value))
                {
                    this.OnCoveredStoreAreaChanging(value);
                    this.RaiseDataMemberChanging("CoveredStoreArea");
                    this.ValidateProperty("CoveredStoreArea", value);
                    this._coveredStoreArea = value;
                    this.RaiseDataMemberChanged("CoveredStoreArea");
                    this.OnCoveredStoreAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Fans' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Fans
        {
            get
            {
                return this._fans;
            }
            set
            {
                if ((this._fans != value))
                {
                    this.OnFansChanging(value);
                    this.RaiseDataMemberChanging("Fans");
                    this.ValidateProperty("Fans", value);
                    this._fans = value;
                    this.RaiseDataMemberChanged("Fans");
                    this.OnFansChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Harigh' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Harigh
        {
            get
            {
                return this._harigh;
            }
            set
            {
                if ((this._harigh != value))
                {
                    this.OnHarighChanging(value);
                    this.RaiseDataMemberChanging("Harigh");
                    this.ValidateProperty("Harigh", value);
                    this._harigh = value;
                    this.RaiseDataMemberChanged("Harigh");
                    this.OnHarighChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Hesar' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Hesar
        {
            get
            {
                return this._hesar;
            }
            set
            {
                if ((this._hesar != value))
                {
                    this.OnHesarChanging(value);
                    this.RaiseDataMemberChanging("Hesar");
                    this.ValidateProperty("Hesar", value);
                    this._hesar = value;
                    this.RaiseDataMemberChanged("Hesar");
                    this.OnHesarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Marz' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Marz
        {
            get
            {
                return this._marz;
            }
            set
            {
                if ((this._marz != value))
                {
                    this.OnMarzChanging(value);
                    this.RaiseDataMemberChanging("Marz");
                    this.ValidateProperty("Marz", value);
                    this._marz = value;
                    this.RaiseDataMemberChanged("Marz");
                    this.OnMarzChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Negahbani' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Negahbani
        {
            get
            {
                return this._negahbani;
            }
            set
            {
                if ((this._negahbani != value))
                {
                    this.OnNegahbaniChanging(value);
                    this.RaiseDataMemberChanging("Negahbani");
                    this.ValidateProperty("Negahbani", value);
                    this._negahbani = value;
                    this.RaiseDataMemberChanged("Negahbani");
                    this.OnNegahbaniChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OfficialArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> OfficialArea
        {
            get
            {
                return this._officialArea;
            }
            set
            {
                if ((this._officialArea != value))
                {
                    this.OnOfficialAreaChanging(value);
                    this.RaiseDataMemberChanging("OfficialArea");
                    this.ValidateProperty("OfficialArea", value);
                    this._officialArea = value;
                    this.RaiseDataMemberChanged("OfficialArea");
                    this.OnOfficialAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OpenStoredArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> OpenStoredArea
        {
            get
            {
                return this._openStoredArea;
            }
            set
            {
                if ((this._openStoredArea != value))
                {
                    this.OnOpenStoredAreaChanging(value);
                    this.RaiseDataMemberChanging("OpenStoredArea");
                    this.ValidateProperty("OpenStoredArea", value);
                    this._openStoredArea = value;
                    this.RaiseDataMemberChanged("OpenStoredArea");
                    this.OnOpenStoredAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Payaneh' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Payaneh
        {
            get
            {
                return this._payaneh;
            }
            set
            {
                if ((this._payaneh != value))
                {
                    this.OnPayanehChanging(value);
                    this.RaiseDataMemberChanging("Payaneh");
                    this.ValidateProperty("Payaneh", value);
                    this._payaneh = value;
                    this.RaiseDataMemberChanged("Payaneh");
                    this.OnPayanehChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.RaiseDataMemberChanging("PortID");
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaiseDataMemberChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Restooran' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Restooran
        {
            get
            {
                return this._restooran;
            }
            set
            {
                if ((this._restooran != value))
                {
                    this.OnRestooranChanging(value);
                    this.RaiseDataMemberChanging("Restooran");
                    this.ValidateProperty("Restooran", value);
                    this._restooran = value;
                    this.RaiseDataMemberChanged("Restooran");
                    this.OnRestooranChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Roshanaee' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Roshanaee
        {
            get
            {
                return this._roshanaee;
            }
            set
            {
                if ((this._roshanaee != value))
                {
                    this.OnRoshanaeeChanging(value);
                    this.RaiseDataMemberChanging("Roshanaee");
                    this.ValidateProperty("Roshanaee", value);
                    this._roshanaee = value;
                    this.RaiseDataMemberChanged("Roshanaee");
                    this.OnRoshanaeeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SiteArea' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> SiteArea
        {
            get
            {
                return this._siteArea;
            }
            set
            {
                if ((this._siteArea != value))
                {
                    this.OnSiteAreaChanging(value);
                    this.RaiseDataMemberChanging("SiteArea");
                    this.ValidateProperty("SiteArea", value);
                    this._siteArea = value;
                    this.RaiseDataMemberChanged("SiteArea");
                    this.OnSiteAreaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TajhizatDarya' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> TajhizatDarya
        {
            get
            {
                return this._tajhizatDarya;
            }
            set
            {
                if ((this._tajhizatDarya != value))
                {
                    this.OnTajhizatDaryaChanging(value);
                    this.RaiseDataMemberChanging("TajhizatDarya");
                    this.ValidateProperty("TajhizatDarya", value);
                    this._tajhizatDarya = value;
                    this.RaiseDataMemberChanged("TajhizatDarya");
                    this.OnTajhizatDaryaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TajhizatKhoshki' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> TajhizatKhoshki
        {
            get
            {
                return this._tajhizatKhoshki;
            }
            set
            {
                if ((this._tajhizatKhoshki != value))
                {
                    this.OnTajhizatKhoshkiChanging(value);
                    this.RaiseDataMemberChanging("TajhizatKhoshki");
                    this.ValidateProperty("TajhizatKhoshki", value);
                    this._tajhizatKhoshki = value;
                    this.RaiseDataMemberChanged("TajhizatKhoshki");
                    this.OnTajhizatKhoshkiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TajhizatMokhaberat' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> TajhizatMokhaberat
        {
            get
            {
                return this._tajhizatMokhaberat;
            }
            set
            {
                if ((this._tajhizatMokhaberat != value))
                {
                    this.OnTajhizatMokhaberatChanging(value);
                    this.RaiseDataMemberChanging("TajhizatMokhaberat");
                    this.ValidateProperty("TajhizatMokhaberat", value);
                    this._tajhizatMokhaberat = value;
                    this.RaiseDataMemberChanged("TajhizatMokhaberat");
                    this.OnTajhizatMokhaberatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Tamirgah' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Tamirgah
        {
            get
            {
                return this._tamirgah;
            }
            set
            {
                if ((this._tamirgah != value))
                {
                    this.OnTamirgahChanging(value);
                    this.RaiseDataMemberChanging("Tamirgah");
                    this.ValidateProperty("Tamirgah", value);
                    this._tamirgah = value;
                    this.RaiseDataMemberChanged("Tamirgah");
                    this.OnTamirgahChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'Profiles' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Profiles : Entity
    {
        
        private DateTime _lastUpdatedDate;
        
        private string _propertyNames;
        
        private byte[] _propertyValueBinary;
        
        private string _propertyValueStrings;
        
        private Guid _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnLastUpdatedDateChanging(DateTime value);
        partial void OnLastUpdatedDateChanged();
        partial void OnPropertyNamesChanging(string value);
        partial void OnPropertyNamesChanged();
        partial void OnPropertyValueBinaryChanging(byte[] value);
        partial void OnPropertyValueBinaryChanged();
        partial void OnPropertyValueStringsChanging(string value);
        partial void OnPropertyValueStringsChanged();
        partial void OnUserIdChanging(Guid value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Profiles"/> class.
        /// </summary>
        public Profiles()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'LastUpdatedDate' value.
        /// </summary>
        [DataMember()]
        public DateTime LastUpdatedDate
        {
            get
            {
                return this._lastUpdatedDate;
            }
            set
            {
                if ((this._lastUpdatedDate != value))
                {
                    this.OnLastUpdatedDateChanging(value);
                    this.RaiseDataMemberChanging("LastUpdatedDate");
                    this.ValidateProperty("LastUpdatedDate", value);
                    this._lastUpdatedDate = value;
                    this.RaiseDataMemberChanged("LastUpdatedDate");
                    this.OnLastUpdatedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PropertyNames' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(4000)]
        public string PropertyNames
        {
            get
            {
                return this._propertyNames;
            }
            set
            {
                if ((this._propertyNames != value))
                {
                    this.OnPropertyNamesChanging(value);
                    this.RaiseDataMemberChanging("PropertyNames");
                    this.ValidateProperty("PropertyNames", value);
                    this._propertyNames = value;
                    this.RaiseDataMemberChanged("PropertyNames");
                    this.OnPropertyNamesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PropertyValueBinary' value.
        /// </summary>
        [DataMember()]
        [Required()]
        public byte[] PropertyValueBinary
        {
            get
            {
                return this._propertyValueBinary;
            }
            set
            {
                if ((this._propertyValueBinary != value))
                {
                    this.OnPropertyValueBinaryChanging(value);
                    this.RaiseDataMemberChanging("PropertyValueBinary");
                    this.ValidateProperty("PropertyValueBinary", value);
                    this._propertyValueBinary = value;
                    this.RaiseDataMemberChanged("PropertyValueBinary");
                    this.OnPropertyValueBinaryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PropertyValueStrings' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(4000)]
        public string PropertyValueStrings
        {
            get
            {
                return this._propertyValueStrings;
            }
            set
            {
                if ((this._propertyValueStrings != value))
                {
                    this.OnPropertyValueStringsChanging(value);
                    this.RaiseDataMemberChanging("PropertyValueStrings");
                    this.ValidateProperty("PropertyValueStrings", value);
                    this._propertyValueStrings = value;
                    this.RaiseDataMemberChanged("PropertyValueStrings");
                    this.OnPropertyValueStringsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._userId;
        }
    }
    
    /// <summary>
    /// The 'ProjectIdentification' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class ProjectIdentification : Entity
    {
        
        private Nullable<double> _bilAbkhorBarj;
        
        private Nullable<double> _bilHajmeBucket;
        
        private Nullable<double> _bilHajmeMasaleh;
        
        private string _bilLayroobMalek;
        
        private Nullable<double> _bilMasrafSookht;
        
        private Nullable<double> _bilMaxHajmeBucket;
        
        private Nullable<double> _bilMaxOmgh;
        
        private string _bilNameLayroob;
        
        private Nullable<double> _contractCost;
        
        private Nullable<DateTime> _contractFinishDate;
        
        private Nullable<int> _contractPeriod;
        
        private Nullable<DateTime> _contractStartDate;
        
        private Nullable<double> _cutAbkhorLayroob;
        
        private Nullable<double> _cutGhodrateCutter;
        
        private Nullable<double> _cutGhodratePomp;
        
        private string _cutLayroobMalek;
        
        private Nullable<double> _cutMaharLangarCount;
        
        private Nullable<double> _cutMaharLangarWeight;
        
        private Nullable<double> _cutMaharSpad;
        
        private Nullable<double> _cutMasrafSookht;
        
        private Nullable<double> _cutMaxOmgh;
        
        private Nullable<double> _cutMinOmgh;
        
        private string _cutNameLayroob;
        
        private string _description;
        
        private Nullable<double> _disDaryaFasele;
        
        private Nullable<double> _disDaryaLat;
        
        private Nullable<double> _disDaryaLong;
        
        private string _disDaryaNameMahdoode;
        
        private Nullable<double> _disDaryaOmgheMahdoode;
        
        private Nullable<double> _disDaryaZaman;
        
        private Nullable<bool> _disKhoshkiNiazeTasbit;
        
        private Nullable<double> _disKhoshkiNo1Fasele;
        
        private Nullable<double> _disKhoshkiNo1Hajm;
        
        private Nullable<double> _disKhoshkiNo1Masahat;
        
        private Nullable<double> _disKhoshkiNo1Tool;
        
        private Nullable<double> _disKhoshkiNo2Fasele;
        
        private Nullable<double> _disKhoshkiNo2Hajm;
        
        private Nullable<double> _disKhoshkiNo2Masahat;
        
        private Nullable<double> _disKhoshkiNo2Tool;
        
        private Nullable<double> _disKhoshkiNo3Fasele;
        
        private Nullable<double> _disKhoshkiNo3Hajm;
        
        private Nullable<double> _disKhoshkiNo3Masahat;
        
        private Nullable<double> _disKhoshkiNo3Tool;
        
        private Nullable<double> _equCountBilMechanici;
        
        private Nullable<double> _equCountBouldoser;
        
        private Nullable<double> _equCountDGPS;
        
        private Nullable<double> _equCountDiesel;
        
        private Nullable<double> _equCountEcosounder;
        
        private Nullable<double> _equCountGhayegh;
        
        private Nullable<double> _equCountJaresaghil;
        
        private Nullable<double> _equCountKamionCompressi;
        
        private Nullable<double> _equCountKamionJaresaghildar;
        
        private Nullable<double> _equCountKhateLoole;
        
        private Nullable<double> _equCountLoader;
        
        private Nullable<double> _equCountNivo;
        
        private Nullable<double> _equCountRTK;
        
        private Nullable<double> _equCountSpeedometer;
        
        private Nullable<double> _equCountTankerAb;
        
        private Nullable<double> _equCountTankerSookht;
        
        private Nullable<double> _equCountTideGuage;
        
        private Nullable<double> _equCountTotalStation;
        
        private string _geoLayer1AmalkardeLayroob;
        
        private string _geoLayer1JenseKhak;
        
        private string _geoLayer1LaroobPishnahadi;
        
        private string _geoLayer1LayroobeBekarGerefte;
        
        private string _geoLayer1SPT;
        
        private Nullable<double> _geoLayer1TarazeEbtedaei;
        
        private Nullable<double> _geoLayer1TarazeEntehaei;
        
        private Nullable<double> _geoLayer1ZekhamatLayer;
        
        private string _geoLayer2AmalkardeLayroob;
        
        private string _geoLayer2JenseKhak;
        
        private string _geoLayer2LaroobPishnahadi;
        
        private string _geoLayer2LayroobeBekarGerefte;
        
        private string _geoLayer2SPT;
        
        private Nullable<double> _geoLayer2TarazeEbtedaei;
        
        private Nullable<double> _geoLayer2TarazeEntehaei;
        
        private Nullable<double> _geoLayer2ZekhamatLayer;
        
        private string _geoLayer3AmalkardeLayroob;
        
        private string _geoLayer3JenseKhak;
        
        private string _geoLayer3LaroobPishnahadi;
        
        private string _geoLayer3LayroobeBekarGerefte;
        
        private string _geoLayer3SPT;
        
        private Nullable<double> _geoLayer3TarazeEbtedaei;
        
        private Nullable<double> _geoLayer3TarazeEntehaei;
        
        private Nullable<double> _geoLayer3ZekhamatLayer;
        
        private Nullable<double> _hajmeLayroobi;
        
        private Nullable<double> _hypAbkhorLayroob;
        
        private Nullable<double> _hypHajmeMakhzan;
        
        private string _hypLayroobMalek;
        
        private Nullable<double> _hypMasrafSookht;
        
        private Nullable<double> _hypMaxOmgh;
        
        private string _hypNameLayroob;
        
        private int _id;
        
        private Nullable<bool> _isBarjKeshi;
        
        private Nullable<bool> _isBiloBarooj;
        
        private Nullable<bool> _isCanalDastrasi;
        
        private Nullable<bool> _isContineri;
        
        private Nullable<bool> _isCutterSucktion;
        
        private Nullable<bool> _isDarBarejJanebi;
        
        private Nullable<bool> _isEhdasi;
        
        private Nullable<bool> _isFallebar;
        
        private Nullable<bool> _isHozcheAramesh;
        
        private Nullable<bool> _isHyperSucktion;
        
        private Nullable<bool> _isJahateAssemble;
        
        private Nullable<bool> _isKalayeOmomi;
        
        private Nullable<bool> _isLenj;
        
        private Nullable<bool> _isMakhzan;
        
        private Nullable<bool> _isMosaferi;
        
        private Nullable<bool> _isNafti;
        
        private Nullable<bool> _isNaghshebardari;
        
        private Nullable<bool> _isNegahdari;
        
        private Nullable<bool> _isPayeEskele;
        
        private Nullable<bool> _isPomp;
        
        private Nullable<bool> _isTamighi;
        
        private Nullable<bool> _isTavaneJabejaei;
        
        private Nullable<bool> _isYadakKeshi;
        
        private string _mahdodeLayroobi;
        
        private string _moshaverName;
        
        private Nullable<double> _mulFazayeKhali;
        
        private Nullable<double> _mulHajmeMakhzanAb;
        
        private Nullable<double> _mulHajmeMakhzanSookht;
        
        private Nullable<double> _mulJaresaghil;
        
        private Nullable<double> _mulWinch;
        
        private Nullable<double> _nesbateTarazBeMLLW;
        
        private Nullable<double> _nesbateTarazeCD;
        
        private Nullable<double> _omgheAbkhorShenavareTarh;
        
        private string _peymankarName;
        
        private string _projectName;
        
        private string _projectPurpose;
        
        private string _projectTechSpec;
        
        private Nullable<double> _savHajmeAmaliat;
        
        private Nullable<bool> _savIsEhdasi;
        
        private Nullable<bool> _savIsNegahdari;
        
        private Nullable<bool> _savLayroobiGhabli;
        
        private string _savMoshakhasateLayroob;
        
        private string _savMoshaver;
        
        private string _savPeymankar;
        
        private Nullable<double> _savSaleLayroobiGhabli;
        
        private byte[] _token;
        
        private Nullable<int> _userId;
        
        private Nullable<double> _vosateMahdodeLayroobi;
        
        private Nullable<double> _yadAbkhor;
        
        private Nullable<double> _yadArz;
        
        private Nullable<double> _yadGhodratMotor;
        
        private Nullable<double> _yadHajmeMakhzanAb;
        
        private Nullable<double> _yadHajmeMakhzanSookht;
        
        private Nullable<double> _yadKesheshMaharband;
        
        private Nullable<double> _yadTool;
        
        private Nullable<double> _zarfiateShenavareTarh;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnbilAbkhorBarjChanging(Nullable<double> value);
        partial void OnbilAbkhorBarjChanged();
        partial void OnbilHajmeBucketChanging(Nullable<double> value);
        partial void OnbilHajmeBucketChanged();
        partial void OnbilHajmeMasalehChanging(Nullable<double> value);
        partial void OnbilHajmeMasalehChanged();
        partial void OnbilLayroobMalekChanging(string value);
        partial void OnbilLayroobMalekChanged();
        partial void OnbilMasrafSookhtChanging(Nullable<double> value);
        partial void OnbilMasrafSookhtChanged();
        partial void OnbilMaxHajmeBucketChanging(Nullable<double> value);
        partial void OnbilMaxHajmeBucketChanged();
        partial void OnbilMaxOmghChanging(Nullable<double> value);
        partial void OnbilMaxOmghChanged();
        partial void OnbilNameLayroobChanging(string value);
        partial void OnbilNameLayroobChanged();
        partial void OnContractCostChanging(Nullable<double> value);
        partial void OnContractCostChanged();
        partial void OnContractFinishDateChanging(Nullable<DateTime> value);
        partial void OnContractFinishDateChanged();
        partial void OnContractPeriodChanging(Nullable<int> value);
        partial void OnContractPeriodChanged();
        partial void OnContractStartDateChanging(Nullable<DateTime> value);
        partial void OnContractStartDateChanged();
        partial void OncutAbkhorLayroobChanging(Nullable<double> value);
        partial void OncutAbkhorLayroobChanged();
        partial void OncutGhodrateCutterChanging(Nullable<double> value);
        partial void OncutGhodrateCutterChanged();
        partial void OncutGhodratePompChanging(Nullable<double> value);
        partial void OncutGhodratePompChanged();
        partial void OncutLayroobMalekChanging(string value);
        partial void OncutLayroobMalekChanged();
        partial void OncutMaharLangarCountChanging(Nullable<double> value);
        partial void OncutMaharLangarCountChanged();
        partial void OncutMaharLangarWeightChanging(Nullable<double> value);
        partial void OncutMaharLangarWeightChanged();
        partial void OncutMaharSpadChanging(Nullable<double> value);
        partial void OncutMaharSpadChanged();
        partial void OncutMasrafSookhtChanging(Nullable<double> value);
        partial void OncutMasrafSookhtChanged();
        partial void OncutMaxOmghChanging(Nullable<double> value);
        partial void OncutMaxOmghChanged();
        partial void OncutMinOmghChanging(Nullable<double> value);
        partial void OncutMinOmghChanged();
        partial void OncutNameLayroobChanging(string value);
        partial void OncutNameLayroobChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OndisDaryaFaseleChanging(Nullable<double> value);
        partial void OndisDaryaFaseleChanged();
        partial void OndisDaryaLatChanging(Nullable<double> value);
        partial void OndisDaryaLatChanged();
        partial void OndisDaryaLongChanging(Nullable<double> value);
        partial void OndisDaryaLongChanged();
        partial void OndisDaryaNameMahdoodeChanging(string value);
        partial void OndisDaryaNameMahdoodeChanged();
        partial void OndisDaryaOmgheMahdoodeChanging(Nullable<double> value);
        partial void OndisDaryaOmgheMahdoodeChanged();
        partial void OndisDaryaZamanChanging(Nullable<double> value);
        partial void OndisDaryaZamanChanged();
        partial void OndisKhoshkiNiazeTasbitChanging(Nullable<bool> value);
        partial void OndisKhoshkiNiazeTasbitChanged();
        partial void OndisKhoshkiNo1FaseleChanging(Nullable<double> value);
        partial void OndisKhoshkiNo1FaseleChanged();
        partial void OndisKhoshkiNo1HajmChanging(Nullable<double> value);
        partial void OndisKhoshkiNo1HajmChanged();
        partial void OndisKhoshkiNo1MasahatChanging(Nullable<double> value);
        partial void OndisKhoshkiNo1MasahatChanged();
        partial void OndisKhoshkiNo1ToolChanging(Nullable<double> value);
        partial void OndisKhoshkiNo1ToolChanged();
        partial void OndisKhoshkiNo2FaseleChanging(Nullable<double> value);
        partial void OndisKhoshkiNo2FaseleChanged();
        partial void OndisKhoshkiNo2HajmChanging(Nullable<double> value);
        partial void OndisKhoshkiNo2HajmChanged();
        partial void OndisKhoshkiNo2MasahatChanging(Nullable<double> value);
        partial void OndisKhoshkiNo2MasahatChanged();
        partial void OndisKhoshkiNo2ToolChanging(Nullable<double> value);
        partial void OndisKhoshkiNo2ToolChanged();
        partial void OndisKhoshkiNo3FaseleChanging(Nullable<double> value);
        partial void OndisKhoshkiNo3FaseleChanged();
        partial void OndisKhoshkiNo3HajmChanging(Nullable<double> value);
        partial void OndisKhoshkiNo3HajmChanged();
        partial void OndisKhoshkiNo3MasahatChanging(Nullable<double> value);
        partial void OndisKhoshkiNo3MasahatChanged();
        partial void OndisKhoshkiNo3ToolChanging(Nullable<double> value);
        partial void OndisKhoshkiNo3ToolChanged();
        partial void OnequCountBilMechaniciChanging(Nullable<double> value);
        partial void OnequCountBilMechaniciChanged();
        partial void OnequCountBouldoserChanging(Nullable<double> value);
        partial void OnequCountBouldoserChanged();
        partial void OnequCountDGPSChanging(Nullable<double> value);
        partial void OnequCountDGPSChanged();
        partial void OnequCountDieselChanging(Nullable<double> value);
        partial void OnequCountDieselChanged();
        partial void OnequCountEcosounderChanging(Nullable<double> value);
        partial void OnequCountEcosounderChanged();
        partial void OnequCountGhayeghChanging(Nullable<double> value);
        partial void OnequCountGhayeghChanged();
        partial void OnequCountJaresaghilChanging(Nullable<double> value);
        partial void OnequCountJaresaghilChanged();
        partial void OnequCountKamionCompressiChanging(Nullable<double> value);
        partial void OnequCountKamionCompressiChanged();
        partial void OnequCountKamionJaresaghildarChanging(Nullable<double> value);
        partial void OnequCountKamionJaresaghildarChanged();
        partial void OnequCountKhateLooleChanging(Nullable<double> value);
        partial void OnequCountKhateLooleChanged();
        partial void OnequCountLoaderChanging(Nullable<double> value);
        partial void OnequCountLoaderChanged();
        partial void OnequCountNivoChanging(Nullable<double> value);
        partial void OnequCountNivoChanged();
        partial void OnequCountRTKChanging(Nullable<double> value);
        partial void OnequCountRTKChanged();
        partial void OnequCountSpeedometerChanging(Nullable<double> value);
        partial void OnequCountSpeedometerChanged();
        partial void OnequCountTankerAbChanging(Nullable<double> value);
        partial void OnequCountTankerAbChanged();
        partial void OnequCountTankerSookhtChanging(Nullable<double> value);
        partial void OnequCountTankerSookhtChanged();
        partial void OnequCountTideGuageChanging(Nullable<double> value);
        partial void OnequCountTideGuageChanged();
        partial void OnequCountTotalStationChanging(Nullable<double> value);
        partial void OnequCountTotalStationChanged();
        partial void OngeoLayer1AmalkardeLayroobChanging(string value);
        partial void OngeoLayer1AmalkardeLayroobChanged();
        partial void OngeoLayer1JenseKhakChanging(string value);
        partial void OngeoLayer1JenseKhakChanged();
        partial void OngeoLayer1LaroobPishnahadiChanging(string value);
        partial void OngeoLayer1LaroobPishnahadiChanged();
        partial void OngeoLayer1LayroobeBekarGerefteChanging(string value);
        partial void OngeoLayer1LayroobeBekarGerefteChanged();
        partial void OngeoLayer1SPTChanging(string value);
        partial void OngeoLayer1SPTChanged();
        partial void OngeoLayer1TarazeEbtedaeiChanging(Nullable<double> value);
        partial void OngeoLayer1TarazeEbtedaeiChanged();
        partial void OngeoLayer1TarazeEntehaeiChanging(Nullable<double> value);
        partial void OngeoLayer1TarazeEntehaeiChanged();
        partial void OngeoLayer1ZekhamatLayerChanging(Nullable<double> value);
        partial void OngeoLayer1ZekhamatLayerChanged();
        partial void OngeoLayer2AmalkardeLayroobChanging(string value);
        partial void OngeoLayer2AmalkardeLayroobChanged();
        partial void OngeoLayer2JenseKhakChanging(string value);
        partial void OngeoLayer2JenseKhakChanged();
        partial void OngeoLayer2LaroobPishnahadiChanging(string value);
        partial void OngeoLayer2LaroobPishnahadiChanged();
        partial void OngeoLayer2LayroobeBekarGerefteChanging(string value);
        partial void OngeoLayer2LayroobeBekarGerefteChanged();
        partial void OngeoLayer2SPTChanging(string value);
        partial void OngeoLayer2SPTChanged();
        partial void OngeoLayer2TarazeEbtedaeiChanging(Nullable<double> value);
        partial void OngeoLayer2TarazeEbtedaeiChanged();
        partial void OngeoLayer2TarazeEntehaeiChanging(Nullable<double> value);
        partial void OngeoLayer2TarazeEntehaeiChanged();
        partial void OngeoLayer2ZekhamatLayerChanging(Nullable<double> value);
        partial void OngeoLayer2ZekhamatLayerChanged();
        partial void OngeoLayer3AmalkardeLayroobChanging(string value);
        partial void OngeoLayer3AmalkardeLayroobChanged();
        partial void OngeoLayer3JenseKhakChanging(string value);
        partial void OngeoLayer3JenseKhakChanged();
        partial void OngeoLayer3LaroobPishnahadiChanging(string value);
        partial void OngeoLayer3LaroobPishnahadiChanged();
        partial void OngeoLayer3LayroobeBekarGerefteChanging(string value);
        partial void OngeoLayer3LayroobeBekarGerefteChanged();
        partial void OngeoLayer3SPTChanging(string value);
        partial void OngeoLayer3SPTChanged();
        partial void OngeoLayer3TarazeEbtedaeiChanging(Nullable<double> value);
        partial void OngeoLayer3TarazeEbtedaeiChanged();
        partial void OngeoLayer3TarazeEntehaeiChanging(Nullable<double> value);
        partial void OngeoLayer3TarazeEntehaeiChanged();
        partial void OngeoLayer3ZekhamatLayerChanging(Nullable<double> value);
        partial void OngeoLayer3ZekhamatLayerChanged();
        partial void OnHajmeLayroobiChanging(Nullable<double> value);
        partial void OnHajmeLayroobiChanged();
        partial void OnhypAbkhorLayroobChanging(Nullable<double> value);
        partial void OnhypAbkhorLayroobChanged();
        partial void OnhypHajmeMakhzanChanging(Nullable<double> value);
        partial void OnhypHajmeMakhzanChanged();
        partial void OnhypLayroobMalekChanging(string value);
        partial void OnhypLayroobMalekChanged();
        partial void OnhypMasrafSookhtChanging(Nullable<double> value);
        partial void OnhypMasrafSookhtChanged();
        partial void OnhypMaxOmghChanging(Nullable<double> value);
        partial void OnhypMaxOmghChanged();
        partial void OnhypNameLayroobChanging(string value);
        partial void OnhypNameLayroobChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIsBarjKeshiChanging(Nullable<bool> value);
        partial void OnIsBarjKeshiChanged();
        partial void OnIsBiloBaroojChanging(Nullable<bool> value);
        partial void OnIsBiloBaroojChanged();
        partial void OnIsCanalDastrasiChanging(Nullable<bool> value);
        partial void OnIsCanalDastrasiChanged();
        partial void OnIsContineriChanging(Nullable<bool> value);
        partial void OnIsContineriChanged();
        partial void OnIsCutterSucktionChanging(Nullable<bool> value);
        partial void OnIsCutterSucktionChanged();
        partial void OnIsDarBarejJanebiChanging(Nullable<bool> value);
        partial void OnIsDarBarejJanebiChanged();
        partial void OnIsEhdasiChanging(Nullable<bool> value);
        partial void OnIsEhdasiChanged();
        partial void OnIsFallebarChanging(Nullable<bool> value);
        partial void OnIsFallebarChanged();
        partial void OnIsHozcheArameshChanging(Nullable<bool> value);
        partial void OnIsHozcheArameshChanged();
        partial void OnIsHyperSucktionChanging(Nullable<bool> value);
        partial void OnIsHyperSucktionChanged();
        partial void OnIsJahateAssembleChanging(Nullable<bool> value);
        partial void OnIsJahateAssembleChanged();
        partial void OnIsKalayeOmomiChanging(Nullable<bool> value);
        partial void OnIsKalayeOmomiChanged();
        partial void OnIsLenjChanging(Nullable<bool> value);
        partial void OnIsLenjChanged();
        partial void OnIsMakhzanChanging(Nullable<bool> value);
        partial void OnIsMakhzanChanged();
        partial void OnIsMosaferiChanging(Nullable<bool> value);
        partial void OnIsMosaferiChanged();
        partial void OnIsNaftiChanging(Nullable<bool> value);
        partial void OnIsNaftiChanged();
        partial void OnIsNaghshebardariChanging(Nullable<bool> value);
        partial void OnIsNaghshebardariChanged();
        partial void OnIsNegahdariChanging(Nullable<bool> value);
        partial void OnIsNegahdariChanged();
        partial void OnIsPayeEskeleChanging(Nullable<bool> value);
        partial void OnIsPayeEskeleChanged();
        partial void OnIsPompChanging(Nullable<bool> value);
        partial void OnIsPompChanged();
        partial void OnIsTamighiChanging(Nullable<bool> value);
        partial void OnIsTamighiChanged();
        partial void OnIsTavaneJabejaeiChanging(Nullable<bool> value);
        partial void OnIsTavaneJabejaeiChanged();
        partial void OnIsYadakKeshiChanging(Nullable<bool> value);
        partial void OnIsYadakKeshiChanged();
        partial void OnMahdodeLayroobiChanging(string value);
        partial void OnMahdodeLayroobiChanged();
        partial void OnMoshaverNameChanging(string value);
        partial void OnMoshaverNameChanged();
        partial void OnmulFazayeKhaliChanging(Nullable<double> value);
        partial void OnmulFazayeKhaliChanged();
        partial void OnmulHajmeMakhzanAbChanging(Nullable<double> value);
        partial void OnmulHajmeMakhzanAbChanged();
        partial void OnmulHajmeMakhzanSookhtChanging(Nullable<double> value);
        partial void OnmulHajmeMakhzanSookhtChanged();
        partial void OnmulJaresaghilChanging(Nullable<double> value);
        partial void OnmulJaresaghilChanged();
        partial void OnmulWinchChanging(Nullable<double> value);
        partial void OnmulWinchChanged();
        partial void OnNesbateTarazBeMLLWChanging(Nullable<double> value);
        partial void OnNesbateTarazBeMLLWChanged();
        partial void OnNesbateTarazeCDChanging(Nullable<double> value);
        partial void OnNesbateTarazeCDChanged();
        partial void OnOmgheAbkhorShenavareTarhChanging(Nullable<double> value);
        partial void OnOmgheAbkhorShenavareTarhChanged();
        partial void OnPeymankarNameChanging(string value);
        partial void OnPeymankarNameChanged();
        partial void OnProjectNameChanging(string value);
        partial void OnProjectNameChanged();
        partial void OnProjectPurposeChanging(string value);
        partial void OnProjectPurposeChanged();
        partial void OnProjectTechSpecChanging(string value);
        partial void OnProjectTechSpecChanged();
        partial void OnsavHajmeAmaliatChanging(Nullable<double> value);
        partial void OnsavHajmeAmaliatChanged();
        partial void OnsavIsEhdasiChanging(Nullable<bool> value);
        partial void OnsavIsEhdasiChanged();
        partial void OnsavIsNegahdariChanging(Nullable<bool> value);
        partial void OnsavIsNegahdariChanged();
        partial void OnsavLayroobiGhabliChanging(Nullable<bool> value);
        partial void OnsavLayroobiGhabliChanged();
        partial void OnsavMoshakhasateLayroobChanging(string value);
        partial void OnsavMoshakhasateLayroobChanged();
        partial void OnsavMoshaverChanging(string value);
        partial void OnsavMoshaverChanged();
        partial void OnsavPeymankarChanging(string value);
        partial void OnsavPeymankarChanged();
        partial void OnsavSaleLayroobiGhabliChanging(Nullable<double> value);
        partial void OnsavSaleLayroobiGhabliChanged();
        partial void OnTokenChanging(byte[] value);
        partial void OnTokenChanged();
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
        partial void OnVosateMahdodeLayroobiChanging(Nullable<double> value);
        partial void OnVosateMahdodeLayroobiChanged();
        partial void OnyadAbkhorChanging(Nullable<double> value);
        partial void OnyadAbkhorChanged();
        partial void OnyadArzChanging(Nullable<double> value);
        partial void OnyadArzChanged();
        partial void OnyadGhodratMotorChanging(Nullable<double> value);
        partial void OnyadGhodratMotorChanged();
        partial void OnyadHajmeMakhzanAbChanging(Nullable<double> value);
        partial void OnyadHajmeMakhzanAbChanged();
        partial void OnyadHajmeMakhzanSookhtChanging(Nullable<double> value);
        partial void OnyadHajmeMakhzanSookhtChanged();
        partial void OnyadKesheshMaharbandChanging(Nullable<double> value);
        partial void OnyadKesheshMaharbandChanged();
        partial void OnyadToolChanging(Nullable<double> value);
        partial void OnyadToolChanged();
        partial void OnZarfiateShenavareTarhChanging(Nullable<double> value);
        partial void OnZarfiateShenavareTarhChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectIdentification"/> class.
        /// </summary>
        public ProjectIdentification()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'bilAbkhorBarj' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilAbkhorBarj
        {
            get
            {
                return this._bilAbkhorBarj;
            }
            set
            {
                if ((this._bilAbkhorBarj != value))
                {
                    this.OnbilAbkhorBarjChanging(value);
                    this.RaiseDataMemberChanging("bilAbkhorBarj");
                    this.ValidateProperty("bilAbkhorBarj", value);
                    this._bilAbkhorBarj = value;
                    this.RaiseDataMemberChanged("bilAbkhorBarj");
                    this.OnbilAbkhorBarjChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilHajmeBucket' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilHajmeBucket
        {
            get
            {
                return this._bilHajmeBucket;
            }
            set
            {
                if ((this._bilHajmeBucket != value))
                {
                    this.OnbilHajmeBucketChanging(value);
                    this.RaiseDataMemberChanging("bilHajmeBucket");
                    this.ValidateProperty("bilHajmeBucket", value);
                    this._bilHajmeBucket = value;
                    this.RaiseDataMemberChanged("bilHajmeBucket");
                    this.OnbilHajmeBucketChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilHajmeMasaleh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilHajmeMasaleh
        {
            get
            {
                return this._bilHajmeMasaleh;
            }
            set
            {
                if ((this._bilHajmeMasaleh != value))
                {
                    this.OnbilHajmeMasalehChanging(value);
                    this.RaiseDataMemberChanging("bilHajmeMasaleh");
                    this.ValidateProperty("bilHajmeMasaleh", value);
                    this._bilHajmeMasaleh = value;
                    this.RaiseDataMemberChanged("bilHajmeMasaleh");
                    this.OnbilHajmeMasalehChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilLayroobMalek' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string bilLayroobMalek
        {
            get
            {
                return this._bilLayroobMalek;
            }
            set
            {
                if ((this._bilLayroobMalek != value))
                {
                    this.OnbilLayroobMalekChanging(value);
                    this.RaiseDataMemberChanging("bilLayroobMalek");
                    this.ValidateProperty("bilLayroobMalek", value);
                    this._bilLayroobMalek = value;
                    this.RaiseDataMemberChanged("bilLayroobMalek");
                    this.OnbilLayroobMalekChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilMasrafSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilMasrafSookht
        {
            get
            {
                return this._bilMasrafSookht;
            }
            set
            {
                if ((this._bilMasrafSookht != value))
                {
                    this.OnbilMasrafSookhtChanging(value);
                    this.RaiseDataMemberChanging("bilMasrafSookht");
                    this.ValidateProperty("bilMasrafSookht", value);
                    this._bilMasrafSookht = value;
                    this.RaiseDataMemberChanged("bilMasrafSookht");
                    this.OnbilMasrafSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilMaxHajmeBucket' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilMaxHajmeBucket
        {
            get
            {
                return this._bilMaxHajmeBucket;
            }
            set
            {
                if ((this._bilMaxHajmeBucket != value))
                {
                    this.OnbilMaxHajmeBucketChanging(value);
                    this.RaiseDataMemberChanging("bilMaxHajmeBucket");
                    this.ValidateProperty("bilMaxHajmeBucket", value);
                    this._bilMaxHajmeBucket = value;
                    this.RaiseDataMemberChanged("bilMaxHajmeBucket");
                    this.OnbilMaxHajmeBucketChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilMaxOmgh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> bilMaxOmgh
        {
            get
            {
                return this._bilMaxOmgh;
            }
            set
            {
                if ((this._bilMaxOmgh != value))
                {
                    this.OnbilMaxOmghChanging(value);
                    this.RaiseDataMemberChanging("bilMaxOmgh");
                    this.ValidateProperty("bilMaxOmgh", value);
                    this._bilMaxOmgh = value;
                    this.RaiseDataMemberChanged("bilMaxOmgh");
                    this.OnbilMaxOmghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'bilNameLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string bilNameLayroob
        {
            get
            {
                return this._bilNameLayroob;
            }
            set
            {
                if ((this._bilNameLayroob != value))
                {
                    this.OnbilNameLayroobChanging(value);
                    this.RaiseDataMemberChanging("bilNameLayroob");
                    this.ValidateProperty("bilNameLayroob", value);
                    this._bilNameLayroob = value;
                    this.RaiseDataMemberChanged("bilNameLayroob");
                    this.OnbilNameLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ContractCost' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ContractCost
        {
            get
            {
                return this._contractCost;
            }
            set
            {
                if ((this._contractCost != value))
                {
                    this.OnContractCostChanging(value);
                    this.RaiseDataMemberChanging("ContractCost");
                    this.ValidateProperty("ContractCost", value);
                    this._contractCost = value;
                    this.RaiseDataMemberChanged("ContractCost");
                    this.OnContractCostChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ContractFinishDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> ContractFinishDate
        {
            get
            {
                return this._contractFinishDate;
            }
            set
            {
                if ((this._contractFinishDate != value))
                {
                    this.OnContractFinishDateChanging(value);
                    this.RaiseDataMemberChanging("ContractFinishDate");
                    this.ValidateProperty("ContractFinishDate", value);
                    this._contractFinishDate = value;
                    this.RaiseDataMemberChanged("ContractFinishDate");
                    this.OnContractFinishDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ContractPeriod' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ContractPeriod
        {
            get
            {
                return this._contractPeriod;
            }
            set
            {
                if ((this._contractPeriod != value))
                {
                    this.OnContractPeriodChanging(value);
                    this.RaiseDataMemberChanging("ContractPeriod");
                    this.ValidateProperty("ContractPeriod", value);
                    this._contractPeriod = value;
                    this.RaiseDataMemberChanged("ContractPeriod");
                    this.OnContractPeriodChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ContractStartDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> ContractStartDate
        {
            get
            {
                return this._contractStartDate;
            }
            set
            {
                if ((this._contractStartDate != value))
                {
                    this.OnContractStartDateChanging(value);
                    this.RaiseDataMemberChanging("ContractStartDate");
                    this.ValidateProperty("ContractStartDate", value);
                    this._contractStartDate = value;
                    this.RaiseDataMemberChanged("ContractStartDate");
                    this.OnContractStartDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutAbkhorLayroob' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutAbkhorLayroob
        {
            get
            {
                return this._cutAbkhorLayroob;
            }
            set
            {
                if ((this._cutAbkhorLayroob != value))
                {
                    this.OncutAbkhorLayroobChanging(value);
                    this.RaiseDataMemberChanging("cutAbkhorLayroob");
                    this.ValidateProperty("cutAbkhorLayroob", value);
                    this._cutAbkhorLayroob = value;
                    this.RaiseDataMemberChanged("cutAbkhorLayroob");
                    this.OncutAbkhorLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutGhodrateCutter' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutGhodrateCutter
        {
            get
            {
                return this._cutGhodrateCutter;
            }
            set
            {
                if ((this._cutGhodrateCutter != value))
                {
                    this.OncutGhodrateCutterChanging(value);
                    this.RaiseDataMemberChanging("cutGhodrateCutter");
                    this.ValidateProperty("cutGhodrateCutter", value);
                    this._cutGhodrateCutter = value;
                    this.RaiseDataMemberChanged("cutGhodrateCutter");
                    this.OncutGhodrateCutterChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutGhodratePomp' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutGhodratePomp
        {
            get
            {
                return this._cutGhodratePomp;
            }
            set
            {
                if ((this._cutGhodratePomp != value))
                {
                    this.OncutGhodratePompChanging(value);
                    this.RaiseDataMemberChanging("cutGhodratePomp");
                    this.ValidateProperty("cutGhodratePomp", value);
                    this._cutGhodratePomp = value;
                    this.RaiseDataMemberChanged("cutGhodratePomp");
                    this.OncutGhodratePompChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutLayroobMalek' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string cutLayroobMalek
        {
            get
            {
                return this._cutLayroobMalek;
            }
            set
            {
                if ((this._cutLayroobMalek != value))
                {
                    this.OncutLayroobMalekChanging(value);
                    this.RaiseDataMemberChanging("cutLayroobMalek");
                    this.ValidateProperty("cutLayroobMalek", value);
                    this._cutLayroobMalek = value;
                    this.RaiseDataMemberChanged("cutLayroobMalek");
                    this.OncutLayroobMalekChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMaharLangarCount' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMaharLangarCount
        {
            get
            {
                return this._cutMaharLangarCount;
            }
            set
            {
                if ((this._cutMaharLangarCount != value))
                {
                    this.OncutMaharLangarCountChanging(value);
                    this.RaiseDataMemberChanging("cutMaharLangarCount");
                    this.ValidateProperty("cutMaharLangarCount", value);
                    this._cutMaharLangarCount = value;
                    this.RaiseDataMemberChanged("cutMaharLangarCount");
                    this.OncutMaharLangarCountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMaharLangarWeight' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMaharLangarWeight
        {
            get
            {
                return this._cutMaharLangarWeight;
            }
            set
            {
                if ((this._cutMaharLangarWeight != value))
                {
                    this.OncutMaharLangarWeightChanging(value);
                    this.RaiseDataMemberChanging("cutMaharLangarWeight");
                    this.ValidateProperty("cutMaharLangarWeight", value);
                    this._cutMaharLangarWeight = value;
                    this.RaiseDataMemberChanged("cutMaharLangarWeight");
                    this.OncutMaharLangarWeightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMaharSpad' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMaharSpad
        {
            get
            {
                return this._cutMaharSpad;
            }
            set
            {
                if ((this._cutMaharSpad != value))
                {
                    this.OncutMaharSpadChanging(value);
                    this.RaiseDataMemberChanging("cutMaharSpad");
                    this.ValidateProperty("cutMaharSpad", value);
                    this._cutMaharSpad = value;
                    this.RaiseDataMemberChanged("cutMaharSpad");
                    this.OncutMaharSpadChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMasrafSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMasrafSookht
        {
            get
            {
                return this._cutMasrafSookht;
            }
            set
            {
                if ((this._cutMasrafSookht != value))
                {
                    this.OncutMasrafSookhtChanging(value);
                    this.RaiseDataMemberChanging("cutMasrafSookht");
                    this.ValidateProperty("cutMasrafSookht", value);
                    this._cutMasrafSookht = value;
                    this.RaiseDataMemberChanged("cutMasrafSookht");
                    this.OncutMasrafSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMaxOmgh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMaxOmgh
        {
            get
            {
                return this._cutMaxOmgh;
            }
            set
            {
                if ((this._cutMaxOmgh != value))
                {
                    this.OncutMaxOmghChanging(value);
                    this.RaiseDataMemberChanging("cutMaxOmgh");
                    this.ValidateProperty("cutMaxOmgh", value);
                    this._cutMaxOmgh = value;
                    this.RaiseDataMemberChanged("cutMaxOmgh");
                    this.OncutMaxOmghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutMinOmgh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> cutMinOmgh
        {
            get
            {
                return this._cutMinOmgh;
            }
            set
            {
                if ((this._cutMinOmgh != value))
                {
                    this.OncutMinOmghChanging(value);
                    this.RaiseDataMemberChanging("cutMinOmgh");
                    this.ValidateProperty("cutMinOmgh", value);
                    this._cutMinOmgh = value;
                    this.RaiseDataMemberChanged("cutMinOmgh");
                    this.OncutMinOmghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'cutNameLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string cutNameLayroob
        {
            get
            {
                return this._cutNameLayroob;
            }
            set
            {
                if ((this._cutNameLayroob != value))
                {
                    this.OncutNameLayroobChanging(value);
                    this.RaiseDataMemberChanging("cutNameLayroob");
                    this.ValidateProperty("cutNameLayroob", value);
                    this._cutNameLayroob = value;
                    this.RaiseDataMemberChanged("cutNameLayroob");
                    this.OncutNameLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Description' value.
        /// </summary>
        [DataMember()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((this._description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._description = value;
                    this.RaiseDataMemberChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaFasele' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disDaryaFasele
        {
            get
            {
                return this._disDaryaFasele;
            }
            set
            {
                if ((this._disDaryaFasele != value))
                {
                    this.OndisDaryaFaseleChanging(value);
                    this.RaiseDataMemberChanging("disDaryaFasele");
                    this.ValidateProperty("disDaryaFasele", value);
                    this._disDaryaFasele = value;
                    this.RaiseDataMemberChanged("disDaryaFasele");
                    this.OndisDaryaFaseleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaLat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disDaryaLat
        {
            get
            {
                return this._disDaryaLat;
            }
            set
            {
                if ((this._disDaryaLat != value))
                {
                    this.OndisDaryaLatChanging(value);
                    this.RaiseDataMemberChanging("disDaryaLat");
                    this.ValidateProperty("disDaryaLat", value);
                    this._disDaryaLat = value;
                    this.RaiseDataMemberChanged("disDaryaLat");
                    this.OndisDaryaLatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaLong' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disDaryaLong
        {
            get
            {
                return this._disDaryaLong;
            }
            set
            {
                if ((this._disDaryaLong != value))
                {
                    this.OndisDaryaLongChanging(value);
                    this.RaiseDataMemberChanging("disDaryaLong");
                    this.ValidateProperty("disDaryaLong", value);
                    this._disDaryaLong = value;
                    this.RaiseDataMemberChanged("disDaryaLong");
                    this.OndisDaryaLongChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaNameMahdoode' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string disDaryaNameMahdoode
        {
            get
            {
                return this._disDaryaNameMahdoode;
            }
            set
            {
                if ((this._disDaryaNameMahdoode != value))
                {
                    this.OndisDaryaNameMahdoodeChanging(value);
                    this.RaiseDataMemberChanging("disDaryaNameMahdoode");
                    this.ValidateProperty("disDaryaNameMahdoode", value);
                    this._disDaryaNameMahdoode = value;
                    this.RaiseDataMemberChanged("disDaryaNameMahdoode");
                    this.OndisDaryaNameMahdoodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaOmgheMahdoode' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disDaryaOmgheMahdoode
        {
            get
            {
                return this._disDaryaOmgheMahdoode;
            }
            set
            {
                if ((this._disDaryaOmgheMahdoode != value))
                {
                    this.OndisDaryaOmgheMahdoodeChanging(value);
                    this.RaiseDataMemberChanging("disDaryaOmgheMahdoode");
                    this.ValidateProperty("disDaryaOmgheMahdoode", value);
                    this._disDaryaOmgheMahdoode = value;
                    this.RaiseDataMemberChanged("disDaryaOmgheMahdoode");
                    this.OndisDaryaOmgheMahdoodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disDaryaZaman' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disDaryaZaman
        {
            get
            {
                return this._disDaryaZaman;
            }
            set
            {
                if ((this._disDaryaZaman != value))
                {
                    this.OndisDaryaZamanChanging(value);
                    this.RaiseDataMemberChanging("disDaryaZaman");
                    this.ValidateProperty("disDaryaZaman", value);
                    this._disDaryaZaman = value;
                    this.RaiseDataMemberChanged("disDaryaZaman");
                    this.OndisDaryaZamanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNiazeTasbit' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> disKhoshkiNiazeTasbit
        {
            get
            {
                return this._disKhoshkiNiazeTasbit;
            }
            set
            {
                if ((this._disKhoshkiNiazeTasbit != value))
                {
                    this.OndisKhoshkiNiazeTasbitChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNiazeTasbit");
                    this.ValidateProperty("disKhoshkiNiazeTasbit", value);
                    this._disKhoshkiNiazeTasbit = value;
                    this.RaiseDataMemberChanged("disKhoshkiNiazeTasbit");
                    this.OndisKhoshkiNiazeTasbitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo1Fasele' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo1Fasele
        {
            get
            {
                return this._disKhoshkiNo1Fasele;
            }
            set
            {
                if ((this._disKhoshkiNo1Fasele != value))
                {
                    this.OndisKhoshkiNo1FaseleChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo1Fasele");
                    this.ValidateProperty("disKhoshkiNo1Fasele", value);
                    this._disKhoshkiNo1Fasele = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo1Fasele");
                    this.OndisKhoshkiNo1FaseleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo1Hajm' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo1Hajm
        {
            get
            {
                return this._disKhoshkiNo1Hajm;
            }
            set
            {
                if ((this._disKhoshkiNo1Hajm != value))
                {
                    this.OndisKhoshkiNo1HajmChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo1Hajm");
                    this.ValidateProperty("disKhoshkiNo1Hajm", value);
                    this._disKhoshkiNo1Hajm = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo1Hajm");
                    this.OndisKhoshkiNo1HajmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo1Masahat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo1Masahat
        {
            get
            {
                return this._disKhoshkiNo1Masahat;
            }
            set
            {
                if ((this._disKhoshkiNo1Masahat != value))
                {
                    this.OndisKhoshkiNo1MasahatChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo1Masahat");
                    this.ValidateProperty("disKhoshkiNo1Masahat", value);
                    this._disKhoshkiNo1Masahat = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo1Masahat");
                    this.OndisKhoshkiNo1MasahatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo1Tool' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo1Tool
        {
            get
            {
                return this._disKhoshkiNo1Tool;
            }
            set
            {
                if ((this._disKhoshkiNo1Tool != value))
                {
                    this.OndisKhoshkiNo1ToolChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo1Tool");
                    this.ValidateProperty("disKhoshkiNo1Tool", value);
                    this._disKhoshkiNo1Tool = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo1Tool");
                    this.OndisKhoshkiNo1ToolChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo2Fasele' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo2Fasele
        {
            get
            {
                return this._disKhoshkiNo2Fasele;
            }
            set
            {
                if ((this._disKhoshkiNo2Fasele != value))
                {
                    this.OndisKhoshkiNo2FaseleChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo2Fasele");
                    this.ValidateProperty("disKhoshkiNo2Fasele", value);
                    this._disKhoshkiNo2Fasele = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo2Fasele");
                    this.OndisKhoshkiNo2FaseleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo2Hajm' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo2Hajm
        {
            get
            {
                return this._disKhoshkiNo2Hajm;
            }
            set
            {
                if ((this._disKhoshkiNo2Hajm != value))
                {
                    this.OndisKhoshkiNo2HajmChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo2Hajm");
                    this.ValidateProperty("disKhoshkiNo2Hajm", value);
                    this._disKhoshkiNo2Hajm = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo2Hajm");
                    this.OndisKhoshkiNo2HajmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo2Masahat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo2Masahat
        {
            get
            {
                return this._disKhoshkiNo2Masahat;
            }
            set
            {
                if ((this._disKhoshkiNo2Masahat != value))
                {
                    this.OndisKhoshkiNo2MasahatChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo2Masahat");
                    this.ValidateProperty("disKhoshkiNo2Masahat", value);
                    this._disKhoshkiNo2Masahat = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo2Masahat");
                    this.OndisKhoshkiNo2MasahatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo2Tool' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo2Tool
        {
            get
            {
                return this._disKhoshkiNo2Tool;
            }
            set
            {
                if ((this._disKhoshkiNo2Tool != value))
                {
                    this.OndisKhoshkiNo2ToolChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo2Tool");
                    this.ValidateProperty("disKhoshkiNo2Tool", value);
                    this._disKhoshkiNo2Tool = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo2Tool");
                    this.OndisKhoshkiNo2ToolChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo3Fasele' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo3Fasele
        {
            get
            {
                return this._disKhoshkiNo3Fasele;
            }
            set
            {
                if ((this._disKhoshkiNo3Fasele != value))
                {
                    this.OndisKhoshkiNo3FaseleChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo3Fasele");
                    this.ValidateProperty("disKhoshkiNo3Fasele", value);
                    this._disKhoshkiNo3Fasele = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo3Fasele");
                    this.OndisKhoshkiNo3FaseleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo3Hajm' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo3Hajm
        {
            get
            {
                return this._disKhoshkiNo3Hajm;
            }
            set
            {
                if ((this._disKhoshkiNo3Hajm != value))
                {
                    this.OndisKhoshkiNo3HajmChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo3Hajm");
                    this.ValidateProperty("disKhoshkiNo3Hajm", value);
                    this._disKhoshkiNo3Hajm = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo3Hajm");
                    this.OndisKhoshkiNo3HajmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo3Masahat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo3Masahat
        {
            get
            {
                return this._disKhoshkiNo3Masahat;
            }
            set
            {
                if ((this._disKhoshkiNo3Masahat != value))
                {
                    this.OndisKhoshkiNo3MasahatChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo3Masahat");
                    this.ValidateProperty("disKhoshkiNo3Masahat", value);
                    this._disKhoshkiNo3Masahat = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo3Masahat");
                    this.OndisKhoshkiNo3MasahatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'disKhoshkiNo3Tool' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> disKhoshkiNo3Tool
        {
            get
            {
                return this._disKhoshkiNo3Tool;
            }
            set
            {
                if ((this._disKhoshkiNo3Tool != value))
                {
                    this.OndisKhoshkiNo3ToolChanging(value);
                    this.RaiseDataMemberChanging("disKhoshkiNo3Tool");
                    this.ValidateProperty("disKhoshkiNo3Tool", value);
                    this._disKhoshkiNo3Tool = value;
                    this.RaiseDataMemberChanged("disKhoshkiNo3Tool");
                    this.OndisKhoshkiNo3ToolChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountBilMechanici' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountBilMechanici
        {
            get
            {
                return this._equCountBilMechanici;
            }
            set
            {
                if ((this._equCountBilMechanici != value))
                {
                    this.OnequCountBilMechaniciChanging(value);
                    this.RaiseDataMemberChanging("equCountBilMechanici");
                    this.ValidateProperty("equCountBilMechanici", value);
                    this._equCountBilMechanici = value;
                    this.RaiseDataMemberChanged("equCountBilMechanici");
                    this.OnequCountBilMechaniciChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountBouldoser' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountBouldoser
        {
            get
            {
                return this._equCountBouldoser;
            }
            set
            {
                if ((this._equCountBouldoser != value))
                {
                    this.OnequCountBouldoserChanging(value);
                    this.RaiseDataMemberChanging("equCountBouldoser");
                    this.ValidateProperty("equCountBouldoser", value);
                    this._equCountBouldoser = value;
                    this.RaiseDataMemberChanged("equCountBouldoser");
                    this.OnequCountBouldoserChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountDGPS' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountDGPS
        {
            get
            {
                return this._equCountDGPS;
            }
            set
            {
                if ((this._equCountDGPS != value))
                {
                    this.OnequCountDGPSChanging(value);
                    this.RaiseDataMemberChanging("equCountDGPS");
                    this.ValidateProperty("equCountDGPS", value);
                    this._equCountDGPS = value;
                    this.RaiseDataMemberChanged("equCountDGPS");
                    this.OnequCountDGPSChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountDiesel' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountDiesel
        {
            get
            {
                return this._equCountDiesel;
            }
            set
            {
                if ((this._equCountDiesel != value))
                {
                    this.OnequCountDieselChanging(value);
                    this.RaiseDataMemberChanging("equCountDiesel");
                    this.ValidateProperty("equCountDiesel", value);
                    this._equCountDiesel = value;
                    this.RaiseDataMemberChanged("equCountDiesel");
                    this.OnequCountDieselChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountEcosounder' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountEcosounder
        {
            get
            {
                return this._equCountEcosounder;
            }
            set
            {
                if ((this._equCountEcosounder != value))
                {
                    this.OnequCountEcosounderChanging(value);
                    this.RaiseDataMemberChanging("equCountEcosounder");
                    this.ValidateProperty("equCountEcosounder", value);
                    this._equCountEcosounder = value;
                    this.RaiseDataMemberChanged("equCountEcosounder");
                    this.OnequCountEcosounderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountGhayegh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountGhayegh
        {
            get
            {
                return this._equCountGhayegh;
            }
            set
            {
                if ((this._equCountGhayegh != value))
                {
                    this.OnequCountGhayeghChanging(value);
                    this.RaiseDataMemberChanging("equCountGhayegh");
                    this.ValidateProperty("equCountGhayegh", value);
                    this._equCountGhayegh = value;
                    this.RaiseDataMemberChanged("equCountGhayegh");
                    this.OnequCountGhayeghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountJaresaghil' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountJaresaghil
        {
            get
            {
                return this._equCountJaresaghil;
            }
            set
            {
                if ((this._equCountJaresaghil != value))
                {
                    this.OnequCountJaresaghilChanging(value);
                    this.RaiseDataMemberChanging("equCountJaresaghil");
                    this.ValidateProperty("equCountJaresaghil", value);
                    this._equCountJaresaghil = value;
                    this.RaiseDataMemberChanged("equCountJaresaghil");
                    this.OnequCountJaresaghilChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountKamionCompressi' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountKamionCompressi
        {
            get
            {
                return this._equCountKamionCompressi;
            }
            set
            {
                if ((this._equCountKamionCompressi != value))
                {
                    this.OnequCountKamionCompressiChanging(value);
                    this.RaiseDataMemberChanging("equCountKamionCompressi");
                    this.ValidateProperty("equCountKamionCompressi", value);
                    this._equCountKamionCompressi = value;
                    this.RaiseDataMemberChanged("equCountKamionCompressi");
                    this.OnequCountKamionCompressiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountKamionJaresaghildar' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountKamionJaresaghildar
        {
            get
            {
                return this._equCountKamionJaresaghildar;
            }
            set
            {
                if ((this._equCountKamionJaresaghildar != value))
                {
                    this.OnequCountKamionJaresaghildarChanging(value);
                    this.RaiseDataMemberChanging("equCountKamionJaresaghildar");
                    this.ValidateProperty("equCountKamionJaresaghildar", value);
                    this._equCountKamionJaresaghildar = value;
                    this.RaiseDataMemberChanged("equCountKamionJaresaghildar");
                    this.OnequCountKamionJaresaghildarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountKhateLoole' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountKhateLoole
        {
            get
            {
                return this._equCountKhateLoole;
            }
            set
            {
                if ((this._equCountKhateLoole != value))
                {
                    this.OnequCountKhateLooleChanging(value);
                    this.RaiseDataMemberChanging("equCountKhateLoole");
                    this.ValidateProperty("equCountKhateLoole", value);
                    this._equCountKhateLoole = value;
                    this.RaiseDataMemberChanged("equCountKhateLoole");
                    this.OnequCountKhateLooleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountLoader' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountLoader
        {
            get
            {
                return this._equCountLoader;
            }
            set
            {
                if ((this._equCountLoader != value))
                {
                    this.OnequCountLoaderChanging(value);
                    this.RaiseDataMemberChanging("equCountLoader");
                    this.ValidateProperty("equCountLoader", value);
                    this._equCountLoader = value;
                    this.RaiseDataMemberChanged("equCountLoader");
                    this.OnequCountLoaderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountNivo' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountNivo
        {
            get
            {
                return this._equCountNivo;
            }
            set
            {
                if ((this._equCountNivo != value))
                {
                    this.OnequCountNivoChanging(value);
                    this.RaiseDataMemberChanging("equCountNivo");
                    this.ValidateProperty("equCountNivo", value);
                    this._equCountNivo = value;
                    this.RaiseDataMemberChanged("equCountNivo");
                    this.OnequCountNivoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountRTK' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountRTK
        {
            get
            {
                return this._equCountRTK;
            }
            set
            {
                if ((this._equCountRTK != value))
                {
                    this.OnequCountRTKChanging(value);
                    this.RaiseDataMemberChanging("equCountRTK");
                    this.ValidateProperty("equCountRTK", value);
                    this._equCountRTK = value;
                    this.RaiseDataMemberChanged("equCountRTK");
                    this.OnequCountRTKChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountSpeedometer' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountSpeedometer
        {
            get
            {
                return this._equCountSpeedometer;
            }
            set
            {
                if ((this._equCountSpeedometer != value))
                {
                    this.OnequCountSpeedometerChanging(value);
                    this.RaiseDataMemberChanging("equCountSpeedometer");
                    this.ValidateProperty("equCountSpeedometer", value);
                    this._equCountSpeedometer = value;
                    this.RaiseDataMemberChanged("equCountSpeedometer");
                    this.OnequCountSpeedometerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountTankerAb' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountTankerAb
        {
            get
            {
                return this._equCountTankerAb;
            }
            set
            {
                if ((this._equCountTankerAb != value))
                {
                    this.OnequCountTankerAbChanging(value);
                    this.RaiseDataMemberChanging("equCountTankerAb");
                    this.ValidateProperty("equCountTankerAb", value);
                    this._equCountTankerAb = value;
                    this.RaiseDataMemberChanged("equCountTankerAb");
                    this.OnequCountTankerAbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountTankerSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountTankerSookht
        {
            get
            {
                return this._equCountTankerSookht;
            }
            set
            {
                if ((this._equCountTankerSookht != value))
                {
                    this.OnequCountTankerSookhtChanging(value);
                    this.RaiseDataMemberChanging("equCountTankerSookht");
                    this.ValidateProperty("equCountTankerSookht", value);
                    this._equCountTankerSookht = value;
                    this.RaiseDataMemberChanged("equCountTankerSookht");
                    this.OnequCountTankerSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountTideGuage' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountTideGuage
        {
            get
            {
                return this._equCountTideGuage;
            }
            set
            {
                if ((this._equCountTideGuage != value))
                {
                    this.OnequCountTideGuageChanging(value);
                    this.RaiseDataMemberChanging("equCountTideGuage");
                    this.ValidateProperty("equCountTideGuage", value);
                    this._equCountTideGuage = value;
                    this.RaiseDataMemberChanged("equCountTideGuage");
                    this.OnequCountTideGuageChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'equCountTotalStation' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> equCountTotalStation
        {
            get
            {
                return this._equCountTotalStation;
            }
            set
            {
                if ((this._equCountTotalStation != value))
                {
                    this.OnequCountTotalStationChanging(value);
                    this.RaiseDataMemberChanging("equCountTotalStation");
                    this.ValidateProperty("equCountTotalStation", value);
                    this._equCountTotalStation = value;
                    this.RaiseDataMemberChanged("equCountTotalStation");
                    this.OnequCountTotalStationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1AmalkardeLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer1AmalkardeLayroob
        {
            get
            {
                return this._geoLayer1AmalkardeLayroob;
            }
            set
            {
                if ((this._geoLayer1AmalkardeLayroob != value))
                {
                    this.OngeoLayer1AmalkardeLayroobChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1AmalkardeLayroob");
                    this.ValidateProperty("geoLayer1AmalkardeLayroob", value);
                    this._geoLayer1AmalkardeLayroob = value;
                    this.RaiseDataMemberChanged("geoLayer1AmalkardeLayroob");
                    this.OngeoLayer1AmalkardeLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1JenseKhak' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer1JenseKhak
        {
            get
            {
                return this._geoLayer1JenseKhak;
            }
            set
            {
                if ((this._geoLayer1JenseKhak != value))
                {
                    this.OngeoLayer1JenseKhakChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1JenseKhak");
                    this.ValidateProperty("geoLayer1JenseKhak", value);
                    this._geoLayer1JenseKhak = value;
                    this.RaiseDataMemberChanged("geoLayer1JenseKhak");
                    this.OngeoLayer1JenseKhakChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1LaroobPishnahadi' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer1LaroobPishnahadi
        {
            get
            {
                return this._geoLayer1LaroobPishnahadi;
            }
            set
            {
                if ((this._geoLayer1LaroobPishnahadi != value))
                {
                    this.OngeoLayer1LaroobPishnahadiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1LaroobPishnahadi");
                    this.ValidateProperty("geoLayer1LaroobPishnahadi", value);
                    this._geoLayer1LaroobPishnahadi = value;
                    this.RaiseDataMemberChanged("geoLayer1LaroobPishnahadi");
                    this.OngeoLayer1LaroobPishnahadiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1LayroobeBekarGerefte' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer1LayroobeBekarGerefte
        {
            get
            {
                return this._geoLayer1LayroobeBekarGerefte;
            }
            set
            {
                if ((this._geoLayer1LayroobeBekarGerefte != value))
                {
                    this.OngeoLayer1LayroobeBekarGerefteChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1LayroobeBekarGerefte");
                    this.ValidateProperty("geoLayer1LayroobeBekarGerefte", value);
                    this._geoLayer1LayroobeBekarGerefte = value;
                    this.RaiseDataMemberChanged("geoLayer1LayroobeBekarGerefte");
                    this.OngeoLayer1LayroobeBekarGerefteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1SPT' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer1SPT
        {
            get
            {
                return this._geoLayer1SPT;
            }
            set
            {
                if ((this._geoLayer1SPT != value))
                {
                    this.OngeoLayer1SPTChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1SPT");
                    this.ValidateProperty("geoLayer1SPT", value);
                    this._geoLayer1SPT = value;
                    this.RaiseDataMemberChanged("geoLayer1SPT");
                    this.OngeoLayer1SPTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1TarazeEbtedaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer1TarazeEbtedaei
        {
            get
            {
                return this._geoLayer1TarazeEbtedaei;
            }
            set
            {
                if ((this._geoLayer1TarazeEbtedaei != value))
                {
                    this.OngeoLayer1TarazeEbtedaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1TarazeEbtedaei");
                    this.ValidateProperty("geoLayer1TarazeEbtedaei", value);
                    this._geoLayer1TarazeEbtedaei = value;
                    this.RaiseDataMemberChanged("geoLayer1TarazeEbtedaei");
                    this.OngeoLayer1TarazeEbtedaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1TarazeEntehaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer1TarazeEntehaei
        {
            get
            {
                return this._geoLayer1TarazeEntehaei;
            }
            set
            {
                if ((this._geoLayer1TarazeEntehaei != value))
                {
                    this.OngeoLayer1TarazeEntehaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1TarazeEntehaei");
                    this.ValidateProperty("geoLayer1TarazeEntehaei", value);
                    this._geoLayer1TarazeEntehaei = value;
                    this.RaiseDataMemberChanged("geoLayer1TarazeEntehaei");
                    this.OngeoLayer1TarazeEntehaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer1ZekhamatLayer' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer1ZekhamatLayer
        {
            get
            {
                return this._geoLayer1ZekhamatLayer;
            }
            set
            {
                if ((this._geoLayer1ZekhamatLayer != value))
                {
                    this.OngeoLayer1ZekhamatLayerChanging(value);
                    this.RaiseDataMemberChanging("geoLayer1ZekhamatLayer");
                    this.ValidateProperty("geoLayer1ZekhamatLayer", value);
                    this._geoLayer1ZekhamatLayer = value;
                    this.RaiseDataMemberChanged("geoLayer1ZekhamatLayer");
                    this.OngeoLayer1ZekhamatLayerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2AmalkardeLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer2AmalkardeLayroob
        {
            get
            {
                return this._geoLayer2AmalkardeLayroob;
            }
            set
            {
                if ((this._geoLayer2AmalkardeLayroob != value))
                {
                    this.OngeoLayer2AmalkardeLayroobChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2AmalkardeLayroob");
                    this.ValidateProperty("geoLayer2AmalkardeLayroob", value);
                    this._geoLayer2AmalkardeLayroob = value;
                    this.RaiseDataMemberChanged("geoLayer2AmalkardeLayroob");
                    this.OngeoLayer2AmalkardeLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2JenseKhak' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer2JenseKhak
        {
            get
            {
                return this._geoLayer2JenseKhak;
            }
            set
            {
                if ((this._geoLayer2JenseKhak != value))
                {
                    this.OngeoLayer2JenseKhakChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2JenseKhak");
                    this.ValidateProperty("geoLayer2JenseKhak", value);
                    this._geoLayer2JenseKhak = value;
                    this.RaiseDataMemberChanged("geoLayer2JenseKhak");
                    this.OngeoLayer2JenseKhakChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2LaroobPishnahadi' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer2LaroobPishnahadi
        {
            get
            {
                return this._geoLayer2LaroobPishnahadi;
            }
            set
            {
                if ((this._geoLayer2LaroobPishnahadi != value))
                {
                    this.OngeoLayer2LaroobPishnahadiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2LaroobPishnahadi");
                    this.ValidateProperty("geoLayer2LaroobPishnahadi", value);
                    this._geoLayer2LaroobPishnahadi = value;
                    this.RaiseDataMemberChanged("geoLayer2LaroobPishnahadi");
                    this.OngeoLayer2LaroobPishnahadiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2LayroobeBekarGerefte' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer2LayroobeBekarGerefte
        {
            get
            {
                return this._geoLayer2LayroobeBekarGerefte;
            }
            set
            {
                if ((this._geoLayer2LayroobeBekarGerefte != value))
                {
                    this.OngeoLayer2LayroobeBekarGerefteChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2LayroobeBekarGerefte");
                    this.ValidateProperty("geoLayer2LayroobeBekarGerefte", value);
                    this._geoLayer2LayroobeBekarGerefte = value;
                    this.RaiseDataMemberChanged("geoLayer2LayroobeBekarGerefte");
                    this.OngeoLayer2LayroobeBekarGerefteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2SPT' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer2SPT
        {
            get
            {
                return this._geoLayer2SPT;
            }
            set
            {
                if ((this._geoLayer2SPT != value))
                {
                    this.OngeoLayer2SPTChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2SPT");
                    this.ValidateProperty("geoLayer2SPT", value);
                    this._geoLayer2SPT = value;
                    this.RaiseDataMemberChanged("geoLayer2SPT");
                    this.OngeoLayer2SPTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2TarazeEbtedaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer2TarazeEbtedaei
        {
            get
            {
                return this._geoLayer2TarazeEbtedaei;
            }
            set
            {
                if ((this._geoLayer2TarazeEbtedaei != value))
                {
                    this.OngeoLayer2TarazeEbtedaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2TarazeEbtedaei");
                    this.ValidateProperty("geoLayer2TarazeEbtedaei", value);
                    this._geoLayer2TarazeEbtedaei = value;
                    this.RaiseDataMemberChanged("geoLayer2TarazeEbtedaei");
                    this.OngeoLayer2TarazeEbtedaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2TarazeEntehaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer2TarazeEntehaei
        {
            get
            {
                return this._geoLayer2TarazeEntehaei;
            }
            set
            {
                if ((this._geoLayer2TarazeEntehaei != value))
                {
                    this.OngeoLayer2TarazeEntehaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2TarazeEntehaei");
                    this.ValidateProperty("geoLayer2TarazeEntehaei", value);
                    this._geoLayer2TarazeEntehaei = value;
                    this.RaiseDataMemberChanged("geoLayer2TarazeEntehaei");
                    this.OngeoLayer2TarazeEntehaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer2ZekhamatLayer' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer2ZekhamatLayer
        {
            get
            {
                return this._geoLayer2ZekhamatLayer;
            }
            set
            {
                if ((this._geoLayer2ZekhamatLayer != value))
                {
                    this.OngeoLayer2ZekhamatLayerChanging(value);
                    this.RaiseDataMemberChanging("geoLayer2ZekhamatLayer");
                    this.ValidateProperty("geoLayer2ZekhamatLayer", value);
                    this._geoLayer2ZekhamatLayer = value;
                    this.RaiseDataMemberChanged("geoLayer2ZekhamatLayer");
                    this.OngeoLayer2ZekhamatLayerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3AmalkardeLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer3AmalkardeLayroob
        {
            get
            {
                return this._geoLayer3AmalkardeLayroob;
            }
            set
            {
                if ((this._geoLayer3AmalkardeLayroob != value))
                {
                    this.OngeoLayer3AmalkardeLayroobChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3AmalkardeLayroob");
                    this.ValidateProperty("geoLayer3AmalkardeLayroob", value);
                    this._geoLayer3AmalkardeLayroob = value;
                    this.RaiseDataMemberChanged("geoLayer3AmalkardeLayroob");
                    this.OngeoLayer3AmalkardeLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3JenseKhak' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer3JenseKhak
        {
            get
            {
                return this._geoLayer3JenseKhak;
            }
            set
            {
                if ((this._geoLayer3JenseKhak != value))
                {
                    this.OngeoLayer3JenseKhakChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3JenseKhak");
                    this.ValidateProperty("geoLayer3JenseKhak", value);
                    this._geoLayer3JenseKhak = value;
                    this.RaiseDataMemberChanged("geoLayer3JenseKhak");
                    this.OngeoLayer3JenseKhakChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3LaroobPishnahadi' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer3LaroobPishnahadi
        {
            get
            {
                return this._geoLayer3LaroobPishnahadi;
            }
            set
            {
                if ((this._geoLayer3LaroobPishnahadi != value))
                {
                    this.OngeoLayer3LaroobPishnahadiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3LaroobPishnahadi");
                    this.ValidateProperty("geoLayer3LaroobPishnahadi", value);
                    this._geoLayer3LaroobPishnahadi = value;
                    this.RaiseDataMemberChanged("geoLayer3LaroobPishnahadi");
                    this.OngeoLayer3LaroobPishnahadiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3LayroobeBekarGerefte' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer3LayroobeBekarGerefte
        {
            get
            {
                return this._geoLayer3LayroobeBekarGerefte;
            }
            set
            {
                if ((this._geoLayer3LayroobeBekarGerefte != value))
                {
                    this.OngeoLayer3LayroobeBekarGerefteChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3LayroobeBekarGerefte");
                    this.ValidateProperty("geoLayer3LayroobeBekarGerefte", value);
                    this._geoLayer3LayroobeBekarGerefte = value;
                    this.RaiseDataMemberChanged("geoLayer3LayroobeBekarGerefte");
                    this.OngeoLayer3LayroobeBekarGerefteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3SPT' value.
        /// </summary>
        [DataMember()]
        [StringLength(450)]
        public string geoLayer3SPT
        {
            get
            {
                return this._geoLayer3SPT;
            }
            set
            {
                if ((this._geoLayer3SPT != value))
                {
                    this.OngeoLayer3SPTChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3SPT");
                    this.ValidateProperty("geoLayer3SPT", value);
                    this._geoLayer3SPT = value;
                    this.RaiseDataMemberChanged("geoLayer3SPT");
                    this.OngeoLayer3SPTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3TarazeEbtedaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer3TarazeEbtedaei
        {
            get
            {
                return this._geoLayer3TarazeEbtedaei;
            }
            set
            {
                if ((this._geoLayer3TarazeEbtedaei != value))
                {
                    this.OngeoLayer3TarazeEbtedaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3TarazeEbtedaei");
                    this.ValidateProperty("geoLayer3TarazeEbtedaei", value);
                    this._geoLayer3TarazeEbtedaei = value;
                    this.RaiseDataMemberChanged("geoLayer3TarazeEbtedaei");
                    this.OngeoLayer3TarazeEbtedaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3TarazeEntehaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer3TarazeEntehaei
        {
            get
            {
                return this._geoLayer3TarazeEntehaei;
            }
            set
            {
                if ((this._geoLayer3TarazeEntehaei != value))
                {
                    this.OngeoLayer3TarazeEntehaeiChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3TarazeEntehaei");
                    this.ValidateProperty("geoLayer3TarazeEntehaei", value);
                    this._geoLayer3TarazeEntehaei = value;
                    this.RaiseDataMemberChanged("geoLayer3TarazeEntehaei");
                    this.OngeoLayer3TarazeEntehaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'geoLayer3ZekhamatLayer' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> geoLayer3ZekhamatLayer
        {
            get
            {
                return this._geoLayer3ZekhamatLayer;
            }
            set
            {
                if ((this._geoLayer3ZekhamatLayer != value))
                {
                    this.OngeoLayer3ZekhamatLayerChanging(value);
                    this.RaiseDataMemberChanging("geoLayer3ZekhamatLayer");
                    this.ValidateProperty("geoLayer3ZekhamatLayer", value);
                    this._geoLayer3ZekhamatLayer = value;
                    this.RaiseDataMemberChanged("geoLayer3ZekhamatLayer");
                    this.OngeoLayer3ZekhamatLayerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'HajmeLayroobi' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> HajmeLayroobi
        {
            get
            {
                return this._hajmeLayroobi;
            }
            set
            {
                if ((this._hajmeLayroobi != value))
                {
                    this.OnHajmeLayroobiChanging(value);
                    this.RaiseDataMemberChanging("HajmeLayroobi");
                    this.ValidateProperty("HajmeLayroobi", value);
                    this._hajmeLayroobi = value;
                    this.RaiseDataMemberChanged("HajmeLayroobi");
                    this.OnHajmeLayroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypAbkhorLayroob' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> hypAbkhorLayroob
        {
            get
            {
                return this._hypAbkhorLayroob;
            }
            set
            {
                if ((this._hypAbkhorLayroob != value))
                {
                    this.OnhypAbkhorLayroobChanging(value);
                    this.RaiseDataMemberChanging("hypAbkhorLayroob");
                    this.ValidateProperty("hypAbkhorLayroob", value);
                    this._hypAbkhorLayroob = value;
                    this.RaiseDataMemberChanged("hypAbkhorLayroob");
                    this.OnhypAbkhorLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypHajmeMakhzan' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> hypHajmeMakhzan
        {
            get
            {
                return this._hypHajmeMakhzan;
            }
            set
            {
                if ((this._hypHajmeMakhzan != value))
                {
                    this.OnhypHajmeMakhzanChanging(value);
                    this.RaiseDataMemberChanging("hypHajmeMakhzan");
                    this.ValidateProperty("hypHajmeMakhzan", value);
                    this._hypHajmeMakhzan = value;
                    this.RaiseDataMemberChanged("hypHajmeMakhzan");
                    this.OnhypHajmeMakhzanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypLayroobMalek' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string hypLayroobMalek
        {
            get
            {
                return this._hypLayroobMalek;
            }
            set
            {
                if ((this._hypLayroobMalek != value))
                {
                    this.OnhypLayroobMalekChanging(value);
                    this.RaiseDataMemberChanging("hypLayroobMalek");
                    this.ValidateProperty("hypLayroobMalek", value);
                    this._hypLayroobMalek = value;
                    this.RaiseDataMemberChanged("hypLayroobMalek");
                    this.OnhypLayroobMalekChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypMasrafSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> hypMasrafSookht
        {
            get
            {
                return this._hypMasrafSookht;
            }
            set
            {
                if ((this._hypMasrafSookht != value))
                {
                    this.OnhypMasrafSookhtChanging(value);
                    this.RaiseDataMemberChanging("hypMasrafSookht");
                    this.ValidateProperty("hypMasrafSookht", value);
                    this._hypMasrafSookht = value;
                    this.RaiseDataMemberChanged("hypMasrafSookht");
                    this.OnhypMasrafSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypMaxOmgh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> hypMaxOmgh
        {
            get
            {
                return this._hypMaxOmgh;
            }
            set
            {
                if ((this._hypMaxOmgh != value))
                {
                    this.OnhypMaxOmghChanging(value);
                    this.RaiseDataMemberChanging("hypMaxOmgh");
                    this.ValidateProperty("hypMaxOmgh", value);
                    this._hypMaxOmgh = value;
                    this.RaiseDataMemberChanged("hypMaxOmgh");
                    this.OnhypMaxOmghChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'hypNameLayroob' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string hypNameLayroob
        {
            get
            {
                return this._hypNameLayroob;
            }
            set
            {
                if ((this._hypNameLayroob != value))
                {
                    this.OnhypNameLayroobChanging(value);
                    this.RaiseDataMemberChanging("hypNameLayroob");
                    this.ValidateProperty("hypNameLayroob", value);
                    this._hypNameLayroob = value;
                    this.RaiseDataMemberChanged("hypNameLayroob");
                    this.OnhypNameLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsBarjKeshi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsBarjKeshi
        {
            get
            {
                return this._isBarjKeshi;
            }
            set
            {
                if ((this._isBarjKeshi != value))
                {
                    this.OnIsBarjKeshiChanging(value);
                    this.RaiseDataMemberChanging("IsBarjKeshi");
                    this.ValidateProperty("IsBarjKeshi", value);
                    this._isBarjKeshi = value;
                    this.RaiseDataMemberChanged("IsBarjKeshi");
                    this.OnIsBarjKeshiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsBiloBarooj' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsBiloBarooj
        {
            get
            {
                return this._isBiloBarooj;
            }
            set
            {
                if ((this._isBiloBarooj != value))
                {
                    this.OnIsBiloBaroojChanging(value);
                    this.RaiseDataMemberChanging("IsBiloBarooj");
                    this.ValidateProperty("IsBiloBarooj", value);
                    this._isBiloBarooj = value;
                    this.RaiseDataMemberChanged("IsBiloBarooj");
                    this.OnIsBiloBaroojChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsCanalDastrasi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsCanalDastrasi
        {
            get
            {
                return this._isCanalDastrasi;
            }
            set
            {
                if ((this._isCanalDastrasi != value))
                {
                    this.OnIsCanalDastrasiChanging(value);
                    this.RaiseDataMemberChanging("IsCanalDastrasi");
                    this.ValidateProperty("IsCanalDastrasi", value);
                    this._isCanalDastrasi = value;
                    this.RaiseDataMemberChanged("IsCanalDastrasi");
                    this.OnIsCanalDastrasiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsContineri' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsContineri
        {
            get
            {
                return this._isContineri;
            }
            set
            {
                if ((this._isContineri != value))
                {
                    this.OnIsContineriChanging(value);
                    this.RaiseDataMemberChanging("IsContineri");
                    this.ValidateProperty("IsContineri", value);
                    this._isContineri = value;
                    this.RaiseDataMemberChanged("IsContineri");
                    this.OnIsContineriChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsCutterSucktion' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsCutterSucktion
        {
            get
            {
                return this._isCutterSucktion;
            }
            set
            {
                if ((this._isCutterSucktion != value))
                {
                    this.OnIsCutterSucktionChanging(value);
                    this.RaiseDataMemberChanging("IsCutterSucktion");
                    this.ValidateProperty("IsCutterSucktion", value);
                    this._isCutterSucktion = value;
                    this.RaiseDataMemberChanged("IsCutterSucktion");
                    this.OnIsCutterSucktionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsDarBarejJanebi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsDarBarejJanebi
        {
            get
            {
                return this._isDarBarejJanebi;
            }
            set
            {
                if ((this._isDarBarejJanebi != value))
                {
                    this.OnIsDarBarejJanebiChanging(value);
                    this.RaiseDataMemberChanging("IsDarBarejJanebi");
                    this.ValidateProperty("IsDarBarejJanebi", value);
                    this._isDarBarejJanebi = value;
                    this.RaiseDataMemberChanged("IsDarBarejJanebi");
                    this.OnIsDarBarejJanebiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsEhdasi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsEhdasi
        {
            get
            {
                return this._isEhdasi;
            }
            set
            {
                if ((this._isEhdasi != value))
                {
                    this.OnIsEhdasiChanging(value);
                    this.RaiseDataMemberChanging("IsEhdasi");
                    this.ValidateProperty("IsEhdasi", value);
                    this._isEhdasi = value;
                    this.RaiseDataMemberChanged("IsEhdasi");
                    this.OnIsEhdasiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsFallebar' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsFallebar
        {
            get
            {
                return this._isFallebar;
            }
            set
            {
                if ((this._isFallebar != value))
                {
                    this.OnIsFallebarChanging(value);
                    this.RaiseDataMemberChanging("IsFallebar");
                    this.ValidateProperty("IsFallebar", value);
                    this._isFallebar = value;
                    this.RaiseDataMemberChanged("IsFallebar");
                    this.OnIsFallebarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsHozcheAramesh' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsHozcheAramesh
        {
            get
            {
                return this._isHozcheAramesh;
            }
            set
            {
                if ((this._isHozcheAramesh != value))
                {
                    this.OnIsHozcheArameshChanging(value);
                    this.RaiseDataMemberChanging("IsHozcheAramesh");
                    this.ValidateProperty("IsHozcheAramesh", value);
                    this._isHozcheAramesh = value;
                    this.RaiseDataMemberChanged("IsHozcheAramesh");
                    this.OnIsHozcheArameshChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsHyperSucktion' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsHyperSucktion
        {
            get
            {
                return this._isHyperSucktion;
            }
            set
            {
                if ((this._isHyperSucktion != value))
                {
                    this.OnIsHyperSucktionChanging(value);
                    this.RaiseDataMemberChanging("IsHyperSucktion");
                    this.ValidateProperty("IsHyperSucktion", value);
                    this._isHyperSucktion = value;
                    this.RaiseDataMemberChanged("IsHyperSucktion");
                    this.OnIsHyperSucktionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsJahateAssemble' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsJahateAssemble
        {
            get
            {
                return this._isJahateAssemble;
            }
            set
            {
                if ((this._isJahateAssemble != value))
                {
                    this.OnIsJahateAssembleChanging(value);
                    this.RaiseDataMemberChanging("IsJahateAssemble");
                    this.ValidateProperty("IsJahateAssemble", value);
                    this._isJahateAssemble = value;
                    this.RaiseDataMemberChanged("IsJahateAssemble");
                    this.OnIsJahateAssembleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsKalayeOmomi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsKalayeOmomi
        {
            get
            {
                return this._isKalayeOmomi;
            }
            set
            {
                if ((this._isKalayeOmomi != value))
                {
                    this.OnIsKalayeOmomiChanging(value);
                    this.RaiseDataMemberChanging("IsKalayeOmomi");
                    this.ValidateProperty("IsKalayeOmomi", value);
                    this._isKalayeOmomi = value;
                    this.RaiseDataMemberChanged("IsKalayeOmomi");
                    this.OnIsKalayeOmomiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsLenj' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsLenj
        {
            get
            {
                return this._isLenj;
            }
            set
            {
                if ((this._isLenj != value))
                {
                    this.OnIsLenjChanging(value);
                    this.RaiseDataMemberChanging("IsLenj");
                    this.ValidateProperty("IsLenj", value);
                    this._isLenj = value;
                    this.RaiseDataMemberChanged("IsLenj");
                    this.OnIsLenjChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsMakhzan' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsMakhzan
        {
            get
            {
                return this._isMakhzan;
            }
            set
            {
                if ((this._isMakhzan != value))
                {
                    this.OnIsMakhzanChanging(value);
                    this.RaiseDataMemberChanging("IsMakhzan");
                    this.ValidateProperty("IsMakhzan", value);
                    this._isMakhzan = value;
                    this.RaiseDataMemberChanged("IsMakhzan");
                    this.OnIsMakhzanChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsMosaferi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsMosaferi
        {
            get
            {
                return this._isMosaferi;
            }
            set
            {
                if ((this._isMosaferi != value))
                {
                    this.OnIsMosaferiChanging(value);
                    this.RaiseDataMemberChanging("IsMosaferi");
                    this.ValidateProperty("IsMosaferi", value);
                    this._isMosaferi = value;
                    this.RaiseDataMemberChanged("IsMosaferi");
                    this.OnIsMosaferiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsNafti' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsNafti
        {
            get
            {
                return this._isNafti;
            }
            set
            {
                if ((this._isNafti != value))
                {
                    this.OnIsNaftiChanging(value);
                    this.RaiseDataMemberChanging("IsNafti");
                    this.ValidateProperty("IsNafti", value);
                    this._isNafti = value;
                    this.RaiseDataMemberChanged("IsNafti");
                    this.OnIsNaftiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsNaghshebardari' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsNaghshebardari
        {
            get
            {
                return this._isNaghshebardari;
            }
            set
            {
                if ((this._isNaghshebardari != value))
                {
                    this.OnIsNaghshebardariChanging(value);
                    this.RaiseDataMemberChanging("IsNaghshebardari");
                    this.ValidateProperty("IsNaghshebardari", value);
                    this._isNaghshebardari = value;
                    this.RaiseDataMemberChanged("IsNaghshebardari");
                    this.OnIsNaghshebardariChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsNegahdari' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsNegahdari
        {
            get
            {
                return this._isNegahdari;
            }
            set
            {
                if ((this._isNegahdari != value))
                {
                    this.OnIsNegahdariChanging(value);
                    this.RaiseDataMemberChanging("IsNegahdari");
                    this.ValidateProperty("IsNegahdari", value);
                    this._isNegahdari = value;
                    this.RaiseDataMemberChanged("IsNegahdari");
                    this.OnIsNegahdariChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsPayeEskele' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsPayeEskele
        {
            get
            {
                return this._isPayeEskele;
            }
            set
            {
                if ((this._isPayeEskele != value))
                {
                    this.OnIsPayeEskeleChanging(value);
                    this.RaiseDataMemberChanging("IsPayeEskele");
                    this.ValidateProperty("IsPayeEskele", value);
                    this._isPayeEskele = value;
                    this.RaiseDataMemberChanged("IsPayeEskele");
                    this.OnIsPayeEskeleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsPomp' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsPomp
        {
            get
            {
                return this._isPomp;
            }
            set
            {
                if ((this._isPomp != value))
                {
                    this.OnIsPompChanging(value);
                    this.RaiseDataMemberChanging("IsPomp");
                    this.ValidateProperty("IsPomp", value);
                    this._isPomp = value;
                    this.RaiseDataMemberChanged("IsPomp");
                    this.OnIsPompChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsTamighi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsTamighi
        {
            get
            {
                return this._isTamighi;
            }
            set
            {
                if ((this._isTamighi != value))
                {
                    this.OnIsTamighiChanging(value);
                    this.RaiseDataMemberChanging("IsTamighi");
                    this.ValidateProperty("IsTamighi", value);
                    this._isTamighi = value;
                    this.RaiseDataMemberChanged("IsTamighi");
                    this.OnIsTamighiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsTavaneJabejaei' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsTavaneJabejaei
        {
            get
            {
                return this._isTavaneJabejaei;
            }
            set
            {
                if ((this._isTavaneJabejaei != value))
                {
                    this.OnIsTavaneJabejaeiChanging(value);
                    this.RaiseDataMemberChanging("IsTavaneJabejaei");
                    this.ValidateProperty("IsTavaneJabejaei", value);
                    this._isTavaneJabejaei = value;
                    this.RaiseDataMemberChanged("IsTavaneJabejaei");
                    this.OnIsTavaneJabejaeiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsYadakKeshi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsYadakKeshi
        {
            get
            {
                return this._isYadakKeshi;
            }
            set
            {
                if ((this._isYadakKeshi != value))
                {
                    this.OnIsYadakKeshiChanging(value);
                    this.RaiseDataMemberChanging("IsYadakKeshi");
                    this.ValidateProperty("IsYadakKeshi", value);
                    this._isYadakKeshi = value;
                    this.RaiseDataMemberChanged("IsYadakKeshi");
                    this.OnIsYadakKeshiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MahdodeLayroobi' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string MahdodeLayroobi
        {
            get
            {
                return this._mahdodeLayroobi;
            }
            set
            {
                if ((this._mahdodeLayroobi != value))
                {
                    this.OnMahdodeLayroobiChanging(value);
                    this.RaiseDataMemberChanging("MahdodeLayroobi");
                    this.ValidateProperty("MahdodeLayroobi", value);
                    this._mahdodeLayroobi = value;
                    this.RaiseDataMemberChanged("MahdodeLayroobi");
                    this.OnMahdodeLayroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MoshaverName' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string MoshaverName
        {
            get
            {
                return this._moshaverName;
            }
            set
            {
                if ((this._moshaverName != value))
                {
                    this.OnMoshaverNameChanging(value);
                    this.RaiseDataMemberChanging("MoshaverName");
                    this.ValidateProperty("MoshaverName", value);
                    this._moshaverName = value;
                    this.RaiseDataMemberChanged("MoshaverName");
                    this.OnMoshaverNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'mulFazayeKhali' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> mulFazayeKhali
        {
            get
            {
                return this._mulFazayeKhali;
            }
            set
            {
                if ((this._mulFazayeKhali != value))
                {
                    this.OnmulFazayeKhaliChanging(value);
                    this.RaiseDataMemberChanging("mulFazayeKhali");
                    this.ValidateProperty("mulFazayeKhali", value);
                    this._mulFazayeKhali = value;
                    this.RaiseDataMemberChanged("mulFazayeKhali");
                    this.OnmulFazayeKhaliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'mulHajmeMakhzanAb' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> mulHajmeMakhzanAb
        {
            get
            {
                return this._mulHajmeMakhzanAb;
            }
            set
            {
                if ((this._mulHajmeMakhzanAb != value))
                {
                    this.OnmulHajmeMakhzanAbChanging(value);
                    this.RaiseDataMemberChanging("mulHajmeMakhzanAb");
                    this.ValidateProperty("mulHajmeMakhzanAb", value);
                    this._mulHajmeMakhzanAb = value;
                    this.RaiseDataMemberChanged("mulHajmeMakhzanAb");
                    this.OnmulHajmeMakhzanAbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'mulHajmeMakhzanSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> mulHajmeMakhzanSookht
        {
            get
            {
                return this._mulHajmeMakhzanSookht;
            }
            set
            {
                if ((this._mulHajmeMakhzanSookht != value))
                {
                    this.OnmulHajmeMakhzanSookhtChanging(value);
                    this.RaiseDataMemberChanging("mulHajmeMakhzanSookht");
                    this.ValidateProperty("mulHajmeMakhzanSookht", value);
                    this._mulHajmeMakhzanSookht = value;
                    this.RaiseDataMemberChanged("mulHajmeMakhzanSookht");
                    this.OnmulHajmeMakhzanSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'mulJaresaghil' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> mulJaresaghil
        {
            get
            {
                return this._mulJaresaghil;
            }
            set
            {
                if ((this._mulJaresaghil != value))
                {
                    this.OnmulJaresaghilChanging(value);
                    this.RaiseDataMemberChanging("mulJaresaghil");
                    this.ValidateProperty("mulJaresaghil", value);
                    this._mulJaresaghil = value;
                    this.RaiseDataMemberChanged("mulJaresaghil");
                    this.OnmulJaresaghilChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'mulWinch' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> mulWinch
        {
            get
            {
                return this._mulWinch;
            }
            set
            {
                if ((this._mulWinch != value))
                {
                    this.OnmulWinchChanging(value);
                    this.RaiseDataMemberChanging("mulWinch");
                    this.ValidateProperty("mulWinch", value);
                    this._mulWinch = value;
                    this.RaiseDataMemberChanged("mulWinch");
                    this.OnmulWinchChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NesbateTarazBeMLLW' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> NesbateTarazBeMLLW
        {
            get
            {
                return this._nesbateTarazBeMLLW;
            }
            set
            {
                if ((this._nesbateTarazBeMLLW != value))
                {
                    this.OnNesbateTarazBeMLLWChanging(value);
                    this.RaiseDataMemberChanging("NesbateTarazBeMLLW");
                    this.ValidateProperty("NesbateTarazBeMLLW", value);
                    this._nesbateTarazBeMLLW = value;
                    this.RaiseDataMemberChanged("NesbateTarazBeMLLW");
                    this.OnNesbateTarazBeMLLWChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NesbateTarazeCD' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> NesbateTarazeCD
        {
            get
            {
                return this._nesbateTarazeCD;
            }
            set
            {
                if ((this._nesbateTarazeCD != value))
                {
                    this.OnNesbateTarazeCDChanging(value);
                    this.RaiseDataMemberChanging("NesbateTarazeCD");
                    this.ValidateProperty("NesbateTarazeCD", value);
                    this._nesbateTarazeCD = value;
                    this.RaiseDataMemberChanged("NesbateTarazeCD");
                    this.OnNesbateTarazeCDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OmgheAbkhorShenavareTarh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> OmgheAbkhorShenavareTarh
        {
            get
            {
                return this._omgheAbkhorShenavareTarh;
            }
            set
            {
                if ((this._omgheAbkhorShenavareTarh != value))
                {
                    this.OnOmgheAbkhorShenavareTarhChanging(value);
                    this.RaiseDataMemberChanging("OmgheAbkhorShenavareTarh");
                    this.ValidateProperty("OmgheAbkhorShenavareTarh", value);
                    this._omgheAbkhorShenavareTarh = value;
                    this.RaiseDataMemberChanged("OmgheAbkhorShenavareTarh");
                    this.OnOmgheAbkhorShenavareTarhChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PeymankarName' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string PeymankarName
        {
            get
            {
                return this._peymankarName;
            }
            set
            {
                if ((this._peymankarName != value))
                {
                    this.OnPeymankarNameChanging(value);
                    this.RaiseDataMemberChanging("PeymankarName");
                    this.ValidateProperty("PeymankarName", value);
                    this._peymankarName = value;
                    this.RaiseDataMemberChanged("PeymankarName");
                    this.OnPeymankarNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectName' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string ProjectName
        {
            get
            {
                return this._projectName;
            }
            set
            {
                if ((this._projectName != value))
                {
                    this.OnProjectNameChanging(value);
                    this.RaiseDataMemberChanging("ProjectName");
                    this.ValidateProperty("ProjectName", value);
                    this._projectName = value;
                    this.RaiseDataMemberChanged("ProjectName");
                    this.OnProjectNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectPurpose' value.
        /// </summary>
        [DataMember()]
        public string ProjectPurpose
        {
            get
            {
                return this._projectPurpose;
            }
            set
            {
                if ((this._projectPurpose != value))
                {
                    this.OnProjectPurposeChanging(value);
                    this.RaiseDataMemberChanging("ProjectPurpose");
                    this.ValidateProperty("ProjectPurpose", value);
                    this._projectPurpose = value;
                    this.RaiseDataMemberChanged("ProjectPurpose");
                    this.OnProjectPurposeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectTechSpec' value.
        /// </summary>
        [DataMember()]
        public string ProjectTechSpec
        {
            get
            {
                return this._projectTechSpec;
            }
            set
            {
                if ((this._projectTechSpec != value))
                {
                    this.OnProjectTechSpecChanging(value);
                    this.RaiseDataMemberChanging("ProjectTechSpec");
                    this.ValidateProperty("ProjectTechSpec", value);
                    this._projectTechSpec = value;
                    this.RaiseDataMemberChanged("ProjectTechSpec");
                    this.OnProjectTechSpecChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savHajmeAmaliat' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> savHajmeAmaliat
        {
            get
            {
                return this._savHajmeAmaliat;
            }
            set
            {
                if ((this._savHajmeAmaliat != value))
                {
                    this.OnsavHajmeAmaliatChanging(value);
                    this.RaiseDataMemberChanging("savHajmeAmaliat");
                    this.ValidateProperty("savHajmeAmaliat", value);
                    this._savHajmeAmaliat = value;
                    this.RaiseDataMemberChanged("savHajmeAmaliat");
                    this.OnsavHajmeAmaliatChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savIsEhdasi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> savIsEhdasi
        {
            get
            {
                return this._savIsEhdasi;
            }
            set
            {
                if ((this._savIsEhdasi != value))
                {
                    this.OnsavIsEhdasiChanging(value);
                    this.RaiseDataMemberChanging("savIsEhdasi");
                    this.ValidateProperty("savIsEhdasi", value);
                    this._savIsEhdasi = value;
                    this.RaiseDataMemberChanged("savIsEhdasi");
                    this.OnsavIsEhdasiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savIsNegahdari' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> savIsNegahdari
        {
            get
            {
                return this._savIsNegahdari;
            }
            set
            {
                if ((this._savIsNegahdari != value))
                {
                    this.OnsavIsNegahdariChanging(value);
                    this.RaiseDataMemberChanging("savIsNegahdari");
                    this.ValidateProperty("savIsNegahdari", value);
                    this._savIsNegahdari = value;
                    this.RaiseDataMemberChanged("savIsNegahdari");
                    this.OnsavIsNegahdariChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savLayroobiGhabli' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> savLayroobiGhabli
        {
            get
            {
                return this._savLayroobiGhabli;
            }
            set
            {
                if ((this._savLayroobiGhabli != value))
                {
                    this.OnsavLayroobiGhabliChanging(value);
                    this.RaiseDataMemberChanging("savLayroobiGhabli");
                    this.ValidateProperty("savLayroobiGhabli", value);
                    this._savLayroobiGhabli = value;
                    this.RaiseDataMemberChanged("savLayroobiGhabli");
                    this.OnsavLayroobiGhabliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savMoshakhasateLayroob' value.
        /// </summary>
        [DataMember()]
        public string savMoshakhasateLayroob
        {
            get
            {
                return this._savMoshakhasateLayroob;
            }
            set
            {
                if ((this._savMoshakhasateLayroob != value))
                {
                    this.OnsavMoshakhasateLayroobChanging(value);
                    this.RaiseDataMemberChanging("savMoshakhasateLayroob");
                    this.ValidateProperty("savMoshakhasateLayroob", value);
                    this._savMoshakhasateLayroob = value;
                    this.RaiseDataMemberChanged("savMoshakhasateLayroob");
                    this.OnsavMoshakhasateLayroobChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savMoshaver' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string savMoshaver
        {
            get
            {
                return this._savMoshaver;
            }
            set
            {
                if ((this._savMoshaver != value))
                {
                    this.OnsavMoshaverChanging(value);
                    this.RaiseDataMemberChanging("savMoshaver");
                    this.ValidateProperty("savMoshaver", value);
                    this._savMoshaver = value;
                    this.RaiseDataMemberChanged("savMoshaver");
                    this.OnsavMoshaverChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savPeymankar' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string savPeymankar
        {
            get
            {
                return this._savPeymankar;
            }
            set
            {
                if ((this._savPeymankar != value))
                {
                    this.OnsavPeymankarChanging(value);
                    this.RaiseDataMemberChanging("savPeymankar");
                    this.ValidateProperty("savPeymankar", value);
                    this._savPeymankar = value;
                    this.RaiseDataMemberChanged("savPeymankar");
                    this.OnsavPeymankarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'savSaleLayroobiGhabli' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> savSaleLayroobiGhabli
        {
            get
            {
                return this._savSaleLayroobiGhabli;
            }
            set
            {
                if ((this._savSaleLayroobiGhabli != value))
                {
                    this.OnsavSaleLayroobiGhabliChanging(value);
                    this.RaiseDataMemberChanging("savSaleLayroobiGhabli");
                    this.ValidateProperty("savSaleLayroobiGhabli", value);
                    this._savSaleLayroobiGhabli = value;
                    this.RaiseDataMemberChanged("savSaleLayroobiGhabli");
                    this.OnsavSaleLayroobiGhabliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Token' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [DataMember()]
        public byte[] Token
        {
            get
            {
                return this._token;
            }
            set
            {
                if ((this._token != value))
                {
                    this.OnTokenChanging(value);
                    this.RaiseDataMemberChanging("Token");
                    this.ValidateProperty("Token", value);
                    this._token = value;
                    this.RaiseDataMemberChanged("Token");
                    this.OnTokenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaiseDataMemberChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VosateMahdodeLayroobi' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> VosateMahdodeLayroobi
        {
            get
            {
                return this._vosateMahdodeLayroobi;
            }
            set
            {
                if ((this._vosateMahdodeLayroobi != value))
                {
                    this.OnVosateMahdodeLayroobiChanging(value);
                    this.RaiseDataMemberChanging("VosateMahdodeLayroobi");
                    this.ValidateProperty("VosateMahdodeLayroobi", value);
                    this._vosateMahdodeLayroobi = value;
                    this.RaiseDataMemberChanged("VosateMahdodeLayroobi");
                    this.OnVosateMahdodeLayroobiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadAbkhor' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadAbkhor
        {
            get
            {
                return this._yadAbkhor;
            }
            set
            {
                if ((this._yadAbkhor != value))
                {
                    this.OnyadAbkhorChanging(value);
                    this.RaiseDataMemberChanging("yadAbkhor");
                    this.ValidateProperty("yadAbkhor", value);
                    this._yadAbkhor = value;
                    this.RaiseDataMemberChanged("yadAbkhor");
                    this.OnyadAbkhorChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadArz' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadArz
        {
            get
            {
                return this._yadArz;
            }
            set
            {
                if ((this._yadArz != value))
                {
                    this.OnyadArzChanging(value);
                    this.RaiseDataMemberChanging("yadArz");
                    this.ValidateProperty("yadArz", value);
                    this._yadArz = value;
                    this.RaiseDataMemberChanged("yadArz");
                    this.OnyadArzChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadGhodratMotor' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadGhodratMotor
        {
            get
            {
                return this._yadGhodratMotor;
            }
            set
            {
                if ((this._yadGhodratMotor != value))
                {
                    this.OnyadGhodratMotorChanging(value);
                    this.RaiseDataMemberChanging("yadGhodratMotor");
                    this.ValidateProperty("yadGhodratMotor", value);
                    this._yadGhodratMotor = value;
                    this.RaiseDataMemberChanged("yadGhodratMotor");
                    this.OnyadGhodratMotorChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadHajmeMakhzanAb' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadHajmeMakhzanAb
        {
            get
            {
                return this._yadHajmeMakhzanAb;
            }
            set
            {
                if ((this._yadHajmeMakhzanAb != value))
                {
                    this.OnyadHajmeMakhzanAbChanging(value);
                    this.RaiseDataMemberChanging("yadHajmeMakhzanAb");
                    this.ValidateProperty("yadHajmeMakhzanAb", value);
                    this._yadHajmeMakhzanAb = value;
                    this.RaiseDataMemberChanged("yadHajmeMakhzanAb");
                    this.OnyadHajmeMakhzanAbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadHajmeMakhzanSookht' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadHajmeMakhzanSookht
        {
            get
            {
                return this._yadHajmeMakhzanSookht;
            }
            set
            {
                if ((this._yadHajmeMakhzanSookht != value))
                {
                    this.OnyadHajmeMakhzanSookhtChanging(value);
                    this.RaiseDataMemberChanging("yadHajmeMakhzanSookht");
                    this.ValidateProperty("yadHajmeMakhzanSookht", value);
                    this._yadHajmeMakhzanSookht = value;
                    this.RaiseDataMemberChanged("yadHajmeMakhzanSookht");
                    this.OnyadHajmeMakhzanSookhtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadKesheshMaharband' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadKesheshMaharband
        {
            get
            {
                return this._yadKesheshMaharband;
            }
            set
            {
                if ((this._yadKesheshMaharband != value))
                {
                    this.OnyadKesheshMaharbandChanging(value);
                    this.RaiseDataMemberChanging("yadKesheshMaharband");
                    this.ValidateProperty("yadKesheshMaharband", value);
                    this._yadKesheshMaharband = value;
                    this.RaiseDataMemberChanged("yadKesheshMaharband");
                    this.OnyadKesheshMaharbandChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'yadTool' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> yadTool
        {
            get
            {
                return this._yadTool;
            }
            set
            {
                if ((this._yadTool != value))
                {
                    this.OnyadToolChanging(value);
                    this.RaiseDataMemberChanging("yadTool");
                    this.ValidateProperty("yadTool", value);
                    this._yadTool = value;
                    this.RaiseDataMemberChanged("yadTool");
                    this.OnyadToolChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ZarfiateShenavareTarh' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> ZarfiateShenavareTarh
        {
            get
            {
                return this._zarfiateShenavareTarh;
            }
            set
            {
                if ((this._zarfiateShenavareTarh != value))
                {
                    this.OnZarfiateShenavareTarhChanging(value);
                    this.RaiseDataMemberChanging("ZarfiateShenavareTarh");
                    this.ValidateProperty("ZarfiateShenavareTarh", value);
                    this._zarfiateShenavareTarh = value;
                    this.RaiseDataMemberChanged("ZarfiateShenavareTarh");
                    this.OnZarfiateShenavareTarhChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Projects' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Projects : Entity
    {
        
        private string _basePath;
        
        private string _cnnString;
        
        private string _projectFile;
        
        private int _projectID;
        
        private string _projectName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBasePathChanging(string value);
        partial void OnBasePathChanged();
        partial void OnCnnStringChanging(string value);
        partial void OnCnnStringChanged();
        partial void OnProjectFileChanging(string value);
        partial void OnProjectFileChanged();
        partial void OnProjectIDChanging(int value);
        partial void OnProjectIDChanged();
        partial void OnProjectNameChanging(string value);
        partial void OnProjectNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Projects"/> class.
        /// </summary>
        public Projects()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BasePath' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string BasePath
        {
            get
            {
                return this._basePath;
            }
            set
            {
                if ((this._basePath != value))
                {
                    this.OnBasePathChanging(value);
                    this.RaiseDataMemberChanging("BasePath");
                    this.ValidateProperty("BasePath", value);
                    this._basePath = value;
                    this.RaiseDataMemberChanged("BasePath");
                    this.OnBasePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CnnString' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string CnnString
        {
            get
            {
                return this._cnnString;
            }
            set
            {
                if ((this._cnnString != value))
                {
                    this.OnCnnStringChanging(value);
                    this.RaiseDataMemberChanging("CnnString");
                    this.ValidateProperty("CnnString", value);
                    this._cnnString = value;
                    this.RaiseDataMemberChanged("CnnString");
                    this.OnCnnStringChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectFile' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(100)]
        public string ProjectFile
        {
            get
            {
                return this._projectFile;
            }
            set
            {
                if ((this._projectFile != value))
                {
                    this.OnProjectFileChanging(value);
                    this.RaiseDataMemberChanging("ProjectFile");
                    this.ValidateProperty("ProjectFile", value);
                    this._projectFile = value;
                    this.RaiseDataMemberChanged("ProjectFile");
                    this.OnProjectFileChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ProjectID
        {
            get
            {
                return this._projectID;
            }
            set
            {
                if ((this._projectID != value))
                {
                    this.OnProjectIDChanging(value);
                    this.ValidateProperty("ProjectID", value);
                    this._projectID = value;
                    this.RaisePropertyChanged("ProjectID");
                    this.OnProjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ProjectName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string ProjectName
        {
            get
            {
                return this._projectName;
            }
            set
            {
                if ((this._projectName != value))
                {
                    this.OnProjectNameChanging(value);
                    this.RaiseDataMemberChanging("ProjectName");
                    this.ValidateProperty("ProjectName", value);
                    this._projectName = value;
                    this.RaiseDataMemberChanged("ProjectName");
                    this.OnProjectNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._projectID;
        }
    }
    
    /// <summary>
    /// The 'RegistrationData' class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class RegistrationData : ComplexObject
    {
        
        private string _email;
        
        private string _firstName;
        
        private string _isChangePasswordNeeded;
        
        private string _lastName;
        
        private string _organization;
        
        private string _roleName;
        
        private string _userComment;
        
        private string _userID;
        
        private string _userName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnIsChangePasswordNeededChanging(string value);
        partial void OnIsChangePasswordNeededChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnOrganizationChanging(string value);
        partial void OnOrganizationChanged();
        partial void OnRoleNameChanging(string value);
        partial void OnRoleNameChanged();
        partial void OnUserCommentChanging(string value);
        partial void OnUserCommentChanged();
        partial void OnUserIDChanging(string value);
        partial void OnUserIDChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="RegistrationData"/> class.
        /// </summary>
        public RegistrationData()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Email' value.
        /// </summary>
        [DataMember()]
        [Display(Name="EmailLabel", Order=5, ResourceType=typeof(RegistrationDataResources))]
        [RegularExpression("^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4" +
            "}|[0-9]{1,3})(\\]?)$", ErrorMessageResourceName="ValidationErrorInvalidEmail", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnEmailChanging(value);
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._email = value;
                    this.RaiseDataMemberChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="FirstNameLabel", Order=0, ResourceType=typeof(RegistrationDataResources))]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsChangePasswordNeeded' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [Editable(true)]
        public string IsChangePasswordNeeded
        {
            get
            {
                return this._isChangePasswordNeeded;
            }
            set
            {
                if ((this._isChangePasswordNeeded != value))
                {
                    this.OnIsChangePasswordNeededChanging(value);
                    this.RaiseDataMemberChanging("IsChangePasswordNeeded");
                    this.ValidateProperty("IsChangePasswordNeeded", value);
                    this._isChangePasswordNeeded = value;
                    this.RaiseDataMemberChanged("IsChangePasswordNeeded");
                    this.OnIsChangePasswordNeededChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="LastNameLabel", Order=1, ResourceType=typeof(RegistrationDataResources))]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Organization' value.
        /// </summary>
        [DataMember()]
        [Display(Name="OrganizationNameLabel", Order=6, ResourceType=typeof(RegistrationDataResources))]
        [Required()]
        public string Organization
        {
            get
            {
                return this._organization;
            }
            set
            {
                if ((this._organization != value))
                {
                    this.OnOrganizationChanging(value);
                    this.RaiseDataMemberChanging("Organization");
                    this.ValidateProperty("Organization", value);
                    this._organization = value;
                    this.RaiseDataMemberChanged("Organization");
                    this.OnOrganizationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RoleName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="RoleNameLabel", Order=7, ResourceType=typeof(RegistrationDataResources))]
        [Required()]
        public string RoleName
        {
            get
            {
                return this._roleName;
            }
            set
            {
                if ((this._roleName != value))
                {
                    this.OnRoleNameChanging(value);
                    this.RaiseDataMemberChanging("RoleName");
                    this.ValidateProperty("RoleName", value);
                    this._roleName = value;
                    this.RaiseDataMemberChanged("RoleName");
                    this.OnRoleNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserComment' value.
        /// </summary>
        [DataMember()]
        [DataType(DataType.MultilineText)]
        [Display(Name="UserCommentLabel", Order=8, ResourceType=typeof(RegistrationDataResources))]
        public string UserComment
        {
            get
            {
                return this._userComment;
            }
            set
            {
                if ((this._userComment != value))
                {
                    this.OnUserCommentChanging(value);
                    this.RaiseDataMemberChanging("UserComment");
                    this.ValidateProperty("UserComment", value);
                    this._userComment = value;
                    this.RaiseDataMemberChanged("UserComment");
                    this.OnUserCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [Editable(true)]
        public string UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaiseDataMemberChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="UserNameLabel", Order=2, ResourceType=typeof(RegistrationDataResources))]
        [RegularExpression("^[a-zA-Z0-9_]*$", ErrorMessageResourceName="ValidationErrorInvalidUserName", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.RaiseDataMemberChanging("UserName");
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaiseDataMemberChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
    }
    
    /// <summary>
    /// The 'RoadType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class RoadType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="RoadType"/> class.
        /// </summary>
        public RoadType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(30)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'Shahrestan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Shahrestan : Entity
    {
        
        private string _bakhsh_eng;
        
        private string _bakhsh_nam;
        
        private int _fieldId;
        
        private int _id;
        
        private string _ostan_eng;
        
        private Nullable<int> _ostan_Id;
        
        private string _ostan_nam;
        
        private string _shahr_eng;
        
        private string _shahr_nam;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBAKHSH_ENGChanging(string value);
        partial void OnBAKHSH_ENGChanged();
        partial void OnBAKHSH_NAMChanging(string value);
        partial void OnBAKHSH_NAMChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnOSTAN_ENGChanging(string value);
        partial void OnOSTAN_ENGChanged();
        partial void OnOstan_IdChanging(Nullable<int> value);
        partial void OnOstan_IdChanged();
        partial void OnOSTAN_NAMChanging(string value);
        partial void OnOSTAN_NAMChanged();
        partial void OnSHAHR_ENGChanging(string value);
        partial void OnSHAHR_ENGChanged();
        partial void OnSHAHR_NAMChanging(string value);
        partial void OnSHAHR_NAMChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Shahrestan"/> class.
        /// </summary>
        public Shahrestan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BAKHSH_ENG' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string BAKHSH_ENG
        {
            get
            {
                return this._bakhsh_eng;
            }
            set
            {
                if ((this._bakhsh_eng != value))
                {
                    this.OnBAKHSH_ENGChanging(value);
                    this.RaiseDataMemberChanging("BAKHSH_ENG");
                    this.ValidateProperty("BAKHSH_ENG", value);
                    this._bakhsh_eng = value;
                    this.RaiseDataMemberChanged("BAKHSH_ENG");
                    this.OnBAKHSH_ENGChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BAKHSH_NAM' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string BAKHSH_NAM
        {
            get
            {
                return this._bakhsh_nam;
            }
            set
            {
                if ((this._bakhsh_nam != value))
                {
                    this.OnBAKHSH_NAMChanging(value);
                    this.RaiseDataMemberChanging("BAKHSH_NAM");
                    this.ValidateProperty("BAKHSH_NAM", value);
                    this._bakhsh_nam = value;
                    this.RaiseDataMemberChanged("BAKHSH_NAM");
                    this.OnBAKHSH_NAMChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OSTAN_ENG' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string OSTAN_ENG
        {
            get
            {
                return this._ostan_eng;
            }
            set
            {
                if ((this._ostan_eng != value))
                {
                    this.OnOSTAN_ENGChanging(value);
                    this.RaiseDataMemberChanging("OSTAN_ENG");
                    this.ValidateProperty("OSTAN_ENG", value);
                    this._ostan_eng = value;
                    this.RaiseDataMemberChanged("OSTAN_ENG");
                    this.OnOSTAN_ENGChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Ostan_Id' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> Ostan_Id
        {
            get
            {
                return this._ostan_Id;
            }
            set
            {
                if ((this._ostan_Id != value))
                {
                    this.OnOstan_IdChanging(value);
                    this.RaiseDataMemberChanging("Ostan_Id");
                    this.ValidateProperty("Ostan_Id", value);
                    this._ostan_Id = value;
                    this.RaiseDataMemberChanged("Ostan_Id");
                    this.OnOstan_IdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OSTAN_NAM' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string OSTAN_NAM
        {
            get
            {
                return this._ostan_nam;
            }
            set
            {
                if ((this._ostan_nam != value))
                {
                    this.OnOSTAN_NAMChanging(value);
                    this.RaiseDataMemberChanging("OSTAN_NAM");
                    this.ValidateProperty("OSTAN_NAM", value);
                    this._ostan_nam = value;
                    this.RaiseDataMemberChanged("OSTAN_NAM");
                    this.OnOSTAN_NAMChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SHAHR_ENG' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string SHAHR_ENG
        {
            get
            {
                return this._shahr_eng;
            }
            set
            {
                if ((this._shahr_eng != value))
                {
                    this.OnSHAHR_ENGChanging(value);
                    this.RaiseDataMemberChanging("SHAHR_ENG");
                    this.ValidateProperty("SHAHR_ENG", value);
                    this._shahr_eng = value;
                    this.RaiseDataMemberChanged("SHAHR_ENG");
                    this.OnSHAHR_ENGChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SHAHR_NAM' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string SHAHR_NAM
        {
            get
            {
                return this._shahr_nam;
            }
            set
            {
                if ((this._shahr_nam != value))
                {
                    this.OnSHAHR_NAMChanging(value);
                    this.RaiseDataMemberChanging("SHAHR_NAM");
                    this.ValidateProperty("SHAHR_NAM", value);
                    this._shahr_nam = value;
                    this.RaiseDataMemberChanged("SHAHR_NAM");
                    this.OnSHAHR_NAMChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'SpatialServices' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class SpatialServices : Entity
    {
        
        private int _id;
        
        private string _name;
        
        private string _url;
        
        private Nullable<bool> _visible;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnUrlChanging(string value);
        partial void OnUrlChanged();
        partial void OnVisibleChanging(Nullable<bool> value);
        partial void OnVisibleChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SpatialServices"/> class.
        /// </summary>
        public SpatialServices()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Url' value.
        /// </summary>
        [DataMember()]
        public string Url
        {
            get
            {
                return this._url;
            }
            set
            {
                if ((this._url != value))
                {
                    this.OnUrlChanging(value);
                    this.RaiseDataMemberChanging("Url");
                    this.ValidateProperty("Url", value);
                    this._url = value;
                    this.RaiseDataMemberChanged("Url");
                    this.OnUrlChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Visible' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Visible
        {
            get
            {
                return this._visible;
            }
            set
            {
                if ((this._visible != value))
                {
                    this.OnVisibleChanging(value);
                    this.RaiseDataMemberChanging("Visible");
                    this.ValidateProperty("Visible", value);
                    this._visible = value;
                    this.RaiseDataMemberChanged("Visible");
                    this.OnVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SubjectLink' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class SubjectLink : Entity
    {
        
        private string _layerName;
        
        private int _linkID;
        
        private int _subjectID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnLayerNameChanging(string value);
        partial void OnLayerNameChanged();
        partial void OnLinkIDChanging(int value);
        partial void OnLinkIDChanged();
        partial void OnSubjectIDChanging(int value);
        partial void OnSubjectIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SubjectLink"/> class.
        /// </summary>
        public SubjectLink()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'LayerName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(100)]
        public string LayerName
        {
            get
            {
                return this._layerName;
            }
            set
            {
                if ((this._layerName != value))
                {
                    this.OnLayerNameChanging(value);
                    this.ValidateProperty("LayerName", value);
                    this._layerName = value;
                    this.RaisePropertyChanged("LayerName");
                    this.OnLayerNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LinkID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int LinkID
        {
            get
            {
                return this._linkID;
            }
            set
            {
                if ((this._linkID != value))
                {
                    this.OnLinkIDChanging(value);
                    this.ValidateProperty("LinkID", value);
                    this._linkID = value;
                    this.RaisePropertyChanged("LinkID");
                    this.OnLinkIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaisePropertyChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if ((this._layerName == null))
            {
                return null;
            }
            return EntityKey.Create(this._layerName, this._linkID, this._subjectID);
        }
    }
    
    /// <summary>
    /// The 'SummaryOfPermits' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class SummaryOfPermits : Entity
    {
        
        private string _bNote;
        
        private Nullable<int> _bOperation;
        
        private Nullable<int> _bPermit;
        
        private Nullable<int> _bTonnes;
        
        private string _cNote;
        
        private Nullable<int> _cOperation;
        
        private Nullable<int> _cPermit;
        
        private Nullable<int> _cTonnes;
        
        private string _dNote;
        
        private Nullable<int> _dOperation;
        
        private Nullable<int> _dPermit;
        
        private Nullable<int> _dTonnes;
        
        private string _fNote;
        
        private Nullable<int> _fOperation;
        
        private Nullable<int> _fPermit;
        
        private Nullable<int> _fTonnes;
        
        private int _id;
        
        private string _iNote;
        
        private Nullable<int> _iOperation;
        
        private Nullable<int> _iPermit;
        
        private Nullable<int> _iTonnes;
        
        private string _oNote;
        
        private Nullable<int> _oOperation;
        
        private Nullable<int> _oPermit;
        
        private Nullable<int> _oTonnes;
        
        private string _pNote;
        
        private Nullable<int> _pOperation;
        
        private Nullable<int> _pPermit;
        
        private Nullable<int> _pTonnes;
        
        private string _sNote;
        
        private Nullable<int> _sOperation;
        
        private Nullable<int> _sPermit;
        
        private Nullable<int> _sTonnes;
        
        private string _vNote;
        
        private Nullable<int> _vOperation;
        
        private Nullable<int> _vPermit;
        
        private Nullable<int> _vTonnes;
        
        private Nullable<int> _year;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBNoteChanging(string value);
        partial void OnBNoteChanged();
        partial void OnBOperationChanging(Nullable<int> value);
        partial void OnBOperationChanged();
        partial void OnBPermitChanging(Nullable<int> value);
        partial void OnBPermitChanged();
        partial void OnBTonnesChanging(Nullable<int> value);
        partial void OnBTonnesChanged();
        partial void OnCNoteChanging(string value);
        partial void OnCNoteChanged();
        partial void OnCOperationChanging(Nullable<int> value);
        partial void OnCOperationChanged();
        partial void OnCPermitChanging(Nullable<int> value);
        partial void OnCPermitChanged();
        partial void OnCTonnesChanging(Nullable<int> value);
        partial void OnCTonnesChanged();
        partial void OnDNoteChanging(string value);
        partial void OnDNoteChanged();
        partial void OnDOperationChanging(Nullable<int> value);
        partial void OnDOperationChanged();
        partial void OnDPermitChanging(Nullable<int> value);
        partial void OnDPermitChanged();
        partial void OnDTonnesChanging(Nullable<int> value);
        partial void OnDTonnesChanged();
        partial void OnFNoteChanging(string value);
        partial void OnFNoteChanged();
        partial void OnFOperationChanging(Nullable<int> value);
        partial void OnFOperationChanged();
        partial void OnFPermitChanging(Nullable<int> value);
        partial void OnFPermitChanged();
        partial void OnFTonnesChanging(Nullable<int> value);
        partial void OnFTonnesChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnINoteChanging(string value);
        partial void OnINoteChanged();
        partial void OnIOperationChanging(Nullable<int> value);
        partial void OnIOperationChanged();
        partial void OnIPermitChanging(Nullable<int> value);
        partial void OnIPermitChanged();
        partial void OnITonnesChanging(Nullable<int> value);
        partial void OnITonnesChanged();
        partial void OnONoteChanging(string value);
        partial void OnONoteChanged();
        partial void OnOOperationChanging(Nullable<int> value);
        partial void OnOOperationChanged();
        partial void OnOPermitChanging(Nullable<int> value);
        partial void OnOPermitChanged();
        partial void OnOTonnesChanging(Nullable<int> value);
        partial void OnOTonnesChanged();
        partial void OnPNoteChanging(string value);
        partial void OnPNoteChanged();
        partial void OnPOperationChanging(Nullable<int> value);
        partial void OnPOperationChanged();
        partial void OnPPermitChanging(Nullable<int> value);
        partial void OnPPermitChanged();
        partial void OnPTonnesChanging(Nullable<int> value);
        partial void OnPTonnesChanged();
        partial void OnSNoteChanging(string value);
        partial void OnSNoteChanged();
        partial void OnSOperationChanging(Nullable<int> value);
        partial void OnSOperationChanged();
        partial void OnSPermitChanging(Nullable<int> value);
        partial void OnSPermitChanged();
        partial void OnSTonnesChanging(Nullable<int> value);
        partial void OnSTonnesChanged();
        partial void OnVNoteChanging(string value);
        partial void OnVNoteChanged();
        partial void OnVOperationChanging(Nullable<int> value);
        partial void OnVOperationChanged();
        partial void OnVPermitChanging(Nullable<int> value);
        partial void OnVPermitChanged();
        partial void OnVTonnesChanging(Nullable<int> value);
        partial void OnVTonnesChanged();
        partial void OnYearChanging(Nullable<int> value);
        partial void OnYearChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SummaryOfPermits"/> class.
        /// </summary>
        public SummaryOfPermits()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string BNote
        {
            get
            {
                return this._bNote;
            }
            set
            {
                if ((this._bNote != value))
                {
                    this.OnBNoteChanging(value);
                    this.RaiseDataMemberChanging("BNote");
                    this.ValidateProperty("BNote", value);
                    this._bNote = value;
                    this.RaiseDataMemberChanged("BNote");
                    this.OnBNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> BOperation
        {
            get
            {
                return this._bOperation;
            }
            set
            {
                if ((this._bOperation != value))
                {
                    this.OnBOperationChanging(value);
                    this.RaiseDataMemberChanging("BOperation");
                    this.ValidateProperty("BOperation", value);
                    this._bOperation = value;
                    this.RaiseDataMemberChanged("BOperation");
                    this.OnBOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> BPermit
        {
            get
            {
                return this._bPermit;
            }
            set
            {
                if ((this._bPermit != value))
                {
                    this.OnBPermitChanging(value);
                    this.RaiseDataMemberChanging("BPermit");
                    this.ValidateProperty("BPermit", value);
                    this._bPermit = value;
                    this.RaiseDataMemberChanged("BPermit");
                    this.OnBPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> BTonnes
        {
            get
            {
                return this._bTonnes;
            }
            set
            {
                if ((this._bTonnes != value))
                {
                    this.OnBTonnesChanging(value);
                    this.RaiseDataMemberChanging("BTonnes");
                    this.ValidateProperty("BTonnes", value);
                    this._bTonnes = value;
                    this.RaiseDataMemberChanged("BTonnes");
                    this.OnBTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string CNote
        {
            get
            {
                return this._cNote;
            }
            set
            {
                if ((this._cNote != value))
                {
                    this.OnCNoteChanging(value);
                    this.RaiseDataMemberChanging("CNote");
                    this.ValidateProperty("CNote", value);
                    this._cNote = value;
                    this.RaiseDataMemberChanged("CNote");
                    this.OnCNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'COperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> COperation
        {
            get
            {
                return this._cOperation;
            }
            set
            {
                if ((this._cOperation != value))
                {
                    this.OnCOperationChanging(value);
                    this.RaiseDataMemberChanging("COperation");
                    this.ValidateProperty("COperation", value);
                    this._cOperation = value;
                    this.RaiseDataMemberChanged("COperation");
                    this.OnCOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> CPermit
        {
            get
            {
                return this._cPermit;
            }
            set
            {
                if ((this._cPermit != value))
                {
                    this.OnCPermitChanging(value);
                    this.RaiseDataMemberChanging("CPermit");
                    this.ValidateProperty("CPermit", value);
                    this._cPermit = value;
                    this.RaiseDataMemberChanged("CPermit");
                    this.OnCPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> CTonnes
        {
            get
            {
                return this._cTonnes;
            }
            set
            {
                if ((this._cTonnes != value))
                {
                    this.OnCTonnesChanging(value);
                    this.RaiseDataMemberChanging("CTonnes");
                    this.ValidateProperty("CTonnes", value);
                    this._cTonnes = value;
                    this.RaiseDataMemberChanged("CTonnes");
                    this.OnCTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string DNote
        {
            get
            {
                return this._dNote;
            }
            set
            {
                if ((this._dNote != value))
                {
                    this.OnDNoteChanging(value);
                    this.RaiseDataMemberChanging("DNote");
                    this.ValidateProperty("DNote", value);
                    this._dNote = value;
                    this.RaiseDataMemberChanged("DNote");
                    this.OnDNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> DOperation
        {
            get
            {
                return this._dOperation;
            }
            set
            {
                if ((this._dOperation != value))
                {
                    this.OnDOperationChanging(value);
                    this.RaiseDataMemberChanging("DOperation");
                    this.ValidateProperty("DOperation", value);
                    this._dOperation = value;
                    this.RaiseDataMemberChanged("DOperation");
                    this.OnDOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> DPermit
        {
            get
            {
                return this._dPermit;
            }
            set
            {
                if ((this._dPermit != value))
                {
                    this.OnDPermitChanging(value);
                    this.RaiseDataMemberChanging("DPermit");
                    this.ValidateProperty("DPermit", value);
                    this._dPermit = value;
                    this.RaiseDataMemberChanged("DPermit");
                    this.OnDPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> DTonnes
        {
            get
            {
                return this._dTonnes;
            }
            set
            {
                if ((this._dTonnes != value))
                {
                    this.OnDTonnesChanging(value);
                    this.RaiseDataMemberChanging("DTonnes");
                    this.ValidateProperty("DTonnes", value);
                    this._dTonnes = value;
                    this.RaiseDataMemberChanged("DTonnes");
                    this.OnDTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string FNote
        {
            get
            {
                return this._fNote;
            }
            set
            {
                if ((this._fNote != value))
                {
                    this.OnFNoteChanging(value);
                    this.RaiseDataMemberChanging("FNote");
                    this.ValidateProperty("FNote", value);
                    this._fNote = value;
                    this.RaiseDataMemberChanged("FNote");
                    this.OnFNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> FOperation
        {
            get
            {
                return this._fOperation;
            }
            set
            {
                if ((this._fOperation != value))
                {
                    this.OnFOperationChanging(value);
                    this.RaiseDataMemberChanging("FOperation");
                    this.ValidateProperty("FOperation", value);
                    this._fOperation = value;
                    this.RaiseDataMemberChanged("FOperation");
                    this.OnFOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> FPermit
        {
            get
            {
                return this._fPermit;
            }
            set
            {
                if ((this._fPermit != value))
                {
                    this.OnFPermitChanging(value);
                    this.RaiseDataMemberChanging("FPermit");
                    this.ValidateProperty("FPermit", value);
                    this._fPermit = value;
                    this.RaiseDataMemberChanged("FPermit");
                    this.OnFPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> FTonnes
        {
            get
            {
                return this._fTonnes;
            }
            set
            {
                if ((this._fTonnes != value))
                {
                    this.OnFTonnesChanging(value);
                    this.RaiseDataMemberChanging("FTonnes");
                    this.ValidateProperty("FTonnes", value);
                    this._fTonnes = value;
                    this.RaiseDataMemberChanged("FTonnes");
                    this.OnFTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'INote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string INote
        {
            get
            {
                return this._iNote;
            }
            set
            {
                if ((this._iNote != value))
                {
                    this.OnINoteChanging(value);
                    this.RaiseDataMemberChanging("INote");
                    this.ValidateProperty("INote", value);
                    this._iNote = value;
                    this.RaiseDataMemberChanged("INote");
                    this.OnINoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> IOperation
        {
            get
            {
                return this._iOperation;
            }
            set
            {
                if ((this._iOperation != value))
                {
                    this.OnIOperationChanging(value);
                    this.RaiseDataMemberChanging("IOperation");
                    this.ValidateProperty("IOperation", value);
                    this._iOperation = value;
                    this.RaiseDataMemberChanged("IOperation");
                    this.OnIOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> IPermit
        {
            get
            {
                return this._iPermit;
            }
            set
            {
                if ((this._iPermit != value))
                {
                    this.OnIPermitChanging(value);
                    this.RaiseDataMemberChanging("IPermit");
                    this.ValidateProperty("IPermit", value);
                    this._iPermit = value;
                    this.RaiseDataMemberChanged("IPermit");
                    this.OnIPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ITonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ITonnes
        {
            get
            {
                return this._iTonnes;
            }
            set
            {
                if ((this._iTonnes != value))
                {
                    this.OnITonnesChanging(value);
                    this.RaiseDataMemberChanging("ITonnes");
                    this.ValidateProperty("ITonnes", value);
                    this._iTonnes = value;
                    this.RaiseDataMemberChanged("ITonnes");
                    this.OnITonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ONote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string ONote
        {
            get
            {
                return this._oNote;
            }
            set
            {
                if ((this._oNote != value))
                {
                    this.OnONoteChanging(value);
                    this.RaiseDataMemberChanging("ONote");
                    this.ValidateProperty("ONote", value);
                    this._oNote = value;
                    this.RaiseDataMemberChanged("ONote");
                    this.OnONoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OOperation
        {
            get
            {
                return this._oOperation;
            }
            set
            {
                if ((this._oOperation != value))
                {
                    this.OnOOperationChanging(value);
                    this.RaiseDataMemberChanging("OOperation");
                    this.ValidateProperty("OOperation", value);
                    this._oOperation = value;
                    this.RaiseDataMemberChanged("OOperation");
                    this.OnOOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OPermit
        {
            get
            {
                return this._oPermit;
            }
            set
            {
                if ((this._oPermit != value))
                {
                    this.OnOPermitChanging(value);
                    this.RaiseDataMemberChanging("OPermit");
                    this.ValidateProperty("OPermit", value);
                    this._oPermit = value;
                    this.RaiseDataMemberChanged("OPermit");
                    this.OnOPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OTonnes
        {
            get
            {
                return this._oTonnes;
            }
            set
            {
                if ((this._oTonnes != value))
                {
                    this.OnOTonnesChanging(value);
                    this.RaiseDataMemberChanging("OTonnes");
                    this.ValidateProperty("OTonnes", value);
                    this._oTonnes = value;
                    this.RaiseDataMemberChanged("OTonnes");
                    this.OnOTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string PNote
        {
            get
            {
                return this._pNote;
            }
            set
            {
                if ((this._pNote != value))
                {
                    this.OnPNoteChanging(value);
                    this.RaiseDataMemberChanging("PNote");
                    this.ValidateProperty("PNote", value);
                    this._pNote = value;
                    this.RaiseDataMemberChanged("PNote");
                    this.OnPNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'POperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> POperation
        {
            get
            {
                return this._pOperation;
            }
            set
            {
                if ((this._pOperation != value))
                {
                    this.OnPOperationChanging(value);
                    this.RaiseDataMemberChanging("POperation");
                    this.ValidateProperty("POperation", value);
                    this._pOperation = value;
                    this.RaiseDataMemberChanged("POperation");
                    this.OnPOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> PPermit
        {
            get
            {
                return this._pPermit;
            }
            set
            {
                if ((this._pPermit != value))
                {
                    this.OnPPermitChanging(value);
                    this.RaiseDataMemberChanging("PPermit");
                    this.ValidateProperty("PPermit", value);
                    this._pPermit = value;
                    this.RaiseDataMemberChanged("PPermit");
                    this.OnPPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> PTonnes
        {
            get
            {
                return this._pTonnes;
            }
            set
            {
                if ((this._pTonnes != value))
                {
                    this.OnPTonnesChanging(value);
                    this.RaiseDataMemberChanging("PTonnes");
                    this.ValidateProperty("PTonnes", value);
                    this._pTonnes = value;
                    this.RaiseDataMemberChanged("PTonnes");
                    this.OnPTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string SNote
        {
            get
            {
                return this._sNote;
            }
            set
            {
                if ((this._sNote != value))
                {
                    this.OnSNoteChanging(value);
                    this.RaiseDataMemberChanging("SNote");
                    this.ValidateProperty("SNote", value);
                    this._sNote = value;
                    this.RaiseDataMemberChanged("SNote");
                    this.OnSNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SOperation
        {
            get
            {
                return this._sOperation;
            }
            set
            {
                if ((this._sOperation != value))
                {
                    this.OnSOperationChanging(value);
                    this.RaiseDataMemberChanging("SOperation");
                    this.ValidateProperty("SOperation", value);
                    this._sOperation = value;
                    this.RaiseDataMemberChanged("SOperation");
                    this.OnSOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SPermit
        {
            get
            {
                return this._sPermit;
            }
            set
            {
                if ((this._sPermit != value))
                {
                    this.OnSPermitChanging(value);
                    this.RaiseDataMemberChanging("SPermit");
                    this.ValidateProperty("SPermit", value);
                    this._sPermit = value;
                    this.RaiseDataMemberChanged("SPermit");
                    this.OnSPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'STonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> STonnes
        {
            get
            {
                return this._sTonnes;
            }
            set
            {
                if ((this._sTonnes != value))
                {
                    this.OnSTonnesChanging(value);
                    this.RaiseDataMemberChanging("STonnes");
                    this.ValidateProperty("STonnes", value);
                    this._sTonnes = value;
                    this.RaiseDataMemberChanged("STonnes");
                    this.OnSTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(250)]
        public string VNote
        {
            get
            {
                return this._vNote;
            }
            set
            {
                if ((this._vNote != value))
                {
                    this.OnVNoteChanging(value);
                    this.RaiseDataMemberChanging("VNote");
                    this.ValidateProperty("VNote", value);
                    this._vNote = value;
                    this.RaiseDataMemberChanged("VNote");
                    this.OnVNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VOperation' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> VOperation
        {
            get
            {
                return this._vOperation;
            }
            set
            {
                if ((this._vOperation != value))
                {
                    this.OnVOperationChanging(value);
                    this.RaiseDataMemberChanging("VOperation");
                    this.ValidateProperty("VOperation", value);
                    this._vOperation = value;
                    this.RaiseDataMemberChanged("VOperation");
                    this.OnVOperationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VPermit' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> VPermit
        {
            get
            {
                return this._vPermit;
            }
            set
            {
                if ((this._vPermit != value))
                {
                    this.OnVPermitChanging(value);
                    this.RaiseDataMemberChanging("VPermit");
                    this.ValidateProperty("VPermit", value);
                    this._vPermit = value;
                    this.RaiseDataMemberChanged("VPermit");
                    this.OnVPermitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VTonnes' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> VTonnes
        {
            get
            {
                return this._vTonnes;
            }
            set
            {
                if ((this._vTonnes != value))
                {
                    this.OnVTonnesChanging(value);
                    this.RaiseDataMemberChanging("VTonnes");
                    this.ValidateProperty("VTonnes", value);
                    this._vTonnes = value;
                    this.RaiseDataMemberChanged("VTonnes");
                    this.OnVTonnesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Year' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> Year
        {
            get
            {
                return this._year;
            }
            set
            {
                if ((this._year != value))
                {
                    this.OnYearChanging(value);
                    this.RaiseDataMemberChanging("Year");
                    this.ValidateProperty("Year", value);
                    this._year = value;
                    this.RaiseDataMemberChanged("Year");
                    this.OnYearChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'tblAdminUsers' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblAdminUsers : Entity
    {
        
        private int _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblAdminUsers"/> class.
        /// </summary>
        public tblAdminUsers()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._userId;
        }
    }
    
    /// <summary>
    /// The 'tblDataType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblDataType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblDataType"/> class.
        /// </summary>
        public tblDataType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'tblInfoType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblInfoType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblInfoType"/> class.
        /// </summary>
        public tblInfoType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'tblMission' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblMission : Entity
    {
        
        private string _comments;
        
        private string _endDate;
        
        private int _locationID;
        
        private int _missionID;
        
        private string _personel;
        
        private string _preparedBy;
        
        private string _pupose;
        
        private string _startDate;
        
        private string _subject;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCommentsChanging(string value);
        partial void OnCommentsChanged();
        partial void OnEndDateChanging(string value);
        partial void OnEndDateChanged();
        partial void OnLocationIDChanging(int value);
        partial void OnLocationIDChanged();
        partial void OnMissionIDChanging(int value);
        partial void OnMissionIDChanged();
        partial void OnPersonelChanging(string value);
        partial void OnPersonelChanged();
        partial void OnPreparedByChanging(string value);
        partial void OnPreparedByChanged();
        partial void OnPuposeChanging(string value);
        partial void OnPuposeChanged();
        partial void OnStartDateChanging(string value);
        partial void OnStartDateChanged();
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblMission"/> class.
        /// </summary>
        public tblMission()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Comments' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((this._comments != value))
                {
                    this.OnCommentsChanging(value);
                    this.RaiseDataMemberChanging("Comments");
                    this.ValidateProperty("Comments", value);
                    this._comments = value;
                    this.RaiseDataMemberChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EndDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                if ((this._endDate != value))
                {
                    this.OnEndDateChanging(value);
                    this.RaiseDataMemberChanging("EndDate");
                    this.ValidateProperty("EndDate", value);
                    this._endDate = value;
                    this.RaiseDataMemberChanged("EndDate");
                    this.OnEndDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocationID' value.
        /// </summary>
        [DataMember()]
        public int LocationID
        {
            get
            {
                return this._locationID;
            }
            set
            {
                if ((this._locationID != value))
                {
                    this.OnLocationIDChanging(value);
                    this.RaiseDataMemberChanging("LocationID");
                    this.ValidateProperty("LocationID", value);
                    this._locationID = value;
                    this.RaiseDataMemberChanged("LocationID");
                    this.OnLocationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MissionID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int MissionID
        {
            get
            {
                return this._missionID;
            }
            set
            {
                if ((this._missionID != value))
                {
                    this.OnMissionIDChanging(value);
                    this.ValidateProperty("MissionID", value);
                    this._missionID = value;
                    this.RaisePropertyChanged("MissionID");
                    this.OnMissionIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Personel' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string Personel
        {
            get
            {
                return this._personel;
            }
            set
            {
                if ((this._personel != value))
                {
                    this.OnPersonelChanging(value);
                    this.RaiseDataMemberChanging("Personel");
                    this.ValidateProperty("Personel", value);
                    this._personel = value;
                    this.RaiseDataMemberChanged("Personel");
                    this.OnPersonelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PreparedBy' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string PreparedBy
        {
            get
            {
                return this._preparedBy;
            }
            set
            {
                if ((this._preparedBy != value))
                {
                    this.OnPreparedByChanging(value);
                    this.RaiseDataMemberChanging("PreparedBy");
                    this.ValidateProperty("PreparedBy", value);
                    this._preparedBy = value;
                    this.RaiseDataMemberChanged("PreparedBy");
                    this.OnPreparedByChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Pupose' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Pupose
        {
            get
            {
                return this._pupose;
            }
            set
            {
                if ((this._pupose != value))
                {
                    this.OnPuposeChanging(value);
                    this.RaiseDataMemberChanging("Pupose");
                    this.ValidateProperty("Pupose", value);
                    this._pupose = value;
                    this.RaiseDataMemberChanged("Pupose");
                    this.OnPuposeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StartDate' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((this._startDate != value))
                {
                    this.OnStartDateChanging(value);
                    this.RaiseDataMemberChanging("StartDate");
                    this.ValidateProperty("StartDate", value);
                    this._startDate = value;
                    this.RaiseDataMemberChanged("StartDate");
                    this.OnStartDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Subject' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Subject
        {
            get
            {
                return this._subject;
            }
            set
            {
                if ((this._subject != value))
                {
                    this.OnSubjectChanging(value);
                    this.RaiseDataMemberChanging("Subject");
                    this.ValidateProperty("Subject", value);
                    this._subject = value;
                    this.RaiseDataMemberChanged("Subject");
                    this.OnSubjectChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._missionID;
        }
    }
    
    /// <summary>
    /// The 'tblOstan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblOstan : Entity
    {
        
        private int _id;
        
        private string _name_Fa;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnName_FaChanging(string value);
        partial void OnName_FaChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblOstan"/> class.
        /// </summary>
        public tblOstan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name_Fa' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name_Fa
        {
            get
            {
                return this._name_Fa;
            }
            set
            {
                if ((this._name_Fa != value))
                {
                    this.OnName_FaChanging(value);
                    this.RaiseDataMemberChanging("Name_Fa");
                    this.ValidateProperty("Name_Fa", value);
                    this._name_Fa = value;
                    this.RaiseDataMemberChanged("Name_Fa");
                    this.OnName_FaChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'tblPorts' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblPorts : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblPorts"/> class.
        /// </summary>
        public tblPorts()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'tblProjectMap' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblProjectMap : Entity
    {
        
        private int _cpedPrjID;
        
        private EntityRef<DocTitleTree> _docTitleTree;
        
        private int _prjID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCPEDPrjIDChanging(int value);
        partial void OnCPEDPrjIDChanged();
        partial void OnPrjIDChanging(int value);
        partial void OnPrjIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblProjectMap"/> class.
        /// </summary>
        public tblProjectMap()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'CPEDPrjID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int CPEDPrjID
        {
            get
            {
                return this._cpedPrjID;
            }
            set
            {
                if ((this._cpedPrjID != value))
                {
                    this.OnCPEDPrjIDChanging(value);
                    this.RaiseDataMemberChanging("CPEDPrjID");
                    this.ValidateProperty("CPEDPrjID", value);
                    this._cpedPrjID = value;
                    this.RaiseDataMemberChanged("CPEDPrjID");
                    this.OnCPEDPrjIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="DocTitleTree"/> entity.
        /// </summary>
        [Association("DocTitleTree_tblProjectMap", "CPEDPrjID", "TitleId", IsForeignKey=true)]
        [XmlIgnore()]
        public DocTitleTree DocTitleTree
        {
            get
            {
                if ((this._docTitleTree == null))
                {
                    this._docTitleTree = new EntityRef<DocTitleTree>(this, "DocTitleTree", this.FilterDocTitleTree);
                }
                return this._docTitleTree.Entity;
            }
            set
            {
                DocTitleTree previous = this.DocTitleTree;
                if ((previous != value))
                {
                    this.ValidateProperty("DocTitleTree", value);
                    if ((previous != null))
                    {
                        this._docTitleTree.Entity = null;
                        previous.tblProjectMap.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.CPEDPrjID = value.TitleId;
                    }
                    else
                    {
                        this.CPEDPrjID = default(int);
                    }
                    this._docTitleTree.Entity = value;
                    if ((value != null))
                    {
                        value.tblProjectMap.Add(this);
                    }
                    this.RaisePropertyChanged("DocTitleTree");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PrjID' value.
        /// </summary>
        [DataMember()]
        [Key()]
        [RoundtripOriginal()]
        public int PrjID
        {
            get
            {
                return this._prjID;
            }
            set
            {
                if ((this._prjID != value))
                {
                    this.OnPrjIDChanging(value);
                    this.RaiseDataMemberChanging("PrjID");
                    this.ValidateProperty("PrjID", value);
                    this._prjID = value;
                    this.RaiseDataMemberChanged("PrjID");
                    this.OnPrjIDChanged();
                }
            }
        }
        
        private bool FilterDocTitleTree(DocTitleTree entity)
        {
            return (entity.TitleId == this.CPEDPrjID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._cpedPrjID, this._prjID);
        }
    }
    
    /// <summary>
    /// The 'tblUsers' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class tblUsers : Entity
    {
        
        private int _fieldId;
        
        private string _userID;
        
        private string _userName;
        
        private string _userPass;
        
        private int _usersID;
        
        private Nullable<int> _userTypeID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnUserIDChanging(string value);
        partial void OnUserIDChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnUserPassChanging(string value);
        partial void OnUserPassChanged();
        partial void OnUsersIDChanging(int value);
        partial void OnUsersIDChanged();
        partial void OnUserTypeIDChanging(Nullable<int> value);
        partial void OnUserTypeIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="tblUsers"/> class.
        /// </summary>
        public tblUsers()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaiseDataMemberChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.RaiseDataMemberChanging("UserName");
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaiseDataMemberChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserPass' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string UserPass
        {
            get
            {
                return this._userPass;
            }
            set
            {
                if ((this._userPass != value))
                {
                    this.OnUserPassChanging(value);
                    this.RaiseDataMemberChanging("UserPass");
                    this.ValidateProperty("UserPass", value);
                    this._userPass = value;
                    this.RaiseDataMemberChanged("UserPass");
                    this.OnUserPassChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UsersID' value.
        /// </summary>
        [DataMember()]
        public int UsersID
        {
            get
            {
                return this._usersID;
            }
            set
            {
                if ((this._usersID != value))
                {
                    this.OnUsersIDChanging(value);
                    this.RaiseDataMemberChanging("UsersID");
                    this.ValidateProperty("UsersID", value);
                    this._usersID = value;
                    this.RaiseDataMemberChanged("UsersID");
                    this.OnUsersIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserTypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> UserTypeID
        {
            get
            {
                return this._userTypeID;
            }
            set
            {
                if ((this._userTypeID != value))
                {
                    this.OnUserTypeIDChanging(value);
                    this.RaiseDataMemberChanging("UserTypeID");
                    this.ValidateProperty("UserTypeID", value);
                    this._userTypeID = value;
                    this.RaiseDataMemberChanged("UserTypeID");
                    this.OnUserTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'TitleLocation' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class TitleLocation : Entity
    {
        
        private int _fieldId;
        
        private int _locationID;
        
        private int _titleID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnLocationIDChanging(int value);
        partial void OnLocationIDChanged();
        partial void OnTitleIDChanging(int value);
        partial void OnTitleIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="TitleLocation"/> class.
        /// </summary>
        public TitleLocation()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LocationID' value.
        /// </summary>
        [DataMember()]
        public int LocationID
        {
            get
            {
                return this._locationID;
            }
            set
            {
                if ((this._locationID != value))
                {
                    this.OnLocationIDChanging(value);
                    this.RaiseDataMemberChanging("LocationID");
                    this.ValidateProperty("LocationID", value);
                    this._locationID = value;
                    this.RaiseDataMemberChanged("LocationID");
                    this.OnLocationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleID' value.
        /// </summary>
        [DataMember()]
        public int TitleID
        {
            get
            {
                return this._titleID;
            }
            set
            {
                if ((this._titleID != value))
                {
                    this.OnTitleIDChanging(value);
                    this.RaiseDataMemberChanging("TitleID");
                    this.ValidateProperty("TitleID", value);
                    this._titleID = value;
                    this.RaiseDataMemberChanged("TitleID");
                    this.OnTitleIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'TitleSpec' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class TitleSpec : Entity
    {
        
        private int _fieldId;
        
        private string _titleDesc;
        
        private Nullable<int> _titleID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnTitleDescChanging(string value);
        partial void OnTitleDescChanged();
        partial void OnTitleIDChanging(Nullable<int> value);
        partial void OnTitleIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="TitleSpec"/> class.
        /// </summary>
        public TitleSpec()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(512)]
        public string TitleDesc
        {
            get
            {
                return this._titleDesc;
            }
            set
            {
                if ((this._titleDesc != value))
                {
                    this.OnTitleDescChanging(value);
                    this.RaiseDataMemberChanging("TitleDesc");
                    this.ValidateProperty("TitleDesc", value);
                    this._titleDesc = value;
                    this.RaiseDataMemberChanged("TitleDesc");
                    this.OnTitleDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TitleID
        {
            get
            {
                return this._titleID;
            }
            set
            {
                if ((this._titleID != value))
                {
                    this.OnTitleIDChanging(value);
                    this.RaiseDataMemberChanging("TitleID");
                    this.ValidateProperty("TitleID", value);
                    this._titleID = value;
                    this.RaiseDataMemberChanged("TitleID");
                    this.OnTitleIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'TreeLayer' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class TreeLayer : Entity
    {
        
        private string _code;
        
        private int _fieldId;
        
        private string _nameEn;
        
        private string _nameFa;
        
        private int _objectid;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnNameEnChanging(string value);
        partial void OnNameEnChanged();
        partial void OnNameFaChanging(string value);
        partial void OnNameFaChanged();
        partial void OnOBJECTIDChanging(int value);
        partial void OnOBJECTIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="TreeLayer"/> class.
        /// </summary>
        public TreeLayer()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Code' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Code
        {
            get
            {
                return this._code;
            }
            set
            {
                if ((this._code != value))
                {
                    this.OnCodeChanging(value);
                    this.RaiseDataMemberChanging("Code");
                    this.ValidateProperty("Code", value);
                    this._code = value;
                    this.RaiseDataMemberChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameEn' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NameEn
        {
            get
            {
                return this._nameEn;
            }
            set
            {
                if ((this._nameEn != value))
                {
                    this.OnNameEnChanging(value);
                    this.RaiseDataMemberChanging("NameEn");
                    this.ValidateProperty("NameEn", value);
                    this._nameEn = value;
                    this.RaiseDataMemberChanged("NameEn");
                    this.OnNameEnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NameFa' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string NameFa
        {
            get
            {
                return this._nameFa;
            }
            set
            {
                if ((this._nameFa != value))
                {
                    this.OnNameFaChanging(value);
                    this.RaiseDataMemberChanging("NameFa");
                    this.ValidateProperty("NameFa", value);
                    this._nameFa = value;
                    this.RaiseDataMemberChanged("NameFa");
                    this.OnNameFaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OBJECTID' value.
        /// </summary>
        [DataMember()]
        public int OBJECTID
        {
            get
            {
                return this._objectid;
            }
            set
            {
                if ((this._objectid != value))
                {
                    this.OnOBJECTIDChanging(value);
                    this.RaiseDataMemberChanging("OBJECTID");
                    this.ValidateProperty("OBJECTID", value);
                    this._objectid = value;
                    this.RaiseDataMemberChanged("OBJECTID");
                    this.OnOBJECTIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'User' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class User : Entity, global::System.Security.Principal.IIdentity, global::System.Security.Principal.IPrincipal
    {
        
        private string _firstName;
        
        private string _isChangePasswordNeeded;
        
        private string _lastName;
        
        private string _name = string.Empty;
        
        private string _organization;
        
        private IEnumerable<string> _roles;
        
        private string _userComment;
        
        private string _userEmail;
        
        private string _userID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnIsChangePasswordNeededChanging(string value);
        partial void OnIsChangePasswordNeededChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnOrganizationChanging(string value);
        partial void OnOrganizationChanged();
        partial void OnRolesChanging(IEnumerable<string> value);
        partial void OnRolesChanged();
        partial void OnUserCommentChanging(string value);
        partial void OnUserCommentChanged();
        partial void OnUserEmailChanging(string value);
        partial void OnUserEmailChanged();
        partial void OnUserIDChanging(string value);
        partial void OnUserIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        public User()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsChangePasswordNeeded' value.
        /// </summary>
        [DataMember()]
        public string IsChangePasswordNeeded
        {
            get
            {
                return this._isChangePasswordNeeded;
            }
            set
            {
                if ((this._isChangePasswordNeeded != value))
                {
                    this.OnIsChangePasswordNeededChanging(value);
                    this.RaiseDataMemberChanging("IsChangePasswordNeeded");
                    this.ValidateProperty("IsChangePasswordNeeded", value);
                    this._isChangePasswordNeeded = value;
                    this.RaiseDataMemberChanged("IsChangePasswordNeeded");
                    this.OnIsChangePasswordNeededChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaisePropertyChanged("Name");
                    this.OnNameChanged();
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Organization' value.
        /// </summary>
        [DataMember()]
        public string Organization
        {
            get
            {
                return this._organization;
            }
            set
            {
                if ((this._organization != value))
                {
                    this.OnOrganizationChanging(value);
                    this.RaiseDataMemberChanging("Organization");
                    this.ValidateProperty("Organization", value);
                    this._organization = value;
                    this.RaiseDataMemberChanged("Organization");
                    this.OnOrganizationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Roles' value.
        /// </summary>
        [DataMember()]
        [Editable(false)]
        public IEnumerable<string> Roles
        {
            get
            {
                return this._roles;
            }
            set
            {
                if ((this._roles != value))
                {
                    this.OnRolesChanging(value);
                    this.ValidateProperty("Roles", value);
                    this._roles = value;
                    this.RaisePropertyChanged("Roles");
                    this.OnRolesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserComment' value.
        /// </summary>
        [DataMember()]
        public string UserComment
        {
            get
            {
                return this._userComment;
            }
            set
            {
                if ((this._userComment != value))
                {
                    this.OnUserCommentChanging(value);
                    this.RaiseDataMemberChanging("UserComment");
                    this.ValidateProperty("UserComment", value);
                    this._userComment = value;
                    this.RaiseDataMemberChanged("UserComment");
                    this.OnUserCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserEmail' value.
        /// </summary>
        [DataMember()]
        public string UserEmail
        {
            get
            {
                return this._userEmail;
            }
            set
            {
                if ((this._userEmail != value))
                {
                    this.OnUserEmailChanging(value);
                    this.RaiseDataMemberChanging("UserEmail");
                    this.ValidateProperty("UserEmail", value);
                    this._userEmail = value;
                    this.RaiseDataMemberChanged("UserEmail");
                    this.OnUserEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserID' value.
        /// </summary>
        [DataMember()]
        public string UserID
        {
            get
            {
                return this._userID;
            }
            set
            {
                if ((this._userID != value))
                {
                    this.OnUserIDChanging(value);
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._userID = value;
                    this.RaiseDataMemberChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        string global::System.Security.Principal.IIdentity.AuthenticationType
        {
            get
            {
                return string.Empty;
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the identity is authenticated.
        /// </summary>
        /// <remarks>
        /// This value is <c>true</c> if <see cref="Name"/> is not <c>null</c> or empty.
        /// </remarks>
        public bool IsAuthenticated
        {
            get
            {
                return (true != string.IsNullOrEmpty(this.Name));
            }
        }
        
        string global::System.Security.Principal.IIdentity.Name
        {
            get
            {
                return this.Name;
            }
        }
        
        global::System.Security.Principal.IIdentity global::System.Security.Principal.IPrincipal.Identity
        {
            get
            {
                return this;
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._name;
        }
        
        /// <summary>
        /// Return whether the principal is in the role.
        /// </summary>
        /// <remarks>
        /// Returns whether the specified role is contained in the roles.
        /// This implementation is case sensitive.
        /// </remarks>
        /// <param name="role">The name of the role for which to check membership.</param>
        /// <returns>Whether the principal is in the role.</returns>
        public bool IsInRole(string role)
        {
            if ((this.Roles == null))
            {
                return false;
            }
            return global::System.Linq.Enumerable.Contains(this.Roles, role);
        }
    }
    
    /// <summary>
    /// The 'UserAccess' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class UserAccess : Entity
    {
        
        private int _accessTypeID;
        
        private int _docID;
        
        private int _fieldId;
        
        private int _usersID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAccessTypeIDChanging(int value);
        partial void OnAccessTypeIDChanged();
        partial void OnDocIDChanging(int value);
        partial void OnDocIDChanged();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnUsersIDChanging(int value);
        partial void OnUsersIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserAccess"/> class.
        /// </summary>
        public UserAccess()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AccessTypeID' value.
        /// </summary>
        [DataMember()]
        public int AccessTypeID
        {
            get
            {
                return this._accessTypeID;
            }
            set
            {
                if ((this._accessTypeID != value))
                {
                    this.OnAccessTypeIDChanging(value);
                    this.RaiseDataMemberChanging("AccessTypeID");
                    this.ValidateProperty("AccessTypeID", value);
                    this._accessTypeID = value;
                    this.RaiseDataMemberChanged("AccessTypeID");
                    this.OnAccessTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DocID' value.
        /// </summary>
        [DataMember()]
        public int DocID
        {
            get
            {
                return this._docID;
            }
            set
            {
                if ((this._docID != value))
                {
                    this.OnDocIDChanging(value);
                    this.RaiseDataMemberChanging("DocID");
                    this.ValidateProperty("DocID", value);
                    this._docID = value;
                    this.RaiseDataMemberChanged("DocID");
                    this.OnDocIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UsersID' value.
        /// </summary>
        [DataMember()]
        public int UsersID
        {
            get
            {
                return this._usersID;
            }
            set
            {
                if ((this._usersID != value))
                {
                    this.OnUsersIDChanging(value);
                    this.RaiseDataMemberChanging("UsersID");
                    this.ValidateProperty("UsersID", value);
                    this._usersID = value;
                    this.RaiseDataMemberChanged("UsersID");
                    this.OnUsersIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'UserLogs' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class UserLogs : Entity
    {
        
        private string _action;
        
        private string _actionDesc;
        
        private Nullable<DateTime> _date;
        
        private long _id;
        
        private string _ip;
        
        private string _userName;
        
        private string _webBrowser;
        
        private string _webBrowserVersion;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnActionChanging(string value);
        partial void OnActionChanged();
        partial void OnActionDescChanging(string value);
        partial void OnActionDescChanged();
        partial void OnDateChanging(Nullable<DateTime> value);
        partial void OnDateChanged();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnIPChanging(string value);
        partial void OnIPChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnWebBrowserChanging(string value);
        partial void OnWebBrowserChanged();
        partial void OnWebBrowserVersionChanging(string value);
        partial void OnWebBrowserVersionChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserLogs"/> class.
        /// </summary>
        public UserLogs()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Action' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Action
        {
            get
            {
                return this._action;
            }
            set
            {
                if ((this._action != value))
                {
                    this.OnActionChanging(value);
                    this.RaiseDataMemberChanging("Action");
                    this.ValidateProperty("Action", value);
                    this._action = value;
                    this.RaiseDataMemberChanged("Action");
                    this.OnActionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ActionDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(200)]
        public string ActionDesc
        {
            get
            {
                return this._actionDesc;
            }
            set
            {
                if ((this._actionDesc != value))
                {
                    this.OnActionDescChanging(value);
                    this.RaiseDataMemberChanging("ActionDesc");
                    this.ValidateProperty("ActionDesc", value);
                    this._actionDesc = value;
                    this.RaiseDataMemberChanged("ActionDesc");
                    this.OnActionDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Date' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> Date
        {
            get
            {
                return this._date;
            }
            set
            {
                if ((this._date != value))
                {
                    this.OnDateChanging(value);
                    this.RaiseDataMemberChanging("Date");
                    this.ValidateProperty("Date", value);
                    this._date = value;
                    this.RaiseDataMemberChanged("Date");
                    this.OnDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public long ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IP' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string IP
        {
            get
            {
                return this._ip;
            }
            set
            {
                if ((this._ip != value))
                {
                    this.OnIPChanging(value);
                    this.RaiseDataMemberChanging("IP");
                    this.ValidateProperty("IP", value);
                    this._ip = value;
                    this.RaiseDataMemberChanged("IP");
                    this.OnIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.RaiseDataMemberChanging("UserName");
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaiseDataMemberChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WebBrowser' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string WebBrowser
        {
            get
            {
                return this._webBrowser;
            }
            set
            {
                if ((this._webBrowser != value))
                {
                    this.OnWebBrowserChanging(value);
                    this.RaiseDataMemberChanging("WebBrowser");
                    this.ValidateProperty("WebBrowser", value);
                    this._webBrowser = value;
                    this.RaiseDataMemberChanged("WebBrowser");
                    this.OnWebBrowserChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'WebBrowserVersion' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string WebBrowserVersion
        {
            get
            {
                return this._webBrowserVersion;
            }
            set
            {
                if ((this._webBrowserVersion != value))
                {
                    this.OnWebBrowserVersionChanging(value);
                    this.RaiseDataMemberChanging("WebBrowserVersion");
                    this.ValidateProperty("WebBrowserVersion", value);
                    this._webBrowserVersion = value;
                    this.RaiseDataMemberChanged("WebBrowserVersion");
                    this.OnWebBrowserVersionChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'UserRegistrationService' DomainService.
    /// </summary>
    public sealed partial class UserRegistrationContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRegistrationContext"/> class.
        /// </summary>
        public UserRegistrationContext() : 
                this(new WebDomainClient<IUserRegistrationServiceContract>(new Uri("LanSysWebGIS-Web-UserRegistrationService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRegistrationContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The UserRegistrationService service URI.</param>
        public UserRegistrationContext(Uri serviceUri) : 
                this(new WebDomainClient<IUserRegistrationServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRegistrationContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public UserRegistrationContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePassword' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="oldPassword">The value for the 'oldPassword' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ChangePassword(string userName, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string oldPassword, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string newPassword, Action<InvokeOperation<bool>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("oldPassword", oldPassword);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePassword", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ChangePassword", typeof(bool), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePassword' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="oldPassword">The value for the 'oldPassword' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ChangePassword(string userName, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string oldPassword, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string newPassword)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("oldPassword", oldPassword);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePassword", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ChangePassword", typeof(bool), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePasswordByAdmin' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ChangePasswordByAdmin(string userName, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string newPassword, Action<InvokeOperation<bool>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePasswordByAdmin", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ChangePasswordByAdmin", typeof(bool), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ChangePasswordByAdmin' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ChangePasswordByAdmin(string userName, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string newPassword)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("newPassword", newPassword);
            this.ValidateMethod("ChangePasswordByAdmin", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ChangePasswordByAdmin", typeof(bool), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'CreateUser' method of the DomainService.
        /// </summary>
        /// <param name="user">The value for the 'user' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<CreateUserStatus> CreateUser(RegistrationData user, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string password, Action<InvokeOperation<CreateUserStatus>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("user", user);
            parameters.Add("password", password);
            this.ValidateMethod("CreateUser", parameters);
            return ((InvokeOperation<CreateUserStatus>)(this.InvokeOperation("CreateUser", typeof(CreateUserStatus), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'CreateUser' method of the DomainService.
        /// </summary>
        /// <param name="user">The value for the 'user' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<CreateUserStatus> CreateUser(RegistrationData user, [Required(ErrorMessageResourceName="ValidationErrorRequiredField", ErrorMessageResourceType=typeof(ValidationErrorResources))] string password)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("user", user);
            parameters.Add("password", password);
            this.ValidateMethod("CreateUser", parameters);
            return ((InvokeOperation<CreateUserStatus>)(this.InvokeOperation("CreateUser", typeof(CreateUserStatus), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetAllRoles' method of the DomainService.
        /// </summary>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<string[]> GetAllRoles(Action<InvokeOperation<string[]>> callback, object userState)
        {
            this.ValidateMethod("GetAllRoles", null);
            return ((InvokeOperation<string[]>)(this.InvokeOperation("GetAllRoles", typeof(string[]), null, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'GetAllRoles' method of the DomainService.
        /// </summary>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<string[]> GetAllRoles()
        {
            this.ValidateMethod("GetAllRoles", null);
            return ((InvokeOperation<string[]>)(this.InvokeOperation("GetAllRoles", typeof(string[]), null, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ResetPassword' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="emailAddress">The value for the 'emailAddress' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ResetPassword(string userName, string emailAddress, Action<InvokeOperation<bool>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("emailAddress", emailAddress);
            this.ValidateMethod("ResetPassword", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ResetPassword", typeof(bool), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'ResetPassword' method of the DomainService.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of this action.</param>
        /// <param name="emailAddress">The value for the 'emailAddress' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<bool> ResetPassword(string userName, string emailAddress)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("emailAddress", emailAddress);
            this.ValidateMethod("ResetPassword", parameters);
            return ((InvokeOperation<bool>)(this.InvokeOperation("ResetPassword", typeof(bool), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'SendEmail' method of the DomainService.
        /// </summary>
        /// <param name="fromAddress">The value for the 'fromAddress' parameter of this action.</param>
        /// <param name="toAddress">The value for the 'toAddress' parameter of this action.</param>
        /// <param name="bccAddress">The value for the 'bccAddress' parameter of this action.</param>
        /// <param name="ccAddress">The value for the 'ccAddress' parameter of this action.</param>
        /// <param name="subject">The value for the 'subject' parameter of this action.</param>
        /// <param name="body">The value for the 'body' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation SendEmail(string fromAddress, string toAddress, string bccAddress, string ccAddress, string subject, string body, Action<InvokeOperation> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("fromAddress", fromAddress);
            parameters.Add("toAddress", toAddress);
            parameters.Add("bccAddress", bccAddress);
            parameters.Add("ccAddress", ccAddress);
            parameters.Add("subject", subject);
            parameters.Add("body", body);
            this.ValidateMethod("SendEmail", parameters);
            return this.InvokeOperation("SendEmail", typeof(void), parameters, true, callback, userState);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'SendEmail' method of the DomainService.
        /// </summary>
        /// <param name="fromAddress">The value for the 'fromAddress' parameter of this action.</param>
        /// <param name="toAddress">The value for the 'toAddress' parameter of this action.</param>
        /// <param name="bccAddress">The value for the 'bccAddress' parameter of this action.</param>
        /// <param name="ccAddress">The value for the 'ccAddress' parameter of this action.</param>
        /// <param name="subject">The value for the 'subject' parameter of this action.</param>
        /// <param name="body">The value for the 'body' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation SendEmail(string fromAddress, string toAddress, string bccAddress, string ccAddress, string subject, string body)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("fromAddress", fromAddress);
            parameters.Add("toAddress", toAddress);
            parameters.Add("bccAddress", bccAddress);
            parameters.Add("ccAddress", ccAddress);
            parameters.Add("subject", subject);
            parameters.Add("body", body);
            this.ValidateMethod("SendEmail", parameters);
            return this.InvokeOperation("SendEmail", typeof(void), parameters, true, null, null);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new UserRegistrationContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'UserRegistrationService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IUserRegistrationServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'ChangePassword' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="oldPassword">The value for the 'oldPassword' parameter of this action.</param>
            /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/ChangePasswordDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/ChangePassword", ReplyAction="http://tempuri.org/UserRegistrationService/ChangePasswordResponse")]
            IAsyncResult BeginChangePassword(string userName, string oldPassword, string newPassword, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginChangePassword'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginChangePassword'.</param>
            /// <returns>The 'Boolean' returned from the 'ChangePassword' operation.</returns>
            bool EndChangePassword(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'ChangePasswordByAdmin' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="newPassword">The value for the 'newPassword' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/ChangePasswordByAdminDomainServiceFaul" +
                "t", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/ChangePasswordByAdmin", ReplyAction="http://tempuri.org/UserRegistrationService/ChangePasswordByAdminResponse")]
            IAsyncResult BeginChangePasswordByAdmin(string userName, string newPassword, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginChangePasswordByAdmin'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginChangePasswordByAdmin'.</param>
            /// <returns>The 'Boolean' returned from the 'ChangePasswordByAdmin' operation.</returns>
            bool EndChangePasswordByAdmin(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'CreateUser' operation.
            /// </summary>
            /// <param name="user">The value for the 'user' parameter of this action.</param>
            /// <param name="password">The value for the 'password' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/CreateUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/CreateUser", ReplyAction="http://tempuri.org/UserRegistrationService/CreateUserResponse")]
            IAsyncResult BeginCreateUser(RegistrationData user, string password, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginCreateUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginCreateUser'.</param>
            /// <returns>The 'CreateUserStatus' returned from the 'CreateUser' operation.</returns>
            CreateUserStatus EndCreateUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetAllRoles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/GetAllRolesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/GetAllRoles", ReplyAction="http://tempuri.org/UserRegistrationService/GetAllRolesResponse")]
            IAsyncResult BeginGetAllRoles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetAllRoles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetAllRoles'.</param>
            /// <returns>The 'String[]' returned from the 'GetAllRoles' operation.</returns>
            string[] EndGetAllRoles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'ResetPassword' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="emailAddress">The value for the 'emailAddress' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/ResetPasswordDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/ResetPassword", ReplyAction="http://tempuri.org/UserRegistrationService/ResetPasswordResponse")]
            IAsyncResult BeginResetPassword(string userName, string emailAddress, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginResetPassword'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginResetPassword'.</param>
            /// <returns>The 'Boolean' returned from the 'ResetPassword' operation.</returns>
            bool EndResetPassword(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SendEmail' operation.
            /// </summary>
            /// <param name="fromAddress">The value for the 'fromAddress' parameter of this action.</param>
            /// <param name="toAddress">The value for the 'toAddress' parameter of this action.</param>
            /// <param name="bccAddress">The value for the 'bccAddress' parameter of this action.</param>
            /// <param name="ccAddress">The value for the 'ccAddress' parameter of this action.</param>
            /// <param name="subject">The value for the 'subject' parameter of this action.</param>
            /// <param name="body">The value for the 'body' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/UserRegistrationService/SendEmailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/UserRegistrationService/SendEmail", ReplyAction="http://tempuri.org/UserRegistrationService/SendEmailResponse")]
            IAsyncResult BeginSendEmail(string fromAddress, string toAddress, string bccAddress, string ccAddress, string subject, string body, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSendEmail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSendEmail'.</param>
            void EndSendEmail(IAsyncResult result);
        }
        
        internal sealed class UserRegistrationContextEntityContainer : EntityContainer
        {
            
            public UserRegistrationContextEntityContainer()
            {
            }
        }
    }
    
    /// <summary>
    /// The 'UsersInRoles' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class UsersInRoles : Entity
    {
        
        private Guid _roleId;
        
        private Guid _userId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnRoleIdChanging(Guid value);
        partial void OnRoleIdChanged();
        partial void OnUserIdChanging(Guid value);
        partial void OnUserIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UsersInRoles"/> class.
        /// </summary>
        public UsersInRoles()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'RoleId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid RoleId
        {
            get
            {
                return this._roleId;
            }
            set
            {
                if ((this._roleId != value))
                {
                    this.OnRoleIdChanging(value);
                    this.ValidateProperty("RoleId", value);
                    this._roleId = value;
                    this.RaisePropertyChanged("RoleId");
                    this.OnRoleIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaisePropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._roleId, this._userId);
        }
    }
    
    /// <summary>
    /// The 'UserType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class UserType : Entity
    {
        
        private int _fieldId;
        
        private string _userTypeDesc;
        
        private int _userTypeID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFieldIdChanging(int value);
        partial void OnFieldIdChanged();
        partial void OnUserTypeDescChanging(string value);
        partial void OnUserTypeDescChanged();
        partial void OnUserTypeIDChanging(int value);
        partial void OnUserTypeIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserType"/> class.
        /// </summary>
        public UserType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FieldId' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                if ((this._fieldId != value))
                {
                    this.OnFieldIdChanging(value);
                    this.ValidateProperty("FieldId", value);
                    this._fieldId = value;
                    this.RaisePropertyChanged("FieldId");
                    this.OnFieldIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserTypeDesc' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string UserTypeDesc
        {
            get
            {
                return this._userTypeDesc;
            }
            set
            {
                if ((this._userTypeDesc != value))
                {
                    this.OnUserTypeDescChanging(value);
                    this.RaiseDataMemberChanging("UserTypeDesc");
                    this.ValidateProperty("UserTypeDesc", value);
                    this._userTypeDesc = value;
                    this.RaiseDataMemberChanged("UserTypeDesc");
                    this.OnUserTypeDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserTypeID' value.
        /// </summary>
        [DataMember()]
        public int UserTypeID
        {
            get
            {
                return this._userTypeID;
            }
            set
            {
                if ((this._userTypeID != value))
                {
                    this.OnUserTypeIDChanging(value);
                    this.RaiseDataMemberChanging("UserTypeID");
                    this.ValidateProperty("UserTypeID", value);
                    this._userTypeID = value;
                    this.RaiseDataMemberChanged("UserTypeID");
                    this.OnUserTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._fieldId;
        }
    }
    
    /// <summary>
    /// The 'vport' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vport : Entity
    {
        
        private Nullable<double> _distToLocation;
        
        private string _endUser;
        
        private string _location;
        
        private string _owner;
        
        private int _portID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDistToLocationChanging(Nullable<double> value);
        partial void OnDistToLocationChanged();
        partial void OnEndUserChanging(string value);
        partial void OnEndUserChanged();
        partial void OnLocationChanging(string value);
        partial void OnLocationChanged();
        partial void OnOwnerChanging(string value);
        partial void OnOwnerChanged();
        partial void OnPortIDChanging(int value);
        partial void OnPortIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vport"/> class.
        /// </summary>
        public vport()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DistToLocation' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> DistToLocation
        {
            get
            {
                return this._distToLocation;
            }
            set
            {
                if ((this._distToLocation != value))
                {
                    this.OnDistToLocationChanging(value);
                    this.RaiseDataMemberChanging("DistToLocation");
                    this.ValidateProperty("DistToLocation", value);
                    this._distToLocation = value;
                    this.RaiseDataMemberChanged("DistToLocation");
                    this.OnDistToLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EndUser' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string EndUser
        {
            get
            {
                return this._endUser;
            }
            set
            {
                if ((this._endUser != value))
                {
                    this.OnEndUserChanging(value);
                    this.RaiseDataMemberChanging("EndUser");
                    this.ValidateProperty("EndUser", value);
                    this._endUser = value;
                    this.RaiseDataMemberChanged("EndUser");
                    this.OnEndUserChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Location' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Location
        {
            get
            {
                return this._location;
            }
            set
            {
                if ((this._location != value))
                {
                    this.OnLocationChanging(value);
                    this.RaiseDataMemberChanging("Location");
                    this.ValidateProperty("Location", value);
                    this._location = value;
                    this.RaiseDataMemberChanged("Location");
                    this.OnLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Owner' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                if ((this._owner != value))
                {
                    this.OnOwnerChanging(value);
                    this.RaiseDataMemberChanging("Owner");
                    this.ValidateProperty("Owner", value);
                    this._owner = value;
                    this.RaiseDataMemberChanged("Owner");
                    this.OnOwnerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaisePropertyChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._portID;
        }
    }
    
    /// <summary>
    /// The 'vwAllPlan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwAllPlan : Entity
    {
        
        private Nullable<double> _e1;
        
        private Nullable<double> _e2;
        
        private Nullable<double> _e3;
        
        private Nullable<double> _n1;
        
        private Nullable<double> _n2;
        
        private Nullable<double> _n3;
        
        private string _شماره_پرونده;
        
        private string _کاربری;
        
        private string _متقاضی;
        
        private string _نام_طرح;
        
        private string _نوع_درخواست;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnE1Changing(Nullable<double> value);
        partial void OnE1Changed();
        partial void OnE2Changing(Nullable<double> value);
        partial void OnE2Changed();
        partial void OnE3Changing(Nullable<double> value);
        partial void OnE3Changed();
        partial void OnN1Changing(Nullable<double> value);
        partial void OnN1Changed();
        partial void OnN2Changing(Nullable<double> value);
        partial void OnN2Changed();
        partial void OnN3Changing(Nullable<double> value);
        partial void OnN3Changed();
        partial void Onشماره_پروندهChanging(string value);
        partial void Onشماره_پروندهChanged();
        partial void OnکاربریChanging(string value);
        partial void OnکاربریChanged();
        partial void OnمتقاضیChanging(string value);
        partial void OnمتقاضیChanged();
        partial void Onنام_طرحChanging(string value);
        partial void Onنام_طرحChanged();
        partial void Onنوع_درخواستChanging(string value);
        partial void Onنوع_درخواستChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwAllPlan"/> class.
        /// </summary>
        public vwAllPlan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'E1' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E1
        {
            get
            {
                return this._e1;
            }
            set
            {
                if ((this._e1 != value))
                {
                    this.OnE1Changing(value);
                    this.RaiseDataMemberChanging("E1");
                    this.ValidateProperty("E1", value);
                    this._e1 = value;
                    this.RaiseDataMemberChanged("E1");
                    this.OnE1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E2' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E2
        {
            get
            {
                return this._e2;
            }
            set
            {
                if ((this._e2 != value))
                {
                    this.OnE2Changing(value);
                    this.RaiseDataMemberChanging("E2");
                    this.ValidateProperty("E2", value);
                    this._e2 = value;
                    this.RaiseDataMemberChanged("E2");
                    this.OnE2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'E3' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> E3
        {
            get
            {
                return this._e3;
            }
            set
            {
                if ((this._e3 != value))
                {
                    this.OnE3Changing(value);
                    this.RaiseDataMemberChanging("E3");
                    this.ValidateProperty("E3", value);
                    this._e3 = value;
                    this.RaiseDataMemberChanged("E3");
                    this.OnE3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N1' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N1
        {
            get
            {
                return this._n1;
            }
            set
            {
                if ((this._n1 != value))
                {
                    this.OnN1Changing(value);
                    this.RaiseDataMemberChanging("N1");
                    this.ValidateProperty("N1", value);
                    this._n1 = value;
                    this.RaiseDataMemberChanged("N1");
                    this.OnN1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N2' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N2
        {
            get
            {
                return this._n2;
            }
            set
            {
                if ((this._n2 != value))
                {
                    this.OnN2Changing(value);
                    this.RaiseDataMemberChanging("N2");
                    this.ValidateProperty("N2", value);
                    this._n2 = value;
                    this.RaiseDataMemberChanged("N2");
                    this.OnN2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'N3' value.
        /// </summary>
        [DataMember()]
        public Nullable<double> N3
        {
            get
            {
                return this._n3;
            }
            set
            {
                if ((this._n3 != value))
                {
                    this.OnN3Changing(value);
                    this.RaiseDataMemberChanging("N3");
                    this.ValidateProperty("N3", value);
                    this._n3 = value;
                    this.RaiseDataMemberChanged("N3");
                    this.OnN3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شماره_پرونده' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string شماره_پرونده
        {
            get
            {
                return this._شماره_پرونده;
            }
            set
            {
                if ((this._شماره_پرونده != value))
                {
                    this.Onشماره_پروندهChanging(value);
                    this.RaiseDataMemberChanging("شماره_پرونده");
                    this.ValidateProperty("شماره_پرونده", value);
                    this._شماره_پرونده = value;
                    this.RaiseDataMemberChanged("شماره_پرونده");
                    this.Onشماره_پروندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'کاربری' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string کاربری
        {
            get
            {
                return this._کاربری;
            }
            set
            {
                if ((this._کاربری != value))
                {
                    this.OnکاربریChanging(value);
                    this.RaiseDataMemberChanging("کاربری");
                    this.ValidateProperty("کاربری", value);
                    this._کاربری = value;
                    this.RaiseDataMemberChanged("کاربری");
                    this.OnکاربریChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'متقاضی' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string متقاضی
        {
            get
            {
                return this._متقاضی;
            }
            set
            {
                if ((this._متقاضی != value))
                {
                    this.OnمتقاضیChanging(value);
                    this.ValidateProperty("متقاضی", value);
                    this._متقاضی = value;
                    this.RaisePropertyChanged("متقاضی");
                    this.OnمتقاضیChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نام_طرح' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string نام_طرح
        {
            get
            {
                return this._نام_طرح;
            }
            set
            {
                if ((this._نام_طرح != value))
                {
                    this.Onنام_طرحChanging(value);
                    this.ValidateProperty("نام_طرح", value);
                    this._نام_طرح = value;
                    this.RaisePropertyChanged("نام_طرح");
                    this.Onنام_طرحChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نوع_درخواست' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string نوع_درخواست
        {
            get
            {
                return this._نوع_درخواست;
            }
            set
            {
                if ((this._نوع_درخواست != value))
                {
                    this.Onنوع_درخواستChanging(value);
                    this.RaiseDataMemberChanging("نوع_درخواست");
                    this.ValidateProperty("نوع_درخواست", value);
                    this._نوع_درخواست = value;
                    this.RaiseDataMemberChanged("نوع_درخواست");
                    this.Onنوع_درخواستChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._متقاضی == null) 
                        || (this._نام_طرح == null)))
            {
                return null;
            }
            return EntityKey.Create(this._متقاضی, this._نام_طرح);
        }
    }
    
    /// <summary>
    /// The 'vwDocFileList' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwDocFileList : Entity
    {
        
        private int _fileID;
        
        private string _fullName;
        
        private int _titleId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFileIDChanging(int value);
        partial void OnFileIDChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnTitleIdChanging(int value);
        partial void OnTitleIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwDocFileList"/> class.
        /// </summary>
        public vwDocFileList()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FileID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int FileID
        {
            get
            {
                return this._fileID;
            }
            set
            {
                if ((this._fileID != value))
                {
                    this.OnFileIDChanging(value);
                    this.ValidateProperty("FileID", value);
                    this._fileID = value;
                    this.RaisePropertyChanged("FileID");
                    this.OnFileIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FullName' value.
        /// </summary>
        [DataMember()]
        public string FullName
        {
            get
            {
                return this._fullName;
            }
            set
            {
                if ((this._fullName != value))
                {
                    this.OnFullNameChanging(value);
                    this.RaiseDataMemberChanging("FullName");
                    this.ValidateProperty("FullName", value);
                    this._fullName = value;
                    this.RaiseDataMemberChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleId' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int TitleId
        {
            get
            {
                return this._titleId;
            }
            set
            {
                if ((this._titleId != value))
                {
                    this.OnTitleIdChanging(value);
                    this.ValidateProperty("TitleId", value);
                    this._titleId = value;
                    this.RaisePropertyChanged("TitleId");
                    this.OnTitleIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._fileID, this._titleId);
        }
    }
    
    /// <summary>
    /// The 'vwFileList' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwFileList : Entity
    {
        
        private string _عنوان_طرح_پروژه;
        
        private string _موضوع;
        
        private string _نام_فایل;
        
        private string _نوع_فایل;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void Onعنوان_طرح_پروژهChanging(string value);
        partial void Onعنوان_طرح_پروژهChanged();
        partial void OnموضوعChanging(string value);
        partial void OnموضوعChanged();
        partial void Onنام_فایلChanging(string value);
        partial void Onنام_فایلChanged();
        partial void Onنوع_فایلChanging(string value);
        partial void Onنوع_فایلChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwFileList"/> class.
        /// </summary>
        public vwFileList()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'عنوان_طرح_پروژه' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string عنوان_طرح_پروژه
        {
            get
            {
                return this._عنوان_طرح_پروژه;
            }
            set
            {
                if ((this._عنوان_طرح_پروژه != value))
                {
                    this.Onعنوان_طرح_پروژهChanging(value);
                    this.ValidateProperty("عنوان_طرح_پروژه", value);
                    this._عنوان_طرح_پروژه = value;
                    this.RaisePropertyChanged("عنوان_طرح_پروژه");
                    this.Onعنوان_طرح_پروژهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'موضوع' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string موضوع
        {
            get
            {
                return this._موضوع;
            }
            set
            {
                if ((this._موضوع != value))
                {
                    this.OnموضوعChanging(value);
                    this.ValidateProperty("موضوع", value);
                    this._موضوع = value;
                    this.RaisePropertyChanged("موضوع");
                    this.OnموضوعChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نام_فایل' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string نام_فایل
        {
            get
            {
                return this._نام_فایل;
            }
            set
            {
                if ((this._نام_فایل != value))
                {
                    this.Onنام_فایلChanging(value);
                    this.ValidateProperty("نام_فایل", value);
                    this._نام_فایل = value;
                    this.RaisePropertyChanged("نام_فایل");
                    this.Onنام_فایلChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نوع_فایل' value.
        /// </summary>
        [DataMember()]
        [StringLength(5)]
        public string نوع_فایل
        {
            get
            {
                return this._نوع_فایل;
            }
            set
            {
                if ((this._نوع_فایل != value))
                {
                    this.Onنوع_فایلChanging(value);
                    this.RaiseDataMemberChanging("نوع_فایل");
                    this.ValidateProperty("نوع_فایل", value);
                    this._نوع_فایل = value;
                    this.RaiseDataMemberChanged("نوع_فایل");
                    this.Onنوع_فایلChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if ((((this._عنوان_طرح_پروژه == null) 
                        || (this._موضوع == null)) 
                        || (this._نام_فایل == null)))
            {
                return null;
            }
            return EntityKey.Create(this._عنوان_طرح_پروژه, this._موضوع, this._نام_فایل);
        }
    }
    
    /// <summary>
    /// The 'vwIcopmasReport' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwIcopmasReport : Entity
    {
        
        private int _id;
        
        private string _keyword_En;
        
        private string _keyword_FA;
        
        private string _name;
        
        private string _name_En;
        
        private string _name_FA;
        
        private string _type;
        
        private Nullable<int> _typeID;
        
        private string _writer_En;
        
        private string _writer_Fa;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnKeyword_EnChanging(string value);
        partial void OnKeyword_EnChanged();
        partial void OnKeyword_FAChanging(string value);
        partial void OnKeyword_FAChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnName_EnChanging(string value);
        partial void OnName_EnChanged();
        partial void OnName_FAChanging(string value);
        partial void OnName_FAChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnTypeIDChanging(Nullable<int> value);
        partial void OnTypeIDChanged();
        partial void OnWriter_EnChanging(string value);
        partial void OnWriter_EnChanged();
        partial void OnWriter_FaChanging(string value);
        partial void OnWriter_FaChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwIcopmasReport"/> class.
        /// </summary>
        public vwIcopmasReport()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keyword_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Keyword_En
        {
            get
            {
                return this._keyword_En;
            }
            set
            {
                if ((this._keyword_En != value))
                {
                    this.OnKeyword_EnChanging(value);
                    this.RaiseDataMemberChanging("Keyword_En");
                    this.ValidateProperty("Keyword_En", value);
                    this._keyword_En = value;
                    this.RaiseDataMemberChanged("Keyword_En");
                    this.OnKeyword_EnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Keyword_FA' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Keyword_FA
        {
            get
            {
                return this._keyword_FA;
            }
            set
            {
                if ((this._keyword_FA != value))
                {
                    this.OnKeyword_FAChanging(value);
                    this.RaiseDataMemberChanging("Keyword_FA");
                    this.ValidateProperty("Keyword_FA", value);
                    this._keyword_FA = value;
                    this.RaiseDataMemberChanged("Keyword_FA");
                    this.OnKeyword_FAChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaisePropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Name_En
        {
            get
            {
                return this._name_En;
            }
            set
            {
                if ((this._name_En != value))
                {
                    this.OnName_EnChanging(value);
                    this.RaiseDataMemberChanging("Name_En");
                    this.ValidateProperty("Name_En", value);
                    this._name_En = value;
                    this.RaiseDataMemberChanged("Name_En");
                    this.OnName_EnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name_FA' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string Name_FA
        {
            get
            {
                return this._name_FA;
            }
            set
            {
                if ((this._name_FA != value))
                {
                    this.OnName_FAChanging(value);
                    this.RaiseDataMemberChanging("Name_FA");
                    this.ValidateProperty("Name_FA", value);
                    this._name_FA = value;
                    this.RaiseDataMemberChanged("Name_FA");
                    this.OnName_FAChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Type' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OnTypeChanging(value);
                    this.ValidateProperty("Type", value);
                    this._type = value;
                    this.RaisePropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TypeID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> TypeID
        {
            get
            {
                return this._typeID;
            }
            set
            {
                if ((this._typeID != value))
                {
                    this.OnTypeIDChanging(value);
                    this.RaiseDataMemberChanging("TypeID");
                    this.ValidateProperty("TypeID", value);
                    this._typeID = value;
                    this.RaiseDataMemberChanged("TypeID");
                    this.OnTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Writer_En' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Writer_En
        {
            get
            {
                return this._writer_En;
            }
            set
            {
                if ((this._writer_En != value))
                {
                    this.OnWriter_EnChanging(value);
                    this.RaiseDataMemberChanging("Writer_En");
                    this.ValidateProperty("Writer_En", value);
                    this._writer_En = value;
                    this.RaiseDataMemberChanged("Writer_En");
                    this.OnWriter_EnChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Writer_Fa' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string Writer_Fa
        {
            get
            {
                return this._writer_Fa;
            }
            set
            {
                if ((this._writer_Fa != value))
                {
                    this.OnWriter_FaChanging(value);
                    this.RaiseDataMemberChanging("Writer_Fa");
                    this.ValidateProperty("Writer_Fa", value);
                    this._writer_Fa = value;
                    this.RaiseDataMemberChanged("Writer_Fa");
                    this.OnWriter_FaChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._name == null) 
                        || (this._type == null)))
            {
                return null;
            }
            return EntityKey.Create(this._id, this._name, this._type);
        }
    }
    
    /// <summary>
    /// The 'vwLinkDocs' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwLinkDocs : Entity
    {
        
        private Nullable<int> _dataID;
        
        private string _dataName;
        
        private string _fileExt;
        
        private string _fileFullName;
        
        private string _fileName;
        
        private string _fullName;
        
        private Nullable<int> _infoID;
        
        private string _infoName;
        
        private Nullable<int> _linkID;
        
        private Nullable<int> _ostanID;
        
        private string _ostanName;
        
        private Nullable<int> _portID;
        
        private string _portName;
        
        private Nullable<int> _prjID;
        
        private string _subjectEName;
        
        private string _subjectFName;
        
        private int _subjectID;
        
        private int _subjectParentID;
        
        private string _titleFName;
        
        private Nullable<int> _titleID;
        
        private Nullable<int> _zoneID;
        
        private string _zoneName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDataIDChanging(Nullable<int> value);
        partial void OnDataIDChanged();
        partial void OnDataNameChanging(string value);
        partial void OnDataNameChanged();
        partial void OnFileExtChanging(string value);
        partial void OnFileExtChanged();
        partial void OnFileFullNameChanging(string value);
        partial void OnFileFullNameChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnInfoIDChanging(Nullable<int> value);
        partial void OnInfoIDChanged();
        partial void OnInfoNameChanging(string value);
        partial void OnInfoNameChanged();
        partial void OnLinkIDChanging(Nullable<int> value);
        partial void OnLinkIDChanged();
        partial void OnOstanIDChanging(Nullable<int> value);
        partial void OnOstanIDChanged();
        partial void OnOstanNameChanging(string value);
        partial void OnOstanNameChanged();
        partial void OnPortIDChanging(Nullable<int> value);
        partial void OnPortIDChanged();
        partial void OnPortNameChanging(string value);
        partial void OnPortNameChanged();
        partial void OnPrjIDChanging(Nullable<int> value);
        partial void OnPrjIDChanged();
        partial void OnSubjectENameChanging(string value);
        partial void OnSubjectENameChanged();
        partial void OnSubjectFNameChanging(string value);
        partial void OnSubjectFNameChanged();
        partial void OnSubjectIDChanging(int value);
        partial void OnSubjectIDChanged();
        partial void OnSubjectParentIDChanging(int value);
        partial void OnSubjectParentIDChanged();
        partial void OnTitleFNameChanging(string value);
        partial void OnTitleFNameChanged();
        partial void OnTitleIDChanging(Nullable<int> value);
        partial void OnTitleIDChanged();
        partial void OnZoneIDChanging(Nullable<int> value);
        partial void OnZoneIDChanged();
        partial void OnZoneNameChanging(string value);
        partial void OnZoneNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwLinkDocs"/> class.
        /// </summary>
        public vwLinkDocs()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DataID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> DataID
        {
            get
            {
                return this._dataID;
            }
            set
            {
                if ((this._dataID != value))
                {
                    this.OnDataIDChanging(value);
                    this.RaiseDataMemberChanging("DataID");
                    this.ValidateProperty("DataID", value);
                    this._dataID = value;
                    this.RaiseDataMemberChanged("DataID");
                    this.OnDataIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DataName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="نوع داده", Order=3)]
        [StringLength(50)]
        public string DataName
        {
            get
            {
                return this._dataName;
            }
            set
            {
                if ((this._dataName != value))
                {
                    this.OnDataNameChanging(value);
                    this.RaiseDataMemberChanging("DataName");
                    this.ValidateProperty("DataName", value);
                    this._dataName = value;
                    this.RaiseDataMemberChanged("DataName");
                    this.OnDataNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileExt' value.
        /// </summary>
        [DataMember()]
        [Display(Name="فرمت فایل", Order=10)]
        [StringLength(20)]
        public string FileExt
        {
            get
            {
                return this._fileExt;
            }
            set
            {
                if ((this._fileExt != value))
                {
                    this.OnFileExtChanging(value);
                    this.RaiseDataMemberChanging("FileExt");
                    this.ValidateProperty("FileExt", value);
                    this._fileExt = value;
                    this.RaiseDataMemberChanged("FileExt");
                    this.OnFileExtChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileFullName' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public string FileFullName
        {
            get
            {
                return this._fileFullName;
            }
            set
            {
                if ((this._fileFullName != value))
                {
                    this.OnFileFullNameChanging(value);
                    this.RaiseDataMemberChanging("FileFullName");
                    this.ValidateProperty("FileFullName", value);
                    this._fileFullName = value;
                    this.RaiseDataMemberChanged("FileFullName");
                    this.OnFileFullNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FileName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="نام فایل", Order=1)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if ((this._fileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.ValidateProperty("FileName", value);
                    this._fileName = value;
                    this.RaisePropertyChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FullName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="شرح فایل", Order=9)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        public string FullName
        {
            get
            {
                return this._fullName;
            }
            set
            {
                if ((this._fullName != value))
                {
                    this.OnFullNameChanging(value);
                    this.ValidateProperty("FullName", value);
                    this._fullName = value;
                    this.RaisePropertyChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> InfoID
        {
            get
            {
                return this._infoID;
            }
            set
            {
                if ((this._infoID != value))
                {
                    this.OnInfoIDChanging(value);
                    this.RaiseDataMemberChanging("InfoID");
                    this.ValidateProperty("InfoID", value);
                    this._infoID = value;
                    this.RaiseDataMemberChanged("InfoID");
                    this.OnInfoIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'InfoName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="نوع اطلاعات", Order=2)]
        [StringLength(50)]
        public string InfoName
        {
            get
            {
                return this._infoName;
            }
            set
            {
                if ((this._infoName != value))
                {
                    this.OnInfoNameChanging(value);
                    this.RaiseDataMemberChanging("InfoName");
                    this.ValidateProperty("InfoName", value);
                    this._infoName = value;
                    this.RaiseDataMemberChanged("InfoName");
                    this.OnInfoNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LinkID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> LinkID
        {
            get
            {
                return this._linkID;
            }
            set
            {
                if ((this._linkID != value))
                {
                    this.OnLinkIDChanging(value);
                    this.RaiseDataMemberChanging("LinkID");
                    this.ValidateProperty("LinkID", value);
                    this._linkID = value;
                    this.RaiseDataMemberChanged("LinkID");
                    this.OnLinkIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OstanID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> OstanID
        {
            get
            {
                return this._ostanID;
            }
            set
            {
                if ((this._ostanID != value))
                {
                    this.OnOstanIDChanging(value);
                    this.RaiseDataMemberChanging("OstanID");
                    this.ValidateProperty("OstanID", value);
                    this._ostanID = value;
                    this.RaiseDataMemberChanged("OstanID");
                    this.OnOstanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OstanName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="استان", Order=6)]
        [StringLength(50)]
        public string OstanName
        {
            get
            {
                return this._ostanName;
            }
            set
            {
                if ((this._ostanName != value))
                {
                    this.OnOstanNameChanging(value);
                    this.RaiseDataMemberChanging("OstanName");
                    this.ValidateProperty("OstanName", value);
                    this._ostanName = value;
                    this.RaiseDataMemberChanged("OstanName");
                    this.OnOstanNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> PortID
        {
            get
            {
                return this._portID;
            }
            set
            {
                if ((this._portID != value))
                {
                    this.OnPortIDChanging(value);
                    this.RaiseDataMemberChanging("PortID");
                    this.ValidateProperty("PortID", value);
                    this._portID = value;
                    this.RaiseDataMemberChanged("PortID");
                    this.OnPortIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PortName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="بندر", Order=7)]
        [StringLength(50)]
        public string PortName
        {
            get
            {
                return this._portName;
            }
            set
            {
                if ((this._portName != value))
                {
                    this.OnPortNameChanging(value);
                    this.RaiseDataMemberChanging("PortName");
                    this.ValidateProperty("PortName", value);
                    this._portName = value;
                    this.RaiseDataMemberChanged("PortName");
                    this.OnPortNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PrjID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> PrjID
        {
            get
            {
                return this._prjID;
            }
            set
            {
                if ((this._prjID != value))
                {
                    this.OnPrjIDChanging(value);
                    this.RaiseDataMemberChanging("PrjID");
                    this.ValidateProperty("PrjID", value);
                    this._prjID = value;
                    this.RaiseDataMemberChanged("PrjID");
                    this.OnPrjIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectEName' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [StringLength(255)]
        public string SubjectEName
        {
            get
            {
                return this._subjectEName;
            }
            set
            {
                if ((this._subjectEName != value))
                {
                    this.OnSubjectENameChanging(value);
                    this.RaiseDataMemberChanging("SubjectEName");
                    this.ValidateProperty("SubjectEName", value);
                    this._subjectEName = value;
                    this.RaiseDataMemberChanged("SubjectEName");
                    this.OnSubjectENameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectFName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="دسته بندی موضوعی", Order=4)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string SubjectFName
        {
            get
            {
                return this._subjectFName;
            }
            set
            {
                if ((this._subjectFName != value))
                {
                    this.OnSubjectFNameChanging(value);
                    this.ValidateProperty("SubjectFName", value);
                    this._subjectFName = value;
                    this.RaisePropertyChanged("SubjectFName");
                    this.OnSubjectFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int SubjectID
        {
            get
            {
                return this._subjectID;
            }
            set
            {
                if ((this._subjectID != value))
                {
                    this.OnSubjectIDChanging(value);
                    this.ValidateProperty("SubjectID", value);
                    this._subjectID = value;
                    this.RaisePropertyChanged("SubjectID");
                    this.OnSubjectIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubjectParentID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int SubjectParentID
        {
            get
            {
                return this._subjectParentID;
            }
            set
            {
                if ((this._subjectParentID != value))
                {
                    this.OnSubjectParentIDChanging(value);
                    this.ValidateProperty("SubjectParentID", value);
                    this._subjectParentID = value;
                    this.RaisePropertyChanged("SubjectParentID");
                    this.OnSubjectParentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleFName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="دسته بندی کلان", Order=5)]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string TitleFName
        {
            get
            {
                return this._titleFName;
            }
            set
            {
                if ((this._titleFName != value))
                {
                    this.OnTitleFNameChanging(value);
                    this.ValidateProperty("TitleFName", value);
                    this._titleFName = value;
                    this.RaisePropertyChanged("TitleFName");
                    this.OnTitleFNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> TitleID
        {
            get
            {
                return this._titleID;
            }
            set
            {
                if ((this._titleID != value))
                {
                    this.OnTitleIDChanging(value);
                    this.RaiseDataMemberChanging("TitleID");
                    this.ValidateProperty("TitleID", value);
                    this._titleID = value;
                    this.RaiseDataMemberChanged("TitleID");
                    this.OnTitleIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ZoneID' value.
        /// </summary>
        [DataMember()]
        [Display(AutoGenerateField=false)]
        public Nullable<int> ZoneID
        {
            get
            {
                return this._zoneID;
            }
            set
            {
                if ((this._zoneID != value))
                {
                    this.OnZoneIDChanging(value);
                    this.RaiseDataMemberChanging("ZoneID");
                    this.ValidateProperty("ZoneID", value);
                    this._zoneID = value;
                    this.RaiseDataMemberChanged("ZoneID");
                    this.OnZoneIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ZoneName' value.
        /// </summary>
        [DataMember()]
        [Display(Name="ناحیه", Order=8)]
        [StringLength(50)]
        public string ZoneName
        {
            get
            {
                return this._zoneName;
            }
            set
            {
                if ((this._zoneName != value))
                {
                    this.OnZoneNameChanging(value);
                    this.RaiseDataMemberChanging("ZoneName");
                    this.ValidateProperty("ZoneName", value);
                    this._zoneName = value;
                    this.RaiseDataMemberChanged("ZoneName");
                    this.OnZoneNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((((this._fileName == null) 
                        || (this._fullName == null)) 
                        || (this._subjectFName == null)) 
                        || (this._titleFName == null)))
            {
                return null;
            }
            return EntityKey.Create(this._fileName, this._fullName, this._subjectFName, this._subjectID, this._subjectParentID, this._titleFName);
        }
    }
    
    /// <summary>
    /// The 'vwMojavez_Attach' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwMojavez_Attach : Entity
    {
        
        private string _filePath;
        
        private string _تاریخ_ثبت;
        
        private string _تاریخ_نامه;
        
        private string _شماره_ثبت;
        
        private string _شماره_نامه;
        
        private string _فرستنده;
        
        private int _کد_طرح;
        
        private int _کد_فایل;
        
        private string _کلمات_کلیدی;
        
        private string _گیرنده;
        
        private string _مستندات_مرتبط;
        
        private string _موضوع;
        
        private string _نام_فایل;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFilePathChanging(string value);
        partial void OnFilePathChanged();
        partial void Onتاریخ_ثبتChanging(string value);
        partial void Onتاریخ_ثبتChanged();
        partial void Onتاریخ_نامهChanging(string value);
        partial void Onتاریخ_نامهChanged();
        partial void Onشماره_ثبتChanging(string value);
        partial void Onشماره_ثبتChanged();
        partial void Onشماره_نامهChanging(string value);
        partial void Onشماره_نامهChanged();
        partial void OnفرستندهChanging(string value);
        partial void OnفرستندهChanged();
        partial void Onکد_طرحChanging(int value);
        partial void Onکد_طرحChanged();
        partial void Onکد_فایلChanging(int value);
        partial void Onکد_فایلChanged();
        partial void Onکلمات_کلیدیChanging(string value);
        partial void Onکلمات_کلیدیChanged();
        partial void OnگیرندهChanging(string value);
        partial void OnگیرندهChanged();
        partial void Onمستندات_مرتبطChanging(string value);
        partial void Onمستندات_مرتبطChanged();
        partial void OnموضوعChanging(string value);
        partial void OnموضوعChanged();
        partial void Onنام_فایلChanging(string value);
        partial void Onنام_فایلChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwMojavez_Attach"/> class.
        /// </summary>
        public vwMojavez_Attach()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FilePath' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if ((this._filePath != value))
                {
                    this.OnFilePathChanging(value);
                    this.ValidateProperty("FilePath", value);
                    this._filePath = value;
                    this.RaisePropertyChanged("FilePath");
                    this.OnFilePathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'تاریخ_ثبت' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string تاریخ_ثبت
        {
            get
            {
                return this._تاریخ_ثبت;
            }
            set
            {
                if ((this._تاریخ_ثبت != value))
                {
                    this.Onتاریخ_ثبتChanging(value);
                    this.RaiseDataMemberChanging("تاریخ_ثبت");
                    this.ValidateProperty("تاریخ_ثبت", value);
                    this._تاریخ_ثبت = value;
                    this.RaiseDataMemberChanged("تاریخ_ثبت");
                    this.Onتاریخ_ثبتChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'تاریخ_نامه' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string تاریخ_نامه
        {
            get
            {
                return this._تاریخ_نامه;
            }
            set
            {
                if ((this._تاریخ_نامه != value))
                {
                    this.Onتاریخ_نامهChanging(value);
                    this.RaiseDataMemberChanging("تاریخ_نامه");
                    this.ValidateProperty("تاریخ_نامه", value);
                    this._تاریخ_نامه = value;
                    this.RaiseDataMemberChanged("تاریخ_نامه");
                    this.Onتاریخ_نامهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شماره_ثبت' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string شماره_ثبت
        {
            get
            {
                return this._شماره_ثبت;
            }
            set
            {
                if ((this._شماره_ثبت != value))
                {
                    this.Onشماره_ثبتChanging(value);
                    this.RaiseDataMemberChanging("شماره_ثبت");
                    this.ValidateProperty("شماره_ثبت", value);
                    this._شماره_ثبت = value;
                    this.RaiseDataMemberChanged("شماره_ثبت");
                    this.Onشماره_ثبتChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شماره_نامه' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string شماره_نامه
        {
            get
            {
                return this._شماره_نامه;
            }
            set
            {
                if ((this._شماره_نامه != value))
                {
                    this.Onشماره_نامهChanging(value);
                    this.RaiseDataMemberChanging("شماره_نامه");
                    this.ValidateProperty("شماره_نامه", value);
                    this._شماره_نامه = value;
                    this.RaiseDataMemberChanged("شماره_نامه");
                    this.Onشماره_نامهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'فرستنده' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string فرستنده
        {
            get
            {
                return this._فرستنده;
            }
            set
            {
                if ((this._فرستنده != value))
                {
                    this.OnفرستندهChanging(value);
                    this.RaiseDataMemberChanging("فرستنده");
                    this.ValidateProperty("فرستنده", value);
                    this._فرستنده = value;
                    this.RaiseDataMemberChanged("فرستنده");
                    this.OnفرستندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'کد_طرح' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int کد_طرح
        {
            get
            {
                return this._کد_طرح;
            }
            set
            {
                if ((this._کد_طرح != value))
                {
                    this.Onکد_طرحChanging(value);
                    this.ValidateProperty("کد_طرح", value);
                    this._کد_طرح = value;
                    this.RaisePropertyChanged("کد_طرح");
                    this.Onکد_طرحChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'کد_فایل' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int کد_فایل
        {
            get
            {
                return this._کد_فایل;
            }
            set
            {
                if ((this._کد_فایل != value))
                {
                    this.Onکد_فایلChanging(value);
                    this.ValidateProperty("کد_فایل", value);
                    this._کد_فایل = value;
                    this.RaisePropertyChanged("کد_فایل");
                    this.Onکد_فایلChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'کلمات_کلیدی' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string کلمات_کلیدی
        {
            get
            {
                return this._کلمات_کلیدی;
            }
            set
            {
                if ((this._کلمات_کلیدی != value))
                {
                    this.Onکلمات_کلیدیChanging(value);
                    this.RaiseDataMemberChanging("کلمات_کلیدی");
                    this.ValidateProperty("کلمات_کلیدی", value);
                    this._کلمات_کلیدی = value;
                    this.RaiseDataMemberChanged("کلمات_کلیدی");
                    this.Onکلمات_کلیدیChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'گیرنده' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string گیرنده
        {
            get
            {
                return this._گیرنده;
            }
            set
            {
                if ((this._گیرنده != value))
                {
                    this.OnگیرندهChanging(value);
                    this.RaiseDataMemberChanging("گیرنده");
                    this.ValidateProperty("گیرنده", value);
                    this._گیرنده = value;
                    this.RaiseDataMemberChanged("گیرنده");
                    this.OnگیرندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'مستندات_مرتبط' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string مستندات_مرتبط
        {
            get
            {
                return this._مستندات_مرتبط;
            }
            set
            {
                if ((this._مستندات_مرتبط != value))
                {
                    this.Onمستندات_مرتبطChanging(value);
                    this.RaiseDataMemberChanging("مستندات_مرتبط");
                    this.ValidateProperty("مستندات_مرتبط", value);
                    this._مستندات_مرتبط = value;
                    this.RaiseDataMemberChanged("مستندات_مرتبط");
                    this.Onمستندات_مرتبطChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'موضوع' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string موضوع
        {
            get
            {
                return this._موضوع;
            }
            set
            {
                if ((this._موضوع != value))
                {
                    this.OnموضوعChanging(value);
                    this.ValidateProperty("موضوع", value);
                    this._موضوع = value;
                    this.RaisePropertyChanged("موضوع");
                    this.OnموضوعChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نام_فایل' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string نام_فایل
        {
            get
            {
                return this._نام_فایل;
            }
            set
            {
                if ((this._نام_فایل != value))
                {
                    this.Onنام_فایلChanging(value);
                    this.ValidateProperty("نام_فایل", value);
                    this._نام_فایل = value;
                    this.RaisePropertyChanged("نام_فایل");
                    this.Onنام_فایلChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if ((((this._filePath == null) 
                        || (this._موضوع == null)) 
                        || (this._نام_فایل == null)))
            {
                return null;
            }
            return EntityKey.Create(this._filePath, this._کد_طرح, this._کد_فایل, this._موضوع, this._نام_فایل);
        }
    }
    
    /// <summary>
    /// The 'vwMojavezReport' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwMojavezReport : Entity
    {
        
        private int _id;
        
        private string _استان;
        
        private string _اهداف;
        
        private bool _پیوست;
        
        private string _حوزه;
        
        private string _خلاصه;
        
        private string _درخواست_کننده;
        
        private string _شماره_پرونده;
        
        private string _شهر;
        
        private string _کاربری;
        
        private string _مشاور;
        
        private string _نام;
        
        private string _نوع_درخواست;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnاستانChanging(string value);
        partial void OnاستانChanged();
        partial void OnاهدافChanging(string value);
        partial void OnاهدافChanged();
        partial void OnپیوستChanging(bool value);
        partial void OnپیوستChanged();
        partial void OnحوزهChanging(string value);
        partial void OnحوزهChanged();
        partial void OnخلاصهChanging(string value);
        partial void OnخلاصهChanged();
        partial void Onدرخواست_کنندهChanging(string value);
        partial void Onدرخواست_کنندهChanged();
        partial void Onشماره_پروندهChanging(string value);
        partial void Onشماره_پروندهChanged();
        partial void OnشهرChanging(string value);
        partial void OnشهرChanged();
        partial void OnکاربریChanging(string value);
        partial void OnکاربریChanged();
        partial void OnمشاورChanging(string value);
        partial void OnمشاورChanged();
        partial void OnنامChanging(string value);
        partial void OnنامChanged();
        partial void Onنوع_درخواستChanging(string value);
        partial void Onنوع_درخواستChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwMojavezReport"/> class.
        /// </summary>
        public vwMojavezReport()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'استان' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string استان
        {
            get
            {
                return this._استان;
            }
            set
            {
                if ((this._استان != value))
                {
                    this.OnاستانChanging(value);
                    this.RaiseDataMemberChanging("استان");
                    this.ValidateProperty("استان", value);
                    this._استان = value;
                    this.RaiseDataMemberChanged("استان");
                    this.OnاستانChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'اهداف' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string اهداف
        {
            get
            {
                return this._اهداف;
            }
            set
            {
                if ((this._اهداف != value))
                {
                    this.OnاهدافChanging(value);
                    this.RaiseDataMemberChanging("اهداف");
                    this.ValidateProperty("اهداف", value);
                    this._اهداف = value;
                    this.RaiseDataMemberChanged("اهداف");
                    this.OnاهدافChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'پیوست' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public bool پیوست
        {
            get
            {
                return this._پیوست;
            }
            set
            {
                if ((this._پیوست != value))
                {
                    this.OnپیوستChanging(value);
                    this.ValidateProperty("پیوست", value);
                    this._پیوست = value;
                    this.RaisePropertyChanged("پیوست");
                    this.OnپیوستChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'حوزه' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string حوزه
        {
            get
            {
                return this._حوزه;
            }
            set
            {
                if ((this._حوزه != value))
                {
                    this.OnحوزهChanging(value);
                    this.RaiseDataMemberChanging("حوزه");
                    this.ValidateProperty("حوزه", value);
                    this._حوزه = value;
                    this.RaiseDataMemberChanged("حوزه");
                    this.OnحوزهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'خلاصه' value.
        /// </summary>
        [DataMember()]
        [StringLength(1024)]
        public string خلاصه
        {
            get
            {
                return this._خلاصه;
            }
            set
            {
                if ((this._خلاصه != value))
                {
                    this.OnخلاصهChanging(value);
                    this.RaiseDataMemberChanging("خلاصه");
                    this.ValidateProperty("خلاصه", value);
                    this._خلاصه = value;
                    this.RaiseDataMemberChanged("خلاصه");
                    this.OnخلاصهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'درخواست_کننده' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string درخواست_کننده
        {
            get
            {
                return this._درخواست_کننده;
            }
            set
            {
                if ((this._درخواست_کننده != value))
                {
                    this.Onدرخواست_کنندهChanging(value);
                    this.ValidateProperty("درخواست_کننده", value);
                    this._درخواست_کننده = value;
                    this.RaisePropertyChanged("درخواست_کننده");
                    this.Onدرخواست_کنندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شماره_پرونده' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string شماره_پرونده
        {
            get
            {
                return this._شماره_پرونده;
            }
            set
            {
                if ((this._شماره_پرونده != value))
                {
                    this.Onشماره_پروندهChanging(value);
                    this.RaiseDataMemberChanging("شماره_پرونده");
                    this.ValidateProperty("شماره_پرونده", value);
                    this._شماره_پرونده = value;
                    this.RaiseDataMemberChanged("شماره_پرونده");
                    this.Onشماره_پروندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شهر' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string شهر
        {
            get
            {
                return this._شهر;
            }
            set
            {
                if ((this._شهر != value))
                {
                    this.OnشهرChanging(value);
                    this.RaiseDataMemberChanging("شهر");
                    this.ValidateProperty("شهر", value);
                    this._شهر = value;
                    this.RaiseDataMemberChanged("شهر");
                    this.OnشهرChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'کاربری' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string کاربری
        {
            get
            {
                return this._کاربری;
            }
            set
            {
                if ((this._کاربری != value))
                {
                    this.OnکاربریChanging(value);
                    this.RaiseDataMemberChanging("کاربری");
                    this.ValidateProperty("کاربری", value);
                    this._کاربری = value;
                    this.RaiseDataMemberChanged("کاربری");
                    this.OnکاربریChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'مشاور' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string مشاور
        {
            get
            {
                return this._مشاور;
            }
            set
            {
                if ((this._مشاور != value))
                {
                    this.OnمشاورChanging(value);
                    this.RaiseDataMemberChanging("مشاور");
                    this.ValidateProperty("مشاور", value);
                    this._مشاور = value;
                    this.RaiseDataMemberChanged("مشاور");
                    this.OnمشاورChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نام' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string نام
        {
            get
            {
                return this._نام;
            }
            set
            {
                if ((this._نام != value))
                {
                    this.OnنامChanging(value);
                    this.ValidateProperty("نام", value);
                    this._نام = value;
                    this.RaisePropertyChanged("نام");
                    this.OnنامChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'نوع_درخواست' value.
        /// </summary>
        [DataMember()]
        [StringLength(256)]
        public string نوع_درخواست
        {
            get
            {
                return this._نوع_درخواست;
            }
            set
            {
                if ((this._نوع_درخواست != value))
                {
                    this.Onنوع_درخواستChanging(value);
                    this.RaiseDataMemberChanging("نوع_درخواست");
                    this.ValidateProperty("نوع_درخواست", value);
                    this._نوع_درخواست = value;
                    this.RaiseDataMemberChanged("نوع_درخواست");
                    this.Onنوع_درخواستChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._درخواست_کننده == null) 
                        || (this._نام == null)))
            {
                return null;
            }
            return EntityKey.Create(this._id, this._پیوست, this._درخواست_کننده, this._نام);
        }
    }
    
    /// <summary>
    /// The 'vwPlanReport' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwPlanReport : Entity
    {
        
        private int _id;
        
        private Nullable<bool> _isClosed;
        
        private Nullable<int> _mode;
        
        private string _استان;
        
        private string _تاریخ_تنظیم;
        
        private string _شماره_پرونده;
        
        private string _شهرستان;
        
        private string _عنوان;
        
        private string _متقاضی;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIsClosedChanging(Nullable<bool> value);
        partial void OnIsClosedChanged();
        partial void OnModeChanging(Nullable<int> value);
        partial void OnModeChanged();
        partial void OnاستانChanging(string value);
        partial void OnاستانChanged();
        partial void Onتاریخ_تنظیمChanging(string value);
        partial void Onتاریخ_تنظیمChanged();
        partial void Onشماره_پروندهChanging(string value);
        partial void Onشماره_پروندهChanged();
        partial void OnشهرستانChanging(string value);
        partial void OnشهرستانChanged();
        partial void OnعنوانChanging(string value);
        partial void OnعنوانChanged();
        partial void OnمتقاضیChanging(string value);
        partial void OnمتقاضیChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwPlanReport"/> class.
        /// </summary>
        public vwPlanReport()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsClosed' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsClosed
        {
            get
            {
                return this._isClosed;
            }
            set
            {
                if ((this._isClosed != value))
                {
                    this.OnIsClosedChanging(value);
                    this.RaiseDataMemberChanging("IsClosed");
                    this.ValidateProperty("IsClosed", value);
                    this._isClosed = value;
                    this.RaiseDataMemberChanged("IsClosed");
                    this.OnIsClosedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Mode' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> Mode
        {
            get
            {
                return this._mode;
            }
            set
            {
                if ((this._mode != value))
                {
                    this.OnModeChanging(value);
                    this.RaiseDataMemberChanging("Mode");
                    this.ValidateProperty("Mode", value);
                    this._mode = value;
                    this.RaiseDataMemberChanged("Mode");
                    this.OnModeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'استان' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(255)]
        public string استان
        {
            get
            {
                return this._استان;
            }
            set
            {
                if ((this._استان != value))
                {
                    this.OnاستانChanging(value);
                    this.ValidateProperty("استان", value);
                    this._استان = value;
                    this.RaisePropertyChanged("استان");
                    this.OnاستانChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'تاریخ_تنظیم' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string تاریخ_تنظیم
        {
            get
            {
                return this._تاریخ_تنظیم;
            }
            set
            {
                if ((this._تاریخ_تنظیم != value))
                {
                    this.Onتاریخ_تنظیمChanging(value);
                    this.RaiseDataMemberChanging("تاریخ_تنظیم");
                    this.ValidateProperty("تاریخ_تنظیم", value);
                    this._تاریخ_تنظیم = value;
                    this.RaiseDataMemberChanged("تاریخ_تنظیم");
                    this.Onتاریخ_تنظیمChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شماره_پرونده' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string شماره_پرونده
        {
            get
            {
                return this._شماره_پرونده;
            }
            set
            {
                if ((this._شماره_پرونده != value))
                {
                    this.Onشماره_پروندهChanging(value);
                    this.RaiseDataMemberChanging("شماره_پرونده");
                    this.ValidateProperty("شماره_پرونده", value);
                    this._شماره_پرونده = value;
                    this.RaiseDataMemberChanged("شماره_پرونده");
                    this.Onشماره_پروندهChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'شهرستان' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string شهرستان
        {
            get
            {
                return this._شهرستان;
            }
            set
            {
                if ((this._شهرستان != value))
                {
                    this.OnشهرستانChanging(value);
                    this.RaiseDataMemberChanging("شهرستان");
                    this.ValidateProperty("شهرستان", value);
                    this._شهرستان = value;
                    this.RaiseDataMemberChanged("شهرستان");
                    this.OnشهرستانChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'عنوان' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string عنوان
        {
            get
            {
                return this._عنوان;
            }
            set
            {
                if ((this._عنوان != value))
                {
                    this.OnعنوانChanging(value);
                    this.ValidateProperty("عنوان", value);
                    this._عنوان = value;
                    this.RaisePropertyChanged("عنوان");
                    this.OnعنوانChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'متقاضی' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string متقاضی
        {
            get
            {
                return this._متقاضی;
            }
            set
            {
                if ((this._متقاضی != value))
                {
                    this.OnمتقاضیChanging(value);
                    this.ValidateProperty("متقاضی", value);
                    this._متقاضی = value;
                    this.RaisePropertyChanged("متقاضی");
                    this.OnمتقاضیChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if ((((this._استان == null) 
                        || (this._عنوان == null)) 
                        || (this._متقاضی == null)))
            {
                return null;
            }
            return EntityKey.Create(this._id, this._استان, this._عنوان, this._متقاضی);
        }
    }
    
    /// <summary>
    /// The 'vwUsageType' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class vwUsageType : Entity
    {
        
        private int _id;
        
        private string _name;
        
        private int _reqID;
        
        private string _reqName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnReqIDChanging(int value);
        partial void OnReqIDChanged();
        partial void OnReqNameChanging(string value);
        partial void OnReqNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="vwUsageType"/> class.
        /// </summary>
        public vwUsageType()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Id' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIdChanging(value);
                    this.ValidateProperty("Id", value);
                    this._id = value;
                    this.RaisePropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaisePropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ReqID
        {
            get
            {
                return this._reqID;
            }
            set
            {
                if ((this._reqID != value))
                {
                    this.OnReqIDChanging(value);
                    this.ValidateProperty("ReqID", value);
                    this._reqID = value;
                    this.RaisePropertyChanged("ReqID");
                    this.OnReqIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReqName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(256)]
        public string ReqName
        {
            get
            {
                return this._reqName;
            }
            set
            {
                if ((this._reqName != value))
                {
                    this.OnReqNameChanging(value);
                    this.ValidateProperty("ReqName", value);
                    this._reqName = value;
                    this.RaisePropertyChanged("ReqName");
                    this.OnReqNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._name == null) 
                        || (this._reqName == null)))
            {
                return null;
            }
            return EntityKey.Create(this._id, this._name, this._reqID, this._reqName);
        }
    }
    
    /// <summary>
    /// The 'Zone' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web")]
    public sealed partial class Zone : Entity
    {
        
        private int _id;
        
        private string _name;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Zone"/> class.
        /// </summary>
        public Zone()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
}
namespace LanSysWebGIS.Web.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    
    
    /// <summary>
    /// The 'AuthenticationServiceUser' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/LanSysWebGIS.Web.Models")]
    public sealed partial class AuthenticationServiceUser : Entity
    {
        
        private string _comment;
        
        private DateTime _creationDate;
        
        private string _email;
        
        private bool _isApproved;
        
        private string _userName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnCreationDateChanging(DateTime value);
        partial void OnCreationDateChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationServiceUser"/> class.
        /// </summary>
        public AuthenticationServiceUser()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Comment' value.
        /// </summary>
        [DataMember()]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                if ((this._comment != value))
                {
                    this.OnCommentChanging(value);
                    this.RaiseDataMemberChanging("Comment");
                    this.ValidateProperty("Comment", value);
                    this._comment = value;
                    this.RaiseDataMemberChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CreationDate' value.
        /// </summary>
        [DataMember()]
        [Editable(false)]
        public DateTime CreationDate
        {
            get
            {
                return this._creationDate;
            }
            set
            {
                if ((this._creationDate != value))
                {
                    this.OnCreationDateChanging(value);
                    this.ValidateProperty("CreationDate", value);
                    this._creationDate = value;
                    this.RaisePropertyChanged("CreationDate");
                    this.OnCreationDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Email' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnEmailChanging(value);
                    this.ValidateProperty("Email", value);
                    this._email = value;
                    this.RaisePropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsApproved' value.
        /// </summary>
        [DataMember()]
        public bool IsApproved
        {
            get
            {
                return this._isApproved;
            }
            set
            {
                if ((this._isApproved != value))
                {
                    this.OnIsApprovedChanging(value);
                    this.RaiseDataMemberChanging("IsApproved");
                    this.ValidateProperty("IsApproved", value);
                    this._isApproved = value;
                    this.RaiseDataMemberChanged("IsApproved");
                    this.OnIsApprovedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                if ((this._userName != value))
                {
                    this.OnUserNameChanging(value);
                    this.ValidateProperty("UserName", value);
                    this._userName = value;
                    this.RaisePropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._email == null) 
                        || (this._userName == null)))
            {
                return null;
            }
            return EntityKey.Create(this._email, this._userName);
        }
    }
}
